[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mux"]

[project]
name = "mcp-mux"
version = "0.1.0"
description = "MCP router that simplifies tool access through semantic search"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Logan Donley"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "mcp[cli]>=1.12.3",
    "fastembed>=0.4.2",
    "fastapi>=0.115.6",
    "uvicorn[standard]>=0.34.0",
    "pydantic>=2.10.5",
    "pydantic-settings>=2.7.1",
    "httpx>=0.28.1",
    "numpy>=2.2.2",
    "websockets>=14.2",
    "click>=8.1.8",
    "rich>=13.9.5",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.403",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-timeout>=2.4.0",
    "ruff>=0.12.7",
]

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "standard"
pythonPlatform = "All"
reportMissingImports = true
venvPath = "."
venv = ".direnv/python-3.13"

[tool.ruff]
target-version = "py313"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "RUF", # Ruff-specific rules
]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 72
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]
timeout = 60

[tool.coverage.run]
source = ["src/mux"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/conftest.py",
    "*/.venv/*",
    "*/.direnv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[project.scripts]
mcp-mux = "mux.__main__:main"
