# redix_cloud.conf - Configuration file for Redix Healthcare Data Conversion API
# Copy this file to your deployment directory and customize the values below

[paths]
# Path to directory containing redix64.exe (Windows) or redix64 (Linux)
redix_libs_path = c:/program files/redix format converter engine
# Base working directory for API operations
base_work_dir = D:/ai/api

[server]
# Server binding configuration
host = 0.0.0.0
port = 8000
# API metadata
title = Redix Solutions: Healthcare EDI & Data Transformation
description = Convert healthcare data between different formats.
version = 2.0.0

[processing]
# Timeout for redix executable calls (seconds)
subprocess_timeout = 30
# Default file extensions
output_file_extension = .txt
error_file_extension = .txt

[security]
# CORS configuration - comma separated list of allowed origins
# Use * for all origins (development only)
# Production example: https://yourdomain.com,https://api.yourdomain.com
cors_origins = *
# Set to true to allow credentials in CORS requests
cors_allow_credentials = true

[logging]
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
log_level = DEBUG
# Log file path (optional - leave empty to log to console only)
log_file = 

[directories]
# Subdirectory names under base_work_dir
input_dir = input
output_dir = output
error_dir = error
ack_dir = ack
staging_dir = staging
rules_dir = rules
archieve_dir = archive

[features]
# Enable/disable API documentation
enable_swagger_ui = true
# Swagger UI path
docs_url = /docs
# Enable file cleanup after processing
cleanup_temp_files = true


[staging_profiles]
# Specify the default profile to use if 'config_profile' is not provided in the API request.
# This must match a sub-section name defined below.
default_staging_profile = x12_837P_default_profile

# Define individual staging conversion profiles as sub-sections using the format:
# [staging_profiles.<profile_name>]
# All parameters within a profile should correspond to Redix executable arguments.
# Mandatory parameters: conversion_flag, ifd_file, ofd_file
# Optional parameters: warning_level, segment_terminator, element_separator,
#                      composite_separator, release_character (these will use
#                      the API's default if not specified in the profile)

[staging_profiles.x12_837P_default_profile]
conversion_flag = e
ifd_file = RMap_5_837P.ifd
ofd_file = RMap_5_837P_to_HIPAA_5010_A1.ofd
warning_level = 1
segment_terminator = new line
element_separator = *
composite_separator = :
release_character = ?
user_data = 0*\\**:*?
# user_data is typically per-transaction, so it's not ideal for a profile default.
# It can still be overridden in the API request if needed.

[staging_profiles.rmap_834_to_834]
conversion_flag = e
ifd_file = RMap_5_834.ifd
ofd_file = RMap_5_834_to_HIPAA_5010_A1.ofd
warning_level = 1
segment_terminator = new line
element_separator = *
composite_separator = :
release_character = \
user_data = 0*\\**:*?

[staging_profiles.837i_to_ub04_pdf]
conversion_flag = x
ifd_file = hipaa_5010_a2_837_inst_misa.ifd
ofd_file = PDF_CMS-UB04-VIEW-5010A2-PDFperClaim_red.ofd
warning_level = 1
segment_terminator = new line
element_separator = *
composite_separator = :
release_character = \
user_data = ub04.idx


# Add more profiles as needed following the [staging_profiles.<profile_name>] format
# Example:
; [staging_profiles.edi_inbound_997]
; conversion_flag = e
; ifd_file = inbound_edi_map.ifd
; ofd_file = 997_acknowledgment.ofd
; warning_level = 0

