[build-system]
requires = [
    "flit_core ==3.12.0"
]
build-backend = "flit_core.buildapi"

[project]
name = "eopf"
authors = [{ name = "Sopra-CS" }]
dynamic = ["description", "version"]
readme = "README.rst"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
    "Typing :: Typed",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic >=2.5.0",
    "numcodecs == 0.15.1", # asgard
    "overrides == 7.7.0", # sentineltoolbox
    "Jinja2 ==3.1.6",
    "sentineltoolbox >=0.4.0", # sentineltoolbox
    "beautifulsoup4 == 4.12.3",
    "future == 1.0.0",
    "dacite == 1.9.2",
    "dask[distributed] ==2024.5.2",
    "dask[array] ==2024.5.2",
    "dask_image ==2024.5.2",
    "distributed ==2024.5.2",
    "xarray ==2024.11.0",
    "netcdf4 ==1.7.2",
    "numpy >= 2.1.0",
    "zarr ==2.18.4",
    "fsspec ==2024.5.0",
    "lxml ==4.9.4",
    "cfgrib ==0.9.15.0",
    "rioxarray ==0.15.5",
    "rasterio ==1.3.10",
    "kerchunk == 0.2.7",
    "h5py ==3.13.0",
    "s3fs ==2024.5.0",
    "click ==8.1.7",
    "starlette[full] ==0.40.0",
    "fastapi ==0.115.5",
    "uvicorn[standard] ==0.34.0",
    "requests ==2.32.4",
    "aiokafka ==0.12.0",
    "pytz ==2024.1",
    "Shapely ==2.0.7",
    "importlib-metadata ==6.8.0",
    "rio-cogeo ==5.4.1",
    "toml ==0.10.2",
    "configparser ==7.0.0",
    "deepdiff == 8.0.1",
    "jsonschema == 4.23.0",
    "shapely",
    "geopandas"
]
license = { file = "LICENSE" }

[project.urls]
Homepage = "https://eopf.copernicus.eu/"
Documentation = "https://cpm.pages.eopf.copernicus.eu/eopf-cpm/main/index.html"
Repository = "https://gitlab.eopf.copernicus.eu/cpm/eopf-cpm.git"
Issues = "https://gitlab.eopf.copernicus.eu/cpm/eopf-cpm/-/issues"
Changelog = "https://gitlab.eopf.copernicus.eu/cpm/eopf-cpm/-/blob/main/CHANGELOG.md"

[project.optional-dependencies]
cluster-plugin = [
    "dask-jobqueue",
    "dask-gateway",
]
tests = [
    "pytest ==7.4.3",
    "pytest-cov ==4.1.0",
    "hypothesis ==6.88.4",
    "pytest-lazy-fixture ==0.6.3",
    "pytest-error-for-skips ==2.0.2",
    "eopf[cluster-plugin]",
]
linter = [
    "flake8 ==7.3.0"
]
typing = [
    "mypy ==1.16.1",
    "types-jsonschema==4.23.0.20241208",
    "types-python-dateutil ==2.8.19.14",
    "types-pytz ==2023.3.1.1",
    "types-setuptools ==68.2.0.1",
    "types-toml ==0.10.8.7",
    "lxml-stubs",
    "eopf[cluster-plugin]",
]
formatter = [
    "black ==25.1.0",
    "isort ==6.0.1",
]
security = [
    "bandit ==1.8.5",
    "safety ==3.5.2",
]
notebook = [
    "IPython",
    "fonttools >=4.43.0", # deps-sec
    "bokeh ==3.4.1",
    "graphviz ==0.20.3",
    "jupyter ==1.1.1",
    "matplotlib ==3.10.1",
]
# The documentation dependencies are sorted in alphabetical
# order to be easily compared with the dependency of the
# EOPF Python build environment
# (https://gitlab.eopf.copernicus.eu/sde/python-build-environment/)
# Please insert new dependencies respecting the order.
doc = [
    "GitPython >= 3.1.41", # deps-sec
    "breathe == 4.35.0",
    "eopf[cluster-plugin]",
    "eopf[notebook]",
    "jupyter-sphinx == 0.4.0", # jupyter-sphinx 0.5.3 depends on sphinx >= 7
    "jupytext == 1.16.1",
    "linkify-it-py == 2.0.3",
    "mdutils == 1.6.0",
    "myst-nb == 1.1.0",
    "nbsphinx == 0.9.3",
    "numpydoc == 1.7.0",
    "sphinx == 6.2.1",
    "sphinx-autodoc-typehints == 1.23.0", # sphinx-autodoc-typehints > 1.23.0 (1.24, 1.25 and 2.1) depends on sphinx >= 7.3.5
    "sphinx-book-theme == 1.0.1",
    "sphinxcontrib-apidoc == 0.5.0",
    "sphinxcontrib-spelling == 8.0.0",
    "sphinxcontrib-plantuml == 0.29",
    "sphinxcontrib-mermaid == 1.0.0",
    "sphinx-copybutton == 0.5.2",
    "sphinx-inline-tabs == 2023.4.21",
    "sphinx-panels == 0.4.1",
    "sphinx-togglebutton == 0.3.2",
    "sqlalchemy >= 2.0.0b1",
    "tomark == 0.1.4",
    "urllib3 >= 1.26.17", # deps-sec
    "python-gitlab == 4.4.0",
]
complexity = [
    "xenon ==0.9.3",
]

doc-cov = [
    "tqdm >= 4.66.3", # deps-sec,
    "docstr-coverage ==2.3.2",
]
dev = [
    "pre-commit ==3.5.0",
    "eopf[complexity,tests,doc-cov]",
    "eopf[linter,typing,formatter]",
    "eopf[security,doc,notebook]",
    "eopf[cluster-plugin]",
]

[project.scripts]
eopf = "eopf.cli.cli:eopf_cli"

[project.entry-points."eopf.cli"]
trigger = "eopf.cli.cli_triggering_triggers:EOCLITriggeringTrigger"
web-server = "eopf.cli.services.web_server:EOWebServer"
kafka-consumer = "eopf.cli.services.kafka_server:EOKafkaServer"
qualitycontrol = "eopf.cli.cli_qualitycontrol_triggers:EOCLIQualityControlTrigger"
merge = "eopf.cli.cli_merge:EOCLIMerge"
convert = "eopf.cli.cli_convert:EOCLIConvert"
model = "eopf.cli.cli_model:EOCLIModel"

[project.entry-points."eopf.store.mapping_folder"]
default = "eopf.store.mapping"

[tool.isort]
profile = "black"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.pytest.ini_options]
markers = [
    "integration",
    "unit",
    "need_files",
]
