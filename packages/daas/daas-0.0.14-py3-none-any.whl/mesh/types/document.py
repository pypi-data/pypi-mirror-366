#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from mesh.macro import idx, serializable
from typing import Dict

@serializable
class Document:

    @idx(index = 0, name = "metadata")
    def metadata(self) -> Dict[str, str]:
        """
        """
        return {}

    @idx(index = 1, name = "content")
    def content(self) -> str:
        """
        """
        return ""

    @idx(index = 2, name = "timestamp")
    def timestamp(self) -> int:
        """
        """
        return 0



@serializable
class DocumentMetadata:

    @idx(index = 0, name = "queries")
    def queries(self) -> Dict[str, str]:
        """
        """
        return {}

    @idx(index = 1, name = "start")
    def start(self) -> float:
        """
        """
        return 0

    @idx(index = 2, name = "end")
    def end(self) -> float:
        """
        """
        return 0

    @idx(index = 3, name = "limit")
    def limit(self) -> int:
        """
        """
        return 0

    @idx(index = 4, name = "step")
    def step(self) -> str:
        """
        """
        return ""

    @idx(index = 5, name = "direction")
    def direction(self) -> str:
        """
        """
        return ""

    @idx(index = 6, name = "route_key")
    def route_key(self) -> str:
        """
        """
        return ""

