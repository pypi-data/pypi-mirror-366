#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from datetime import timedelta
from mesh.macro import mpi, spi

@spi("mpi")
class Locker(ABC):

    @abstractmethod
    @mpi("mesh.locker.w.lock")
    async def lock(self, rid: str, timeout: timedelta) -> bool:
        """
        Lock create write lock.
        """
        pass

    @abstractmethod
    @mpi("mesh.locker.w.unlock")
    async def unlock(self, rid: str) -> None:
        """
        Unlock release write lock.
        """
        pass

    @abstractmethod
    @mpi("mesh.locker.r.lock")
    async def read_lock(self, rid: str, timeout: timedelta) -> bool:
        """
        ReadLock create read lock.
        """
        pass

    @abstractmethod
    @mpi("mesh.locker.r.unlock")
    async def read_unlock(self, rid: str) -> None:
        """
        ReadUnlock release read lock.
        """
        pass
