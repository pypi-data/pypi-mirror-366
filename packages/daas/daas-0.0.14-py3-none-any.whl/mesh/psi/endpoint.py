#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from mesh.macro import A, B, mpi, spi
from typing import List, Generic

@spi("mpi")
class Endpoint(ABC):

    @abstractmethod
    @mpi("${mesh.uname}")
    async def fuzzy(self, buff: bytes) -> bytes:
        """
        Fuzzy call with generic param
        In multi returns, it's an array.
        """
        pass


class EndpointSticker(ABC, Generic[A, B]):

    @abstractmethod
    async def stick(self, varg: A) -> B:
        """
        Stick with generic param
        """
        pass
