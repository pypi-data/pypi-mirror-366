#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from mesh.macro import mpi, spi
from mesh.types import Registration
from typing import Any, List

@spi("mpi")
class Registry(ABC):

    @abstractmethod
    @mpi("mesh.registry.put")
    async def register(self, registration: Registration[Any]) -> None:
        """
        Register
        """
        pass

    @abstractmethod
    @mpi("mesh.registry.puts")
    async def registers(self, registrations: List[Registration[Any]]) -> None:
        """
        Registers
        """
        pass

    @abstractmethod
    @mpi("mesh.registry.remove")
    async def unregister(self, registration: Registration[Any]) -> None:
        """
        Unregister
        """
        pass

    @abstractmethod
    @mpi("mesh.registry.export")
    async def export(self, kind: str) -> List[Registration[Any]]:
        """
        Export
        """
        pass
