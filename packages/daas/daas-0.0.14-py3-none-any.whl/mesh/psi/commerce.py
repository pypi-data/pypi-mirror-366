#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from mesh.macro import mpi, spi
from mesh.types import CommerceEnviron, CommerceLicense, License
from typing import List

@spi("mpi")
class Commercialize(ABC):

    @abstractmethod
    @mpi("mesh.license.sign")
    async def sign(self, lsr: License) -> CommerceLicense:
        """
        Sign license, only glab has permission to sign.
        """
        pass

    @abstractmethod
    @mpi("mesh.license.history")
    async def history(self, inst_id: str) -> List[CommerceLicense]:
        """
        History list the sign license in history, the latest is the first index.
        """
        pass

    @abstractmethod
    @mpi("mesh.net.issued")
    async def issued(self, name: str, kind: str, cname: str) -> CommerceEnviron:
        """
        Issued mesh node identity.
        """
        pass

    @abstractmethod
    @mpi("mesh.net.dump")
    async def dump(self, node_id: str) -> List[CommerceEnviron]:
        """
        Dump the node identity.
        """
        pass
