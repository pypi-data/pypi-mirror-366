#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from mesh.macro import mpi, spi
from mesh.types import License
from typing import Dict

@spi("mpi")
class Licenser(ABC):

    @abstractmethod
    @mpi(flags = 2, name = "mesh.license.imports")
    async def imports(self, license: str) -> None:
        """
        Imports the licenses.
        """
        pass

    @abstractmethod
    @mpi(flags = 2, name = "mesh.license.exports")
    async def exports(self,) -> str:
        """
        Exports the licenses.
        """
        pass

    @abstractmethod
    @mpi(flags = 2, name = "mesh.license.explain")
    async def explain(self,) -> License:
        """
        Explain the license.
        """
        pass

    @abstractmethod
    @mpi(flags = 2, name = "mesh.license.verify")
    async def verify(self,) -> int:
        """
        Verify the license.
        """
        pass

    @abstractmethod
    @mpi(flags = 2, name = "mesh.license.features")
    async def features(self,) -> Dict[str, str]:
        """
        Features is license features.
        """
        pass
