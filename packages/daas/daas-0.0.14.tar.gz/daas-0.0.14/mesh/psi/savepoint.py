#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from mesh.macro import mpi, spi
from mesh.types import DtxBranch, DtxDefinition
from typing import List

@spi("mpi")
class Savepoint(ABC):

    @abstractmethod
    @mpi("mesh.savepoint.begin")
    async def begin(self, definition: DtxDefinition) -> str:
        """
        Begin a savepoint, this method will blocked a database transaction connection with timeout.
        """
        pass

    @abstractmethod
    @mpi("mesh.savepoint.commit")
    async def commit(self, xid: str) -> None:
        """
        Commit a savepoint.
        """
        pass

    @abstractmethod
    @mpi("mesh.savepoint.rollback")
    async def rollback(self, xid: str) -> None:
        """
        Rollback a savepoint.
        """
        pass

    @abstractmethod
    @mpi("mesh.savepoint.execute")
    async def execute(self, branch: DtxBranch) -> bytes:
        """
        Execute a savepoint sql.
        """
        pass

    @abstractmethod
    @mpi("mesh.savepoint.redo")
    async def redo(self, commit: bytes) -> None:
        """
        Redo dolog void redo before commit.
        """
        pass
