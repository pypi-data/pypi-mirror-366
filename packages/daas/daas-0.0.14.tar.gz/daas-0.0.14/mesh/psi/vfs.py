#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from abc import ABC, abstractmethod
from mesh.macro import mpi, spi
from mesh.types import FileEntry
from typing import List

@spi("mpi")
class FileSystem(ABC):

    @abstractmethod
    @mpi("mesh.fs.exist")
    async def exist(self, path: str) -> bool:
        """
        Exist Check file path exist in system
        """
        pass

    @abstractmethod
    @mpi("mesh.fs.mkdir")
    async def mkdir(self, path: str) -> None:
        """
        Mkdir
        """
        pass

    @abstractmethod
    @mpi("mesh.fs.write")
    async def write(self, path: str, buff: bytes) -> None:
        """
        Write
        """
        pass

    @abstractmethod
    @mpi("mesh.fs.read")
    async def read(self, path: str) -> bytes:
        """
        Read from the path.
        """
        pass

    @abstractmethod
    @mpi("mesh.fs.remove")
    async def remove(self, path: str) -> None:
        """
        Remove directories.
        """
        pass

    @abstractmethod
    @mpi("mesh.fs.delete")
    async def delete(self, paths: List[str]) -> None:
        """
        Delete files.
        """
        pass

    @abstractmethod
    @mpi("mesh.fs.ls")
    async def list(self, path: str) -> FileEntry:
        """
        List all file trees.
        """
        pass
