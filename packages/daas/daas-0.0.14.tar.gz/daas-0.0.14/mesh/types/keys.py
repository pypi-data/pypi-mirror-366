#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from datetime import datetime
from mesh.macro import idx, serializable
from typing import List

@serializable
class Keys:

    @idx(index = 0, name = "kind")
    def kind(self) -> str:
        """
        enumeration in KeyKind
        """
        return ""

    @idx(index = 1, name = "key")
    def key(self) -> str:
        """
        """
        return ""



@serializable
class KeyCsr:

    @idx(index = 0, name = "algo")
    def algo(self) -> str:
        """
        """
        return ""

    @idx(index = 1, name = "domain")
    def domain(self) -> str:
        """
        """
        return ""

    @idx(index = 2, name = "subject")
    def subject(self) -> str:
        """
        """
        return ""

    @idx(index = 3, name = "length")
    def length(self) -> int:
        """
        """
        return 0

    @idx(index = 4, name = "expire_at")
    def expire_at(self) -> datetime | None:
        """
        """
        return None

    @idx(index = 5, name = "mail")
    def mail(self) -> str:
        """
        """
        return ""

    @idx(index = 6, name = "is_ca")
    def is_ca(self) -> bool:
        """
        """
        return False

    @idx(index = 7, name = "ca_cert")
    def ca_cert(self) -> str:
        """
        """
        return ""

    @idx(index = 8, name = "ca_key")
    def ca_key(self) -> str:
        """
        """
        return ""

    @idx(index = 9, name = "ips")
    def ips(self) -> List[str]:
        """
        """
        pass

