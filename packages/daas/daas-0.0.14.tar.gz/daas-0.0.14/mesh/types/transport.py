#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from mesh.macro import idx, serializable
from typing import List

@serializable
class Payload:

    @idx(index = 0, name = "idx")
    def index(self) -> int:
        """
        Packet idx
        """
        return 0

    @idx(index = 1, name = "flag")
    def flag(self) -> int:
        """
        Packet flag in TCPHeader
        """
        return 0

    @idx(index = 2, name = "body")
    def body(self) -> bytes:
        """
        Packet body
        """
        return b''



@serializable
class Packet(Payload):

    @idx(index = 0, name = "bucket")
    def bucket(self) -> str:
        """
        Packet bucket
        """
        return ""

    @idx(index = 1, name = "src")
    def src(self) -> str:
        """
        Packet source
        """
        return ""

    @idx(index = 2, name = "rid")
    def rid(self) -> str:
        """
        Packet reference
        """
        return ""

    @idx(index = 3, name = "dst")
    def dst(self) -> str:
        """
        Packet destination
        """
        return ""

    @idx(index = 4, name = "sni")
    def sni(self) -> str:
        """
        Packet SNI
        """
        return ""

    @idx(index = 5, name = "addr")
    def addr(self) -> str:
        """
        Packet net address
        """
        return ""

