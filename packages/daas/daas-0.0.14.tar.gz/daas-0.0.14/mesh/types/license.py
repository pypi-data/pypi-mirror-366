#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from datetime import datetime
from mesh.macro import idx, serializable
from mesh.types.environ import Environ
from typing import List

@serializable
class License:

    @idx(index = 0, name = "version")
    def version(self) -> str:
        """
        License version
        """
        return ""

    @idx(index = 1, name = "level")
    def level(self) -> int:
        """
        License level
        """
        return 0

    @idx(index = 2, name = "name")
    def name(self) -> str:
        """
        License name
        """
        return ""

    @idx(index = 3, name = "create_by")
    def create_by(self) -> str:
        """
        License creator name
        """
        return ""

    @idx(index = 4, name = "create_at")
    def create_at(self) -> int:
        """
        License create time
        """
        return 0

    @idx(index = 5, name = "active_at")
    def active_at(self) -> int:
        """
        License create by
        """
        return 0

    @idx(index = 6, name = "factors")
    def factor(self) -> str:
        """
        License factors
        """
        return ""

    @idx(index = 7, name = "signature")
    def signature(self) -> str:
        """
        License signature
        """
        return ""

    @idx(index = 8, name = "muid")
    def muid(self) -> str:
        """
        Licensed identity
        """
        return ""

    @idx(index = 9, name = "server")
    def server(self) -> str:
        """
        License server
        """
        return ""

    @idx(index = 10, name = "crt")
    def crt(self) -> str:
        """
        License certification
        """
        return ""

    @idx(index = 11, name = "group")
    def group(self) -> List[str]:
        """
        License group
        """
        pass

    @idx(index = 12, name = "replicas")
    def replicas(self) -> int:
        """
        License max replicas
        """
        return 0

    @idx(index = 13, name = "max_cooperators")
    def max_cooperators(self) -> int:
        """
        License max cooperators
        """
        return 0

    @idx(index = 14, name = "max_tenants")
    def max_tenants(self) -> int:
        """
        License max tenants
        """
        return 0

    @idx(index = 15, name = "max_users")
    def max_users(self) -> int:
        """
        License max users
        """
        return 0

    @idx(index = 16, name = "max_mills")
    def max_mills(self) -> int:
        """
        License max mills
        """
        return 0

    @idx(index = 17, name = "white_urns")
    def white_urn(self) -> List[str]:
        """
        License white urns
        """
        pass

    @idx(index = 18, name = "black_urns")
    def black_urn(self) -> List[str]:
        """
        License black urns
        """
        pass

    @idx(index = 19, name = "super_urns")
    def super_urn(self) -> List[str]:
        """
        License supervise urns
        """
        pass



@serializable
class CommerceLicense:

    @idx(index = 0, name = "cipher")
    def cipher(self) -> str:
        """
        License cipher
        """
        return ""

    @idx(index = 1, name = "explain")
    def explain(self) -> License:
        """
        License explain
        """
        pass

    @idx(index = 2, name = "create_at")
    def create_at(self) -> datetime | None:
        """
        License create time
        """
        return None



@serializable
class CommerceEnviron:

    @idx(index = 0, name = "cipher")
    def cipher(self) -> str:
        """
        Node cipher
        """
        return ""

    @idx(index = 1, name = "explain")
    def explain(self) -> Environ:
        """
        Node explain
        """
        pass

    @idx(index = 2, name = "node_key")
    def node_key(self) -> str:
        """
        Node private key
        """
        return ""

