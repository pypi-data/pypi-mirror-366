#
# Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
# Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#

# Code generated by mesh; DO NOT EDIT.

from mesh.macro import idx, serializable
from mesh.types.builtin import Topic
from mesh.types.entity import Body
from mesh.types.principal import Principal

@serializable
class Event:

    @idx(index = 0, name = "version")
    def version(self) -> str:
        """
        """
        return ""

    @idx(index = 1, name = "tid")
    def tid(self) -> str:
        """
        """
        return ""

    @idx(index = 2, name = "sid")
    def sid(self) -> str:
        """
        """
        return ""

    @idx(index = 3, name = "eid")
    def eid(self) -> str:
        """
        """
        return ""

    @idx(index = 4, name = "mid")
    def mid(self) -> str:
        """
        """
        return ""

    @idx(index = 5, name = "timestamp")
    def timestamp(self) -> str:
        """
        """
        return ""

    @idx(index = 6, name = "source")
    def source(self) -> Principal:
        """
        """
        pass

    @idx(index = 7, name = "target")
    def target(self) -> Principal:
        """
        """
        pass

    @idx(index = 8, name = "binding")
    def binding(self) -> Topic:
        """
        """
        pass

    @idx(index = 9, name = "entity")
    def entity(self) -> Body:
        """
        """
        pass



@serializable
class Timeout:

    @idx(index = 0, name = "task_id")
    def task_id(self) -> str:
        """
        """
        return ""

    @idx(index = 1, name = "binding")
    def binding(self) -> Topic:
        """
        """
        pass

    @idx(index = 2, name = "status")
    def status(self) -> int:
        """
        """
        return 0

    @idx(index = 3, name = "create_at")
    def create_at(self) -> int:
        """
        """
        return 0

    @idx(index = 4, name = "invoke_at")
    def invoke_at(self) -> int:
        """
        """
        return 0

    @idx(index = 5, name = "entity")
    def entity(self) -> Body:
        """
        """
        pass

