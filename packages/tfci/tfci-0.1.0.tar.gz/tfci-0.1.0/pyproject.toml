[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tfci"
version = "0.1.0"
description = "Time Forecasting CI - 시간 예측 CI 라이브러리"
readme = "README.md"
license = {text = "rosci671233"}
authors = [
    {name = "rosci671233", email = "rosci671233@gmail.com"}
]
maintainers = [
    {name = "rosci671233", email = "rosci671233@gmail.com"}
]
keywords = ["forecasting", "time-series", "prediction", "ci"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pyyaml>=6.0",
    "optuna>=3.0.0",
    "plotly>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/rosci671233/tfci"
Repository = "https://github.com/rosci671233/tfci"
Documentation = "https://github.com/rosci671233/tfci#readme"
"Bug Tracker" = "https://github.com/rosci671233/tfci/issues"

[project.scripts]
tfci = "tfci:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "config*", "data*", "model*", "tfci*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tfci",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["lib_tfci.py", "core", "config", "data", "model"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
