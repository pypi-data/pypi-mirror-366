{
  "extensions": [
    {
      "kind": "ABAP",
      "type": "programming",
      "extensions": [".abap"]
    },
    {
      "kind": "AGS Script",
      "type": "programming",
      "extensions": [".asc", ".ash"]
    },
    {
      "kind": "AMPL",
      "type": "programming",
      "extensions": [".ampl", ".mod"]
    },
    {
      "kind": "ANTLR",
      "type": "programming",
      "extensions": [".g4"]
    },
    {
      "kind": "API Blueprint",
      "type": "markup",
      "extensions": [".apib"]
    },
    {
      "kind": "APL",
      "type": "programming",
      "extensions": [".apl", ".dyalog"]
    },
    {
      "kind": "ASP",
      "type": "programming",
      "extensions": [
        ".asp",
        ".asax",
        ".ascx",
        ".ashx",
        ".asmx",
        ".aspx",
        ".axd"
      ]
    },
    {
      "kind": "ATS",
      "type": "programming",
      "extensions": [".dats", ".hats", ".sats"]
    },
    {
      "kind": "ActionScript",
      "type": "programming",
      "extensions": [".as"]
    },
    {
      "kind": "Ada",
      "type": "programming",
      "extensions": [".adb", ".ada", ".ads"]
    },
    {
      "kind": "Agda",
      "type": "programming",
      "extensions": [".agda"]
    },
    {
      "kind": "Alloy",
      "type": "programming",
      "extensions": [".als"]
    },
    {
      "kind": "Ant Build System",
      "type": "data"
    },
    {
      "kind": "ApacheConf",
      "type": "markup",
      "extensions": [".apacheconf", ".vhost"]
    },
    {
      "kind": "Apex",
      "type": "programming",
      "extensions": [".cls"]
    },
    {
      "kind": "AppleScript",
      "type": "programming",
      "extensions": [".applescript", ".scpt"]
    },
    {
      "kind": "Arc",
      "type": "programming",
      "extensions": [".arc"]
    },
    {
      "kind": "Arduino",
      "type": "programming",
      "extensions": [".ino"]
    },
    {
      "kind": "AsciiDoc",
      "type": "prose",
      "extensions": [".asciidoc", ".adoc", ".asc"]
    },
    {
      "kind": "AspectJ",
      "type": "programming",
      "extensions": [".aj"]
    },
    {
      "kind": "Assembly",
      "type": "programming",
      "extensions": [".asm", ".a51", ".inc", ".nasm"]
    },
    {
      "kind": "Augeas",
      "type": "programming",
      "extensions": [".aug"]
    },
    {
      "kind": "AutoHotkey",
      "type": "programming",
      "extensions": [".ahk", ".ahkl"]
    },
    {
      "kind": "AutoIt",
      "type": "programming",
      "extensions": [".au3"]
    },
    {
      "kind": "Awk",
      "type": "programming",
      "extensions": [".awk", ".auk", ".gawk", ".mawk", ".nawk"]
    },
    {
      "kind": "Batchfile",
      "type": "programming",
      "extensions": [".bat", ".cmd"]
    },
    {
      "kind": "Befunge",
      "type": "programming",
      "extensions": [".befunge"]
    },
    {
      "kind": "Bison",
      "type": "programming",
      "extensions": [".bison"]
    },
    {
      "kind": "BitBake",
      "type": "programming",
      "extensions": [".bb"]
    },
    {
      "kind": "BlitzBasic",
      "type": "programming",
      "extensions": [".bb", ".decls"]
    },
    {
      "kind": "BlitzMax",
      "type": "programming",
      "extensions": [".bmx"]
    },
    {
      "kind": "Bluespec",
      "type": "programming",
      "extensions": [".bsv"]
    },
    {
      "kind": "Boo",
      "type": "programming",
      "extensions": [".boo"]
    },
    {
      "kind": "Brainfuck",
      "type": "programming",
      "extensions": [".b", ".bf"]
    },
    {
      "kind": "Brightscript",
      "type": "programming",
      "extensions": [".brs"]
    },
    {
      "kind": "Bro",
      "type": "programming",
      "extensions": [".bro"]
    },
    {
      "kind": "C",
      "type": "programming",
      "extensions": [".c", ".cats", ".h", ".idc", ".w"]
    },
    {
      "kind": "C#",
      "type": "programming",
      "extensions": [".cs", ".cake", ".cshtml", ".csx"]
    },
    {
      "kind": "C++",
      "type": "programming",
      "extensions": [
        ".cpp",
        ".c++",
        ".cc",
        ".cp",
        ".cxx",
        ".h",
        ".h++",
        ".hh",
        ".hpp",
        ".hxx",
        ".inc",
        ".inl",
        ".ipp",
        ".tcc",
        ".tpp"
      ]
    },
    {
      "kind": "C-ObjDump",
      "type": "data",
      "extensions": [".c-objdump"]
    },
    {
      "kind": "C2hs Haskell",
      "type": "programming",
      "extensions": [".chs"]
    },
    {
      "kind": "CLIPS",
      "type": "programming",
      "extensions": [".clp"]
    },
    {
      "kind": "CMake",
      "type": "programming",
      "extensions": [".cmake", ".cmake.in"]
    },
    {
      "kind": "COBOL",
      "type": "programming",
      "extensions": [".cob", ".cbl", ".ccp", ".cobol", ".cpy"]
    },
    {
      "kind": "CSS",
      "type": "markup",
      "extensions": [".css"]
    },
    {
      "kind": "CSV",
      "type": "data",
      "extensions": [".csv"]
    },
    {
      "kind": "Cap'n Proto",
      "type": "programming",
      "extensions": [".capnp"]
    },
    {
      "kind": "CartoCSS",
      "type": "programming",
      "extensions": [".mss"]
    },
    {
      "kind": "Ceylon",
      "type": "programming",
      "extensions": [".ceylon"]
    },
    {
      "kind": "Chapel",
      "type": "programming",
      "extensions": [".chpl"]
    },
    {
      "kind": "Charity",
      "type": "programming",
      "extensions": [".ch"]
    },
    {
      "kind": "ChucK",
      "type": "programming",
      "extensions": [".ck"]
    },
    {
      "kind": "Cirru",
      "type": "programming",
      "extensions": [".cirru"]
    },
    {
      "kind": "Clarion",
      "type": "programming",
      "extensions": [".clw"]
    },
    {
      "kind": "Clean",
      "type": "programming",
      "extensions": [".icl", ".dcl"]
    },
    {
      "kind": "Click",
      "type": "programming",
      "extensions": [".click"]
    },
    {
      "kind": "Clojure",
      "type": "programming",
      "extensions": [
        ".clj",
        ".boot",
        ".cl2",
        ".cljc",
        ".cljs",
        ".cljs.hl",
        ".cljscm",
        ".cljx",
        ".hic"
      ]
    },
    {
      "kind": "CoffeeScript",
      "type": "programming",
      "extensions": [".coffee", "._coffee", ".cake", ".cjsx", ".cson", ".iced"]
    },
    {
      "kind": "ColdFusion",
      "type": "programming",
      "extensions": [".cfm", ".cfml"]
    },
    {
      "kind": "ColdFusion CFC",
      "type": "programming",
      "extensions": [".cfc"]
    },
    {
      "kind": "Common Lisp",
      "type": "programming",
      "extensions": [
        ".lisp",
        ".asd",
        ".cl",
        ".l",
        ".lsp",
        ".ny",
        ".podsl",
        ".sexp"
      ]
    },
    {
      "kind": "Component Pascal",
      "type": "programming",
      "extensions": [".cp", ".cps"]
    },
    {
      "kind": "Cool",
      "type": "programming",
      "extensions": [".cl"]
    },
    {
      "kind": "Coq",
      "type": "programming",
      "extensions": [".coq", ".v"]
    },
    {
      "kind": "Cpp-ObjDump",
      "type": "data",
      "extensions": [
        ".cppobjdump",
        ".c++-objdump",
        ".c++objdump",
        ".cpp-objdump",
        ".cxx-objdump"
      ]
    },
    {
      "kind": "Creole",
      "type": "prose",
      "extensions": [".creole"]
    },
    {
      "kind": "Crystal",
      "type": "programming",
      "extensions": [".cr"]
    },
    {
      "kind": "Cucumber",
      "type": "programming",
      "extensions": [".feature"]
    },
    {
      "kind": "Cuda",
      "type": "programming",
      "extensions": [".cu", ".cuh"]
    },
    {
      "kind": "Cycript",
      "type": "programming",
      "extensions": [".cy"]
    },
    {
      "kind": "Cython",
      "type": "programming",
      "extensions": [".pyx", ".pxd", ".pxi"]
    },
    {
      "kind": "D",
      "type": "programming",
      "extensions": [".d", ".di"]
    },
    {
      "kind": "D-ObjDump",
      "type": "data",
      "extensions": [".d-objdump"]
    },
    {
      "kind": "DIGITAL Command Language",
      "type": "programming",
      "extensions": [".com"]
    },
    {
      "kind": "DM",
      "type": "programming",
      "extensions": [".dm"]
    },
    {
      "kind": "DNS Zone",
      "type": "data",
      "extensions": [".zone", ".arpa"]
    },
    {
      "kind": "DTrace",
      "type": "programming",
      "extensions": [".d"]
    },
    {
      "kind": "Darcs Patch",
      "type": "data",
      "extensions": [".darcspatch", ".dpatch"]
    },
    {
      "kind": "Dart",
      "type": "programming",
      "extensions": [".dart"]
    },
    {
      "kind": "Diff",
      "type": "data",
      "extensions": [".diff", ".patch"]
    },
    {
      "kind": "Dockerfile",
      "type": "data",
      "extensions": [".dockerfile", ".dockerignore"]
    },
    {
      "kind": "Docker",
      "type": "programming",
      "extensions": ["Dockerfile", "docker-compose.yml", "docker-compose.yaml", "docker-compose.*.yml", "docker-compose.*.yaml"]
    },
    {
      "kind": "Dogescript",
      "type": "programming",
      "extensions": [".djs"]
    },
    {
      "kind": "Dylan",
      "type": "programming",
      "extensions": [".dylan", ".dyl", ".intr", ".lid"]
    },
    {
      "kind": "E",
      "type": "programming",
      "extensions": [".E"]
    },
    {
      "kind": "ECL",
      "type": "programming",
      "extensions": [".ecl", ".eclxml"]
    },
    {
      "kind": "ECLiPSe",
      "type": "programming",
      "extensions": [".ecl"]
    },
    {
      "kind": "Eagle",
      "type": "markup",
      "extensions": [".sch", ".brd"]
    },
    {
      "kind": "Ecere Projects",
      "type": "data",
      "extensions": [".epj"]
    },
    {
      "kind": "Eiffel",
      "type": "programming",
      "extensions": [".e"]
    },
    {
      "kind": "Elixir",
      "type": "programming",
      "extensions": [".ex", ".exs"]
    },
    {
      "kind": "Elm",
      "type": "programming",
      "extensions": [".elm"]
    },
    {
      "kind": "Emacs Lisp",
      "type": "programming",
      "extensions": [".el", ".emacs", ".emacs.desktop"]
    },
    {
      "kind": "EmberScript",
      "type": "programming",
      "extensions": [".em", ".emberscript"]
    },
    {
      "kind": "Erlang",
      "type": "programming",
      "extensions": [".erl", ".es", ".escript", ".hrl", ".xrl", ".yrl"]
    },
    {
      "kind": "F#",
      "type": "programming",
      "extensions": [".fs", ".fsi", ".fsx"]
    },
    {
      "kind": "FLUX",
      "type": "programming",
      "extensions": [".fx", ".flux"]
    },
    {
      "kind": "FORTRAN",
      "type": "programming",
      "extensions": [
        ".f90",
        ".f",
        ".f03",
        ".f08",
        ".f77",
        ".f95",
        ".for",
        ".fpp"
      ]
    },
    {
      "kind": "Factor",
      "type": "programming",
      "extensions": [".factor"]
    },
    {
      "kind": "Fancy",
      "type": "programming",
      "extensions": [".fy", ".fancypack"]
    },
    {
      "kind": "Fantom",
      "type": "programming",
      "extensions": [".fan"]
    },
    {
      "kind": "Filterscript",
      "type": "programming",
      "extensions": [".fs"]
    },
    {
      "kind": "Formatted",
      "type": "data",
      "extensions": [".for", ".eam.fs"]
    },
    {
      "kind": "Forth",
      "type": "programming",
      "extensions": [
        ".fth",
        ".4th",
        ".f",
        ".for",
        ".forth",
        ".fr",
        ".frt",
        ".fs"
      ]
    },
    {
      "kind": "FreeMarker",
      "type": "programming",
      "extensions": [".ftl"]
    },
    {
      "kind": "Frege",
      "type": "programming",
      "extensions": [".fr"]
    },
    {
      "kind": "G-code",
      "type": "data",
      "extensions": [".g", ".gco", ".gcode"]
    },
    {
      "kind": "GAMS",
      "type": "programming",
      "extensions": [".gms"]
    },
    {
      "kind": "GAP",
      "type": "programming",
      "extensions": [".g", ".gap", ".gd", ".gi", ".tst"]
    },
    {
      "kind": "GAS",
      "type": "programming",
      "extensions": [".s", ".ms"]
    },
    {
      "kind": "GDScript",
      "type": "programming",
      "extensions": [".gd"]
    },
    {
      "kind": "GLSL",
      "type": "programming",
      "extensions": [
        ".glsl",
        ".fp",
        ".frag",
        ".frg",
        ".fs",
        ".fsh",
        ".fshader",
        ".geo",
        ".geom",
        ".glslv",
        ".gshader",
        ".shader",
        ".vert",
        ".vrx",
        ".vsh",
        ".vshader"
      ]
    },
    {
      "kind": "Game Maker Language",
      "type": "programming",
      "extensions": [".gml"]
    },
    {
      "kind": "Genshi",
      "type": "programming",
      "extensions": [".kid"]
    },
    {
      "kind": "Gentoo Ebuild",
      "type": "programming",
      "extensions": [".ebuild"]
    },
    {
      "kind": "Gentoo Eclass",
      "type": "programming",
      "extensions": [".eclass"]
    },
    {
      "kind": "Gettext Catalog",
      "type": "prose",
      "extensions": [".po", ".pot"]
    },
    {
      "kind": "Glyph",
      "type": "programming",
      "extensions": [".glf"]
    },
    {
      "kind": "Gnuplot",
      "type": "programming",
      "extensions": [".gp", ".gnu", ".gnuplot", ".plot", ".plt"]
    },
    {
      "kind": "Go",
      "type": "programming",
      "extensions": [".go"]
    },
    {
      "kind": "Golo",
      "type": "programming",
      "extensions": [".golo"]
    },
    {
      "kind": "Gosu",
      "type": "programming",
      "extensions": [".gs", ".gst", ".gsx", ".vark"]
    },
    {
      "kind": "Grace",
      "type": "programming",
      "extensions": [".grace"]
    },
    {
      "kind": "Gradle",
      "type": "data",
      "extensions": [".gradle"]
    },
    {
      "kind": "Grammatical Framework",
      "type": "programming",
      "extensions": [".gf"]
    },
    {
      "kind": "Graph Modeling Language",
      "type": "data",
      "extensions": [".gml"]
    },
    {
      "kind": "GraphQL",
      "type": "data",
      "extensions": [".graphql"]
    },
    {
      "kind": "Graphviz (DOT)",
      "type": "data",
      "extensions": [".dot", ".gv"]
    },
    {
      "kind": "Groff",
      "type": "markup",
      "extensions": [
        ".man",
        ".1",
        ".1in",
        ".1m",
        ".1x",
        ".2",
        ".3",
        ".3in",
        ".3m",
        ".3qt",
        ".3x",
        ".4",
        ".5",
        ".6",
        ".7",
        ".8",
        ".9",
        ".l",
        ".me",
        ".ms",
        ".n",
        ".rno",
        ".roff"
      ]
    },
    {
      "kind": "Groovy",
      "type": "programming",
      "extensions": [".groovy", ".grt", ".gtpl", ".gvy"]
    },
    {
      "kind": "Groovy Server Pages",
      "type": "programming",
      "extensions": [".gsp"]
    },
    {
      "kind": "HCL",
      "type": "programming",
      "extensions": [".hcl", ".tf"]
    },
    {
      "kind": "HLSL",
      "type": "programming",
      "extensions": [".hlsl", ".fx", ".fxh", ".hlsli"]
    },
    {
      "kind": "HTML",
      "type": "markup",
      "extensions": [
        ".html",
        ".htm",
        ".html.hl",
        ".inc",
        ".st",
        ".xht",
        ".xhtml"
      ]
    },
    {
      "kind": "HTML+Django",
      "type": "markup",
      "extensions": [".mustache", ".jinja"]
    },
    {
      "kind": "HTML+EEX",
      "type": "markup",
      "extensions": [".eex"]
    },
    {
      "kind": "HTML+ERB",
      "type": "markup",
      "extensions": [".erb", ".erb.deface"]
    },
    {
      "kind": "HTML+PHP",
      "type": "markup",
      "extensions": [".phtml"]
    },
    {
      "kind": "HTTP",
      "type": "data",
      "extensions": [".http"]
    },
    {
      "kind": "Hack",
      "type": "programming",
      "extensions": [".hh", ".php"]
    },
    {
      "kind": "Haml",
      "type": "markup",
      "extensions": [".haml", ".haml.deface"]
    },
    {
      "kind": "Handlebars",
      "type": "markup",
      "extensions": [".handlebars", ".hbs"]
    },
    {
      "kind": "Harbour",
      "type": "programming",
      "extensions": [".hb"]
    },
    {
      "kind": "Haskell",
      "type": "programming",
      "extensions": [".hs", ".hsc"]
    },
    {
      "kind": "Haxe",
      "type": "programming",
      "extensions": [".hx", ".hxsl"]
    },
    {
      "kind": "Hy",
      "type": "programming",
      "extensions": [".hy"]
    },
    {
      "kind": "HyPhy",
      "type": "programming",
      "extensions": [".bf"]
    },
    {
      "kind": "IDL",
      "type": "programming",
      "extensions": [".pro", ".dlm"]
    },
    {
      "kind": "IGOR Pro",
      "type": "programming",
      "extensions": [".ipf"]
    },
    {
      "kind": "INI",
      "type": "data",
      "extensions": [".ini", ".cfg", ".prefs", ".pro", ".properties"]
    },
    {
      "kind": "IRC log",
      "type": "data",
      "extensions": [".irclog", ".weechatlog"]
    },
    {
      "kind": "Idris",
      "type": "programming",
      "extensions": [".idr", ".lidr"]
    },
    {
      "kind": "Inform 7",
      "type": "programming",
      "extensions": [".ni", ".i7x"]
    },
    {
      "kind": "Inno Setup",
      "type": "programming",
      "extensions": [".iss"]
    },
    {
      "kind": "Io",
      "type": "programming",
      "extensions": [".io"]
    },
    {
      "kind": "Ioke",
      "type": "programming",
      "extensions": [".ik"]
    },
    {
      "kind": "Isabelle",
      "type": "programming",
      "extensions": [".thy"]
    },
    {
      "kind": "Isabelle ROOT",
      "type": "programming"
    },
    {
      "kind": "J",
      "type": "programming",
      "extensions": [".ijs"]
    },
    {
      "kind": "JFlex",
      "type": "programming",
      "extensions": [".flex", ".jflex"]
    },
    {
      "kind": "JSON",
      "type": "data",
      "extensions": [".json", ".geojson", ".lock", ".topojson"]
    },
    {
      "kind": "JSON5",
      "type": "data",
      "extensions": [".json5"]
    },
    {
      "kind": "JSONLD",
      "type": "data",
      "extensions": [".jsonld"]
    },
    {
      "kind": "JSONiq",
      "type": "programming",
      "extensions": [".jq"]
    },
    {
      "kind": "JSX",
      "type": "programming",
      "extensions": [".jsx"]
    },
    {
      "kind": "Jade",
      "type": "markup",
      "extensions": [".jade"]
    },
    {
      "kind": "Jasmin",
      "type": "programming",
      "extensions": [".j"]
    },
    {
      "kind": "Java",
      "type": "programming",
      "extensions": [".java"]
    },
    {
      "kind": "Java Server Pages",
      "type": "programming",
      "extensions": [".jsp"]
    },
    {
      "kind": "JavaScript",
      "type": "programming",
      "extensions": [
        ".js",
        "._js",
        ".bones",
        ".es",
        ".es6",
        ".frag",
        ".gs",
        ".jake",
        ".jsb",
        ".jscad",
        ".jsfl",
        ".jsm",
        ".jss",
        ".njs",
        ".pac",
        ".sjs",
        ".ssjs",
        ".sublime-build",
        ".sublime-commands",
        ".sublime-completions",
        ".sublime-keymap",
        ".sublime-macro",
        ".sublime-menu",
        ".sublime-mousemap",
        ".sublime-project",
        ".sublime-settings",
        ".sublime-theme",
        ".sublime-workspace",
        ".sublime_metrics",
        ".sublime_session",
        ".xsjs",
        ".xsjslib"
      ]
    },
    {
      "kind": "Julia",
      "type": "programming",
      "extensions": [".jl"]
    },
    {
      "kind": "Jupyter Notebook",
      "type": "markup",
      "extensions": [".ipynb"]
    },
    {
      "kind": "KRL",
      "type": "programming",
      "extensions": [".krl"]
    },
    {
      "kind": "KiCad",
      "type": "programming",
      "extensions": [".sch", ".brd", ".kicad_pcb"]
    },
    {
      "kind": "Kit",
      "type": "markup",
      "extensions": [".kit"]
    },
    {
      "kind": "Kotlin",
      "type": "programming",
      "extensions": [".kt", ".ktm", ".kts"]
    },
    {
      "kind": "LFE",
      "type": "programming",
      "extensions": [".lfe"]
    },
    {
      "kind": "LLVM",
      "type": "programming",
      "extensions": [".ll"]
    },
    {
      "kind": "LOLCODE",
      "type": "programming",
      "extensions": [".lol"]
    },
    {
      "kind": "LSL",
      "type": "programming",
      "extensions": [".lsl", ".lslp"]
    },
    {
      "kind": "LabVIEW",
      "type": "programming",
      "extensions": [".lvproj"]
    },
    {
      "kind": "Lasso",
      "type": "programming",
      "extensions": [".lasso", ".las", ".lasso8", ".lasso9", ".ldml"]
    },
    {
      "kind": "Latte",
      "type": "markup",
      "extensions": [".latte"]
    },
    {
      "kind": "Lean",
      "type": "programming",
      "extensions": [".lean", ".hlean"]
    },
    {
      "kind": "Less",
      "type": "markup",
      "extensions": [".less"]
    },
    {
      "kind": "Lex",
      "type": "programming",
      "extensions": [".l", ".lex"]
    },
    {
      "kind": "LilyPond",
      "type": "programming",
      "extensions": [".ly", ".ily"]
    },
    {
      "kind": "Limbo",
      "type": "programming",
      "extensions": [".b", ".m"]
    },
    {
      "kind": "Linker Script",
      "type": "data",
      "extensions": [".ld", ".lds"]
    },
    {
      "kind": "Linux Kernel Module",
      "type": "data",
      "extensions": [".mod"]
    },
    {
      "kind": "Liquid",
      "type": "markup",
      "extensions": [".liquid"]
    },
    {
      "kind": "Literate Agda",
      "type": "programming",
      "extensions": [".lagda"]
    },
    {
      "kind": "Literate CoffeeScript",
      "type": "programming",
      "extensions": [".litcoffee"]
    },
    {
      "kind": "Literate Haskell",
      "type": "programming",
      "extensions": [".lhs"]
    },
    {
      "kind": "LiveScript",
      "type": "programming",
      "extensions": [".ls", "._ls"]
    },
    {
      "kind": "Logos",
      "type": "programming",
      "extensions": [".xm", ".x", ".xi"]
    },
    {
      "kind": "Logtalk",
      "type": "programming",
      "extensions": [".lgt", ".logtalk"]
    },
    {
      "kind": "LookML",
      "type": "programming",
      "extensions": [".lookml"]
    },
    {
      "kind": "LoomScript",
      "type": "programming",
      "extensions": [".ls"]
    },
    {
      "kind": "Lua",
      "type": "programming",
      "extensions": [".lua", ".fcgi", ".nse", ".pd_lua", ".rbxs", ".wlua"]
    },
    {
      "kind": "M",
      "type": "programming",
      "extensions": [".mumps", ".m"]
    },
    {
      "kind": "M4",
      "type": "programming",
      "extensions": [".m4"]
    },
    {
      "kind": "M4Sugar",
      "type": "programming",
      "extensions": [".m4"]
    },
    {
      "kind": "MAXScript",
      "type": "programming",
      "extensions": [".ms", ".mcr"]
    },
    {
      "kind": "MTML",
      "type": "markup",
      "extensions": [".mtml"]
    },
    {
      "kind": "MUF",
      "type": "programming",
      "extensions": [".muf", ".m"]
    },
    {
      "kind": "Makefile",
      "type": "programming",
      "extensions": [".mak", ".d", ".mk", ".mkfile", "Makefile"]
    },
    {
      "kind": "Mako",
      "type": "programming",
      "extensions": [".mako", ".mao"]
    },
    {
      "kind": "Markdown",
      "type": "prose",
      "extensions": [".md", ".markdown", ".mkd", ".mkdn", ".mkdown", ".ron"]
    },
    {
      "kind": "Mask",
      "type": "markup",
      "extensions": [".mask"]
    },
    {
      "kind": "Mathematica",
      "type": "programming",
      "extensions": [
        ".mathematica",
        ".cdf",
        ".m",
        ".ma",
        ".mt",
        ".nb",
        ".nbp",
        ".wl",
        ".wlt"
      ]
    },
    {
      "kind": "Matlab",
      "type": "programming",
      "extensions": [".matlab", ".m"]
    },
    {
      "kind": "Maven POM",
      "type": "data"
    },
    {
      "kind": "Max",
      "type": "programming",
      "extensions": [".maxpat", ".maxhelp", ".maxproj", ".mxt", ".pat"]
    },
    {
      "kind": "MediaWiki",
      "type": "prose",
      "extensions": [".mediawiki", ".wiki"]
    },
    {
      "kind": "Mercury",
      "type": "programming",
      "extensions": [".m", ".moo"]
    },
    {
      "kind": "Metal",
      "type": "programming",
      "extensions": [".metal"]
    },
    {
      "kind": "MiniD",
      "type": "programming",
      "extensions": [".minid"]
    },
    {
      "kind": "Mirah",
      "type": "programming",
      "extensions": [".druby", ".duby", ".mir", ".mirah"]
    },
    {
      "kind": "Modelica",
      "type": "programming",
      "extensions": [".mo"]
    },
    {
      "kind": "Modula-2",
      "type": "programming",
      "extensions": [".mod"]
    },
    {
      "kind": "Module Management System",
      "type": "programming",
      "extensions": [".mms", ".mmk"]
    },
    {
      "kind": "Monkey",
      "type": "programming",
      "extensions": [".monkey"]
    },
    {
      "kind": "Moocode",
      "type": "programming",
      "extensions": [".moo"]
    },
    {
      "kind": "MoonScript",
      "type": "programming",
      "extensions": [".moon"]
    },
    {
      "kind": "Myghty",
      "type": "programming",
      "extensions": [".myt"]
    },
    {
      "kind": "NCL",
      "type": "programming",
      "extensions": [".ncl"]
    },
    {
      "kind": "NL",
      "type": "data",
      "extensions": [".nl"]
    },
    {
      "kind": "NSIS",
      "type": "programming",
      "extensions": [".nsi", ".nsh"]
    },
    {
      "kind": "Nemerle",
      "type": "programming",
      "extensions": [".n"]
    },
    {
      "kind": "NetLinx",
      "type": "programming",
      "extensions": [".axs", ".axi"]
    },
    {
      "kind": "NetLinx+ERB",
      "type": "programming",
      "extensions": [".axs.erb", ".axi.erb"]
    },
    {
      "kind": "NetLogo",
      "type": "programming",
      "extensions": [".nlogo"]
    },
    {
      "kind": "NewLisp",
      "type": "programming",
      "extensions": [".nl", ".lisp", ".lsp"]
    },
    {
      "kind": "Nginx",
      "type": "markup",
      "extensions": [".nginxconf", ".vhost"]
    },
    {
      "kind": "Nimrod",
      "type": "programming",
      "extensions": [".nim", ".nimrod"]
    },
    {
      "kind": "Ninja",
      "type": "data",
      "extensions": [".ninja"]
    },
    {
      "kind": "Nit",
      "type": "programming",
      "extensions": [".nit"]
    },
    {
      "kind": "Nix",
      "type": "programming",
      "extensions": [".nix"]
    },
    {
      "kind": "Nu",
      "type": "programming",
      "extensions": [".nu"]
    },
    {
      "kind": "NumPy",
      "type": "programming",
      "extensions": [".numpy", ".numpyw", ".numsc"]
    },
    {
      "kind": "OCaml",
      "type": "programming",
      "extensions": [".ml", ".eliom", ".eliomi", ".ml4", ".mli", ".mll", ".mly"]
    },
    {
      "kind": "ObjDump",
      "type": "data",
      "extensions": [".objdump"]
    },
    {
      "kind": "Objective-C",
      "type": "programming",
      "extensions": [".m", ".h"]
    },
    {
      "kind": "Objective-C++",
      "type": "programming",
      "extensions": [".mm"]
    },
    {
      "kind": "Objective-J",
      "type": "programming",
      "extensions": [".j", ".sj"]
    },
    {
      "kind": "Omgrofl",
      "type": "programming",
      "extensions": [".omgrofl"]
    },
    {
      "kind": "Opa",
      "type": "programming",
      "extensions": [".opa"]
    },
    {
      "kind": "Opal",
      "type": "programming",
      "extensions": [".opal"]
    },
    {
      "kind": "OpenCL",
      "type": "programming",
      "extensions": [".cl", ".opencl"]
    },
    {
      "kind": "OpenEdge ABL",
      "type": "programming",
      "extensions": [".p", ".cls"]
    },
    {
      "kind": "OpenSCAD",
      "type": "programming",
      "extensions": [".scad"]
    },
    {
      "kind": "Org",
      "type": "prose",
      "extensions": [".org"]
    },
    {
      "kind": "Ox",
      "type": "programming",
      "extensions": [".ox", ".oxh", ".oxo"]
    },
    {
      "kind": "Oxygene",
      "type": "programming",
      "extensions": [".oxygene"]
    },
    {
      "kind": "Oz",
      "type": "programming",
      "extensions": [".oz"]
    },
    {
      "kind": "PAWN",
      "type": "programming",
      "extensions": [".pwn", ".inc"]
    },
    {
      "kind": "PHP",
      "type": "programming",
      "extensions": [
        ".php",
        ".aw",
        ".ctp",
        ".fcgi",
        ".inc",
        ".php3",
        ".php4",
        ".php5",
        ".phps",
        ".phpt"
      ]
    },
    {
      "kind": "PLSQL",
      "type": "programming",
      "extensions": [".pls", ".pck", ".pkb", ".pks", ".plb", ".plsql", ".sql"]
    },
    {
      "kind": "PLpgSQL",
      "type": "programming",
      "extensions": [".sql"]
    },
    {
      "kind": "POV-Ray SDL",
      "type": "programming",
      "extensions": [".pov", ".inc"]
    },
    {
      "kind": "Pan",
      "type": "programming",
      "extensions": [".pan"]
    },
    {
      "kind": "Papyrus",
      "type": "programming",
      "extensions": [".psc"]
    },
    {
      "kind": "Parrot",
      "type": "programming",
      "extensions": [".parrot"]
    },
    {
      "kind": "Parrot Assembly",
      "type": "programming",
      "extensions": [".pasm"]
    },
    {
      "kind": "Parrot Internal Representation",
      "type": "programming",
      "extensions": [".pir"]
    },
    {
      "kind": "Pascal",
      "type": "programming",
      "extensions": [".pas", ".dfm", ".dpr", ".inc", ".lpr", ".pp"]
    },
    {
      "kind": "Perl",
      "type": "programming",
      "extensions": [
        ".pl",
        ".al",
        ".cgi",
        ".fcgi",
        ".perl",
        ".ph",
        ".plx",
        ".pm",
        ".pod",
        ".psgi",
        ".t"
      ]
    },
    {
      "kind": "Perl6",
      "type": "programming",
      "extensions": [
        ".6pl",
        ".6pm",
        ".nqp",
        ".p6",
        ".p6l",
        ".p6m",
        ".pl",
        ".pl6",
        ".pm",
        ".pm6",
        ".t"
      ]
    },
    {
      "kind": "Pickle",
      "type": "data",
      "extensions": [".pkl"]
    },
    {
      "kind": "PicoLisp",
      "type": "programming",
      "extensions": [".l"]
    },
    {
      "kind": "PigLatin",
      "type": "programming",
      "extensions": [".pig"]
    },
    {
      "kind": "Pike",
      "type": "programming",
      "extensions": [".pike", ".pmod"]
    },
    {
      "kind": "Pod",
      "type": "prose",
      "extensions": [".pod"]
    },
    {
      "kind": "PogoScript",
      "type": "programming",
      "extensions": [".pogo"]
    },
    {
      "kind": "Pony",
      "type": "programming",
      "extensions": [".pony"]
    },
    {
      "kind": "PostScript",
      "type": "markup",
      "extensions": [".ps", ".eps"]
    },
    {
      "kind": "PowerShell",
      "type": "programming",
      "extensions": [".ps1", ".psd1", ".psm1"]
    },
    {
      "kind": "Processing",
      "type": "programming",
      "extensions": [".pde"]
    },
    {
      "kind": "Prolog",
      "type": "programming",
      "extensions": [".pl", ".pro", ".prolog", ".yap"]
    },
    {
      "kind": "Propeller Spin",
      "type": "programming",
      "extensions": [".spin"]
    },
    {
      "kind": "Protocol Buffer",
      "type": "markup",
      "extensions": [".proto"]
    },
    {
      "kind": "Public Key",
      "type": "data",
      "extensions": [".asc", ".pub"]
    },
    {
      "kind": "Puppet",
      "type": "programming",
      "extensions": [".pp"]
    },
    {
      "kind": "Pure Data",
      "type": "programming",
      "extensions": [".pd"]
    },
    {
      "kind": "PureBasic",
      "type": "programming",
      "extensions": [".pb", ".pbi"]
    },
    {
      "kind": "PureScript",
      "type": "programming",
      "extensions": [".purs"]
    },
    {
      "kind": "Python",
      "type": "programming",
      "extensions": [
        ".py",
        ".bzl",
        ".cgi",
        ".fcgi",
        ".gyp",
        ".lmi",
        ".pyde",
        ".pyp",
        ".pyt",
        ".pyw",
        ".rpy",
        ".tac",
        ".wsgi",
        ".xpy"
      ]
    },
    {
      "kind": "Python traceback",
      "type": "data",
      "extensions": [".pytb"]
    },
    {
      "kind": "QML",
      "type": "programming",
      "extensions": [".qml", ".qbs"]
    },
    {
      "kind": "QMake",
      "type": "programming",
      "extensions": [".pro", ".pri"]
    },
    {
      "kind": "R",
      "type": "programming",
      "extensions": [".r", ".rd", ".rsx"]
    },
    {
      "kind": "RAML",
      "type": "markup",
      "extensions": [".raml"]
    },
    {
      "kind": "RDoc",
      "type": "prose",
      "extensions": [".rdoc"]
    },
    {
      "kind": "REALbasic",
      "type": "programming",
      "extensions": [
        ".rbbas",
        ".rbfrm",
        ".rbmnu",
        ".rbres",
        ".rbtbar",
        ".rbuistate"
      ]
    },
    {
      "kind": "RHTML",
      "type": "markup",
      "extensions": [".rhtml"]
    },
    {
      "kind": "RMarkdown",
      "type": "prose",
      "extensions": [".rmd"]
    },
    {
      "kind": "Racket",
      "type": "programming",
      "extensions": [".rkt", ".rktd", ".rktl", ".scrbl"]
    },
    {
      "kind": "Ragel in Ruby Host",
      "type": "programming",
      "extensions": [".rl"]
    },
    {
      "kind": "Raw token data",
      "type": "data",
      "extensions": [".raw"]
    },
    {
      "kind": "Rebol",
      "type": "programming",
      "extensions": [".reb", ".r", ".r2", ".r3", ".rebol"]
    },
    {
      "kind": "Red",
      "type": "programming",
      "extensions": [".red", ".reds"]
    },
    {
      "kind": "Redcode",
      "type": "programming",
      "extensions": [".cw"]
    },
    {
      "kind": "Ren'Py",
      "type": "programming",
      "extensions": [".rpy"]
    },
    {
      "kind": "RenderScript",
      "type": "programming",
      "extensions": [".rs", ".rsh"]
    },
    {
      "kind": "RobotFramework",
      "type": "programming",
      "extensions": [".robot"]
    },
    {
      "kind": "Rouge",
      "type": "programming",
      "extensions": [".rg"]
    },
    {
      "kind": "Ruby",
      "type": "programming",
      "extensions": [
        ".rb",
        ".builder",
        ".fcgi",
        ".gemspec",
        ".god",
        ".irbrc",
        ".jbuilder",
        ".mspec",
        ".pluginspec",
        ".podspec",
        ".rabl",
        ".rake",
        ".rbuild",
        ".rbw",
        ".rbx",
        ".ru",
        ".ruby",
        ".thor",
        ".watchr"
      ]
    },
    {
      "kind": "Rust",
      "type": "programming",
      "extensions": [".rs", ".rs.in"]
    },
    {
      "kind": "SAS",
      "type": "programming",
      "extensions": [".sas"]
    },
    {
      "kind": "SCSS",
      "type": "markup",
      "extensions": [".scss"]
    },
    {
      "kind": "SMT",
      "type": "programming",
      "extensions": [".smt2", ".smt"]
    },
    {
      "kind": "SPARQL",
      "type": "data",
      "extensions": [".sparql", ".rq"]
    },
    {
      "kind": "SQF",
      "type": "programming",
      "extensions": [".sqf", ".hqf"]
    },
    {
      "kind": "SQL",
      "type": "data",
      "extensions": [
        ".sql",
        ".cql",
        ".ddl",
        ".inc",
        ".prc",
        ".tab",
        ".udf",
        ".viw"
      ]
    },
    {
      "kind": "SQLPL",
      "type": "programming",
      "extensions": [".sql", ".db2"]
    },
    {
      "kind": "STON",
      "type": "data",
      "extensions": [".ston"]
    },
    {
      "kind": "SVG",
      "type": "data",
      "extensions": [".svg"]
    },
    {
      "kind": "Sage",
      "type": "programming",
      "extensions": [".sage", ".sagews"]
    },
    {
      "kind": "SaltStack",
      "type": "programming",
      "extensions": [".sls"]
    },
    {
      "kind": "Sass",
      "type": "markup",
      "extensions": [".sass"]
    },
    {
      "kind": "Scala",
      "type": "programming",
      "extensions": [".scala", ".sbt", ".sc"]
    },
    {
      "kind": "Scaml",
      "type": "markup",
      "extensions": [".scaml"]
    },
    {
      "kind": "Scheme",
      "type": "programming",
      "extensions": [".scm", ".sld", ".sls", ".sps", ".ss"]
    },
    {
      "kind": "Scilab",
      "type": "programming",
      "extensions": [".sci", ".sce", ".tst"]
    },
    {
      "kind": "Self",
      "type": "programming",
      "extensions": [".self"]
    },
    {
      "kind": "Shell",
      "type": "programming",
      "extensions": [
        ".sh",
        ".bash",
        ".bats",
        ".cgi",
        ".command",
        ".fcgi",
        ".ksh",
        ".sh.in",
        ".tmux",
        ".tool",
        ".zsh"
      ]
    },
    {
      "kind": "ShellSession",
      "type": "programming",
      "extensions": [".sh-session"]
    },
    {
      "kind": "Shen",
      "type": "programming",
      "extensions": [".shen"]
    },
    {
      "kind": "Slash",
      "type": "programming",
      "extensions": [".sl"]
    },
    {
      "kind": "Slim",
      "type": "markup",
      "extensions": [".slim"]
    },
    {
      "kind": "Smali",
      "type": "programming",
      "extensions": [".smali"]
    },
    {
      "kind": "Smalltalk",
      "type": "programming",
      "extensions": [".st", ".cs"]
    },
    {
      "kind": "Smarty",
      "type": "programming",
      "extensions": [".tpl"]
    },
    {
      "kind": "SourcePawn",
      "type": "programming",
      "extensions": [".sp", ".inc", ".sma"]
    },
    {
      "kind": "Squirrel",
      "type": "programming",
      "extensions": [".nut"]
    },
    {
      "kind": "Stan",
      "type": "programming",
      "extensions": [".stan"]
    },
    {
      "kind": "Standard ML",
      "type": "programming",
      "extensions": [".ML", ".fun", ".sig", ".sml"]
    },
    {
      "kind": "Stata",
      "type": "programming",
      "extensions": [
        ".do",
        ".ado",
        ".doh",
        ".ihlp",
        ".mata",
        ".matah",
        ".sthlp"
      ]
    },
    {
      "kind": "Stylus",
      "type": "markup",
      "extensions": [".styl"]
    },
    {
      "kind": "SuperCollider",
      "type": "programming",
      "extensions": [".sc", ".scd"]
    },
    {
      "kind": "Swift",
      "type": "programming",
      "extensions": [".swift"]
    },
    {
      "kind": "SystemVerilog",
      "type": "programming",
      "extensions": [".sv", ".svh", ".vh"]
    },
    {
      "kind": "TOML",
      "type": "data",
      "extensions": [".toml"]
    },
    {
      "kind": "TXL",
      "type": "programming",
      "extensions": [".txl"]
    },
    {
      "kind": "Tcl",
      "type": "programming",
      "extensions": [".tcl", ".adp", ".tm"]
    },
    {
      "kind": "Tcsh",
      "type": "programming",
      "extensions": [".tcsh", ".csh"]
    },
    {
      "kind": "TeX",
      "type": "markup",
      "extensions": [
        ".tex",
        ".aux",
        ".bbx",
        ".bib",
        ".cbx",
        ".cls",
        ".dtx",
        ".ins",
        ".lbx",
        ".ltx",
        ".mkii",
        ".mkiv",
        ".mkvi",
        ".sty",
        ".toc"
      ]
    },
    {
      "kind": "Tea",
      "type": "markup",
      "extensions": [".tea"]
    },
    {
      "kind": "Terra",
      "type": "programming",
      "extensions": [".t"]
    },
    {
      "kind": "Text",
      "type": "prose",
      "extensions": [".txt", ".fr", ".nb", ".ncl", ".no"]
    },
    {
      "kind": "Textile",
      "type": "prose",
      "extensions": [".textile"]
    },
    {
      "kind": "Thrift",
      "type": "programming",
      "extensions": [".thrift"]
    },
    {
      "kind": "Turing",
      "type": "programming",
      "extensions": [".t", ".tu"]
    },
    {
      "kind": "Turtle",
      "type": "data",
      "extensions": [".ttl"]
    },
    {
      "kind": "Twig",
      "type": "markup",
      "extensions": [".twig"]
    },
    {
      "kind": "TypeScript",
      "type": "programming",
      "extensions": [".ts", ".tsx"]
    },
    {
      "kind": "Unified Parallel C",
      "type": "programming",
      "extensions": [".upc"]
    },
    {
      "kind": "Unity3D Asset",
      "type": "data",
      "extensions": [".anim", ".asset", ".mat", ".meta", ".prefab", ".unity"]
    },
    {
      "kind": "Uno",
      "type": "programming",
      "extensions": [".uno"]
    },
    {
      "kind": "UnrealScript",
      "type": "programming",
      "extensions": [".uc"]
    },
    {
      "kind": "UrWeb",
      "type": "programming",
      "extensions": [".ur", ".urs"]
    },
    {
      "kind": "VCL",
      "type": "programming",
      "extensions": [".vcl"]
    },
    {
      "kind": "VHDL",
      "type": "programming",
      "extensions": [
        ".vhdl",
        ".vhd",
        ".vhf",
        ".vhi",
        ".vho",
        ".vhs",
        ".vht",
        ".vhw"
      ]
    },
    {
      "kind": "Vala",
      "type": "programming",
      "extensions": [".vala", ".vapi"]
    },
    {
      "kind": "Verilog",
      "type": "programming",
      "extensions": [".v", ".veo"]
    },
    {
      "kind": "VimL",
      "type": "programming",
      "extensions": [".vim"]
    },
    {
      "kind": "Visual Basic",
      "type": "programming",
      "extensions": [
        ".vb",
        ".bas",
        ".cls",
        ".frm",
        ".frx",
        ".vba",
        ".vbhtml",
        ".vbs"
      ]
    },
    {
      "kind": "Volt",
      "type": "programming",
      "extensions": [".volt"]
    },
    {
      "kind": "Vue",
      "type": "markup",
      "extensions": [".vue"]
    },
    {
      "kind": "Web Ontology Language",
      "type": "markup",
      "extensions": [".owl"]
    },
    {
      "kind": "WebIDL",
      "type": "programming",
      "extensions": [".webidl"]
    },
    {
      "kind": "X10",
      "type": "programming",
      "extensions": [".x10"]
    },
    {
      "kind": "XC",
      "type": "programming",
      "extensions": [".xc"]
    },
    {
      "kind": "XML",
      "type": "data",
      "extensions": [
        ".xml",
        ".ant",
        ".axml",
        ".ccxml",
        ".clixml",
        ".cproject",
        ".csl",
        ".csproj",
        ".ct",
        ".dita",
        ".ditamap",
        ".ditaval",
        ".dll.config",
        ".dotsettings",
        ".filters",
        ".fsproj",
        ".fxml",
        ".glade",
        ".gml",
        ".grxml",
        ".iml",
        ".ivy",
        ".jelly",
        ".jsproj",
        ".kml",
        ".launch",
        ".mdpolicy",
        ".mm",
        ".mod",
        ".mxml",
        ".nproj",
        ".nuspec",
        ".odd",
        ".osm",
        ".plist",
        ".pluginspec",
        ".props",
        ".ps1xml",
        ".psc1",
        ".pt",
        ".rdf",
        ".rss",
        ".scxml",
        ".srdf",
        ".storyboard",
        ".stTheme",
        ".sublime-snippet",
        ".targets",
        ".tmCommand",
        ".tml",
        ".tmLanguage",
        ".tmPreferences",
        ".tmSnippet",
        ".tmTheme",
        ".ts",
        ".tsx",
        ".ui",
        ".urdf",
        ".ux",
        ".vbproj",
        ".vcxproj",
        ".vssettings",
        ".vxml",
        ".wsdl",
        ".wsf",
        ".wxi",
        ".wxl",
        ".wxs",
        ".x3d",
        ".xacro",
        ".xaml",
        ".xib",
        ".xlf",
        ".xliff",
        ".xmi",
        ".xml.dist",
        ".xproj",
        ".xsd",
        ".xul",
        ".zcml"
      ]
    },
    {
      "kind": "XPages",
      "type": "programming",
      "extensions": [".xsp-config", ".xsp.metadata"]
    },
    {
      "kind": "XProc",
      "type": "programming",
      "extensions": [".xpl", ".xproc"]
    },
    {
      "kind": "XQuery",
      "type": "programming",
      "extensions": [".xquery", ".xq", ".xql", ".xqm", ".xqy"]
    },
    {
      "kind": "XS",
      "type": "programming",
      "extensions": [".xs"]
    },
    {
      "kind": "XSLT",
      "type": "programming",
      "extensions": [".xslt", ".xsl"]
    },
    {
      "kind": "Xojo",
      "type": "programming",
      "extensions": [
        ".xojo_code",
        ".xojo_menu",
        ".xojo_report",
        ".xojo_script",
        ".xojo_toolbar",
        ".xojo_window"
      ]
    },
    {
      "kind": "Xtend",
      "type": "programming",
      "extensions": [".xtend"]
    },
    {
      "kind": "YAML",
      "type": "data",
      "extensions": [
        ".yml",
        ".reek",
        ".rviz",
        ".sublime-syntax",
        ".syntax",
        ".yaml",
        ".yaml-tmlanguage"
      ]
    },
    {
      "kind": "YANG",
      "type": "data",
      "extensions": [".yang"]
    },
    {
      "kind": "Yacc",
      "type": "programming",
      "extensions": [".y", ".yacc", ".yy"]
    },
    {
      "kind": "Zephir",
      "type": "programming",
      "extensions": [".zep"]
    },
    {
      "kind": "Zimpl",
      "type": "programming",
      "extensions": [".zimpl", ".zmpl", ".zpl"]
    },
    {
      "kind": "desktop",
      "type": "data",
      "extensions": [".desktop", ".desktop.in"]
    },
    {
      "kind": "eC",
      "type": "programming",
      "extensions": [".ec", ".eh"]
    },
    {
      "kind": "edn",
      "type": "data",
      "extensions": [".edn"]
    },
    {
      "kind": "fish",
      "type": "programming",
      "extensions": [".fish"]
    },
    {
      "kind": "mupad",
      "type": "programming",
      "extensions": [".mu"]
    },
    {
      "kind": "nesC",
      "type": "programming",
      "extensions": [".nc"]
    },
    {
      "kind": "ooc",
      "type": "programming",
      "extensions": [".ooc"]
    },
    {
      "kind": "reStructuredText",
      "type": "prose",
      "extensions": [".rst", ".rest", ".rest.txt", ".rst.txt"]
    },
    {
      "kind": "wisp",
      "type": "programming",
      "extensions": [".wisp"]
    },
    {
      "kind": "xBase",
      "type": "programming",
      "extensions": [".prg", ".ch", ".prw"]
    }
  ]
}
