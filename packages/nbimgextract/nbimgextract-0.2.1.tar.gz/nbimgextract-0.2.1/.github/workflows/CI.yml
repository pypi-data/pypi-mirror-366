# This file is autogenerated by maturin v1.8.7
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: tag for new version

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      - name: Build archives
        run: |
          for dir in target/*/
          do
            TARGET_TRIPLE=$(basename $dir)
            if [ "$TARGET_TRIPLE" == 'release' ]; then
              continue
            fi
            ARCHIVE_FILE=nbimgextract-${TARGET_TRIPLE}.tar.gz
            echo $ARCHIVE_FILE
            tar czvf $ARCHIVE_FILE -C ${dir}release nbimgextract
            shasum -a 256 $ARCHIVE_FILE > $ARCHIVE_FILE.sha256
          done
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist
      - name: "Upload binary"
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-${{ matrix.platform.target }}
          path: |
            *.tar.gz
            *.sha256

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2
      - name: Build archives
        run: |
          for dir in target/*/
          do
            TARGET_TRIPLE=$(basename $dir)
            if [ "$TARGET_TRIPLE" == 'release' ]; then
              continue
            fi
            ARCHIVE_FILE=nbimgextract-${TARGET_TRIPLE}.tar.gz
            echo $ARCHIVE_FILE
            tar czvf $ARCHIVE_FILE -C ${dir}release nbimgextract
            shasum -a 256 $ARCHIVE_FILE > $ARCHIVE_FILE.sha256
          done
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist
      - name: "Upload binary"
        uses: actions/upload-artifact@v4
        with:
          name: binaries-musllinux-${{ matrix.platform.target }}
          path: |
            *.tar.gz
            *.sha256
  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Build archives
        shell: bash
        run: |
          for dir in target/*/
          do
            TARGET_TRIPLE=$(basename $dir)
            if [ "$TARGET_TRIPLE" == 'release' ]; then
              continue
            fi
            ARCHIVE_FILE=nbimgextract-${TARGET_TRIPLE}.zip
            echo $ARCHIVE_FILE
            7z a $ARCHIVE_FILE ./${dir}release/nbimgextract.exe
            sha256sum $ARCHIVE_FILE > $ARCHIVE_FILE.sha256
          done
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist
      - name: "Upload binary"
        uses: actions/upload-artifact@v4
        with:
          name: binaries-windows-${{ matrix.platform.target }}
          path: |
            *.tar.gz
            *.sha256

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Build archives
        run: |
          for dir in target/*/
          do
            TARGET_TRIPLE=$(basename $dir)
            if [ "$TARGET_TRIPLE" == 'release' ]; then
              continue
            fi
            ARCHIVE_FILE=nbimgextract-${TARGET_TRIPLE}.tar.gz
            echo $ARCHIVE_FILE
            tar czvf $ARCHIVE_FILE -C ${dir}/release nbimgextract
            shasum -a 256 $ARCHIVE_FILE > $ARCHIVE_FILE.sha256
          done
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist
      - name: "Upload binary"
        uses: actions/upload-artifact@v4
        with:
          name: binaries-macos-${{ matrix.platform.target }}
          path: |
            *.tar.gz
            *.sha256

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist
  check_tag:
    runs-on: ubuntu-latest
    if: ${{ inputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Get package version
        id: cargo-get
        uses: nicolaiunrein/cargo-get@v1.1.0
        with:
          subcommand: package.version --pretty
      - name: check matches
        run: |
          if [ "${{ steps.cargo-get.outputs.metadata }}" != "${{ inputs.tag }}" ]; then
            echo "package version ${{ steps.cargo-get.outputs.metadata }} does not match tag ${{ inputs.tag }}" >&2
            exit 1;
          else
            echo "Releasing ${{ inputs.tag }}"
          fi
  release_github:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist, musllinux, check_tag]
    permissions:
      contents: write
    environment: release
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: wheels
      - uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          merge-multiple: true
          path: binaries
      - run: |
          gh release create ${{ inputs.tag }} --generate-notes -d wheels/* binaries/*
  release_pypi:
    name: Release PyPI
    runs-on: ubuntu-latest
    needs: [release_github]
    environment: release
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
