[project]
name = "mist-medical"
version = "0.2.2-beta"
requires-python = ">= 3.8"
description = "MIST is a simple and scalable end-to-end framework for medical imaging segmentation."
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Adrian Celaya", email = "aecelaya@rice.edu"},
    {name = "David Fuentes", email = "dtfuentes@mdanderson.org"},
    {name = "Beatrice Riviere", email = "riviere@rice.edu"},
    {name = "MIST Imaging LLC"},
    {name = "Rice University"},
    {name = "The University of Texas MD Anderson Cancer Center"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps."
]
keywords = [
    "deep learning",
    "image segmentation",
    "semantic segmentation",
    "medical image analysis",
    "medical image segmentation",
    "nnUNet",
    "U-Net",
    "vision transformers",
    "Swin UNETR"
]
dependencies = [
    "torch",
    "monai",
    "antspyx",
    "simpleitk",
    "numpy",
    "pandas",
    "rich",
    "scipy",
    "scikit-learn",
    "scikit-image",
    "nvidia-dali-cuda120==1.43.0",
    "tensorboard",
    "einops",
    "pytest",
]

[project.urls]
homepage = "https://github.com/mist-medical/MIST"
repository = "https://github.com/mist-medical/MIST"
documentation = "https://mist-medical.readthedocs.io/"

[project.scripts]
mist_run_all = "mist.scripts.run_all_entrypoint:run_all_entry"
mist_analyze = "mist.scripts.analyze_entrypoint:analyze_entry"
mist_preprocess = "mist.scripts.preprocess_entrypoint:preprocess_entry"
mist_train = "mist.scripts.train_entrypoint:train_entry"
mist_predict = "mist.scripts.inference_entrypoint:inference_entry"
mist_evaluate = "mist.scripts.evaluation_entrypoint:evaluation_entry"
mist_postprocess = "mist.scripts.postprocess_entrypoint:postprocess_entry"
mist_convert_dataset = "mist.scripts.conversion_entrypoint:conversion_entry"

[tool.codespell]
skip = ".git"
