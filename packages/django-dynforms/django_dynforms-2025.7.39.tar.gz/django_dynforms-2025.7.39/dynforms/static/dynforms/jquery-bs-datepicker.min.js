(function($){$.fn.datePicker=function(options){const settings=$.extend({dateFormat:"YYYY-MM-DD",initialDate:new Date,multiple:false},options);const leftArrow='<svg  xmlns="http://www.w3.org/2000/svg"  width="1em"  height="1em"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="3"  stroke-linecap="round"  stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 6l-6 6l6 6" /></svg>';const rightArrow='<svg  xmlns="http://www.w3.org/2000/svg"  width="1em"  height="1em"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="3"  stroke-linecap="round"  stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6" /></svg>';function formatDate(date,formatStr){const d=new Date(date);const year=d.getUTCFullYear();const month=("0"+(d.getUTCMonth()+1)).slice(-2);const day=("0"+d.getUTCDate()).slice(-2);return formatStr.replace("YYYY",year).replace("MM",month).replace("DD",day)}function parseDates(dateStr){const parts=dateStr.trim().split(/\s*,\s+/);let dates=[];for(const part of parts){try{let d=new Date(part);if(!isNaN(d.getTime())){dates.push(d)}}catch(err){console.error("Invalid date format:",part,"Error:",err)}}return dates}function generatePopoverTitle($input){const state=$input.data("datepickerState");let titleText="";let titleDataAction="title";if(state.currentView==="days"){titleText=state.currentDate.toLocaleString("default",{month:"long"})+" "+state.currentDate.getUTCFullYear()}else if(state.currentView==="months"){titleText=state.currentDate.getUTCFullYear().toString()}else if(state.currentView==="years"){const currentYear=state.currentDate.getUTCFullYear();const startYear=Math.floor(currentYear/20)*20;titleText=`${startYear} - ${startYear+19}`;titleDataAction="noop"}return`<button type="button" class="btn btn-link btn-sm px-2 py-1 dp-action" data-action="prev" aria-label="Previous">${leftArrow}</button>
                        <span class="dp-nav-title dp-action" data-action="${titleDataAction}">${titleText}</span>
                        <button type="button" class="btn btn-link btn-sm px-2 py-1 dp-action" data-action="next" aria-label="Next">${rightArrow}</button>`}function generateCalendarGrid($input){const state=$input.data("datepickerState");const today=new Date;today.setHours(0,0,0,0);let html='<table class="table table-sm dp-table">';if(state.currentView==="days"){html+="<thead><tr><th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th></tr></thead>";html+="<tbody>";const year=state.currentDate.getUTCFullYear();const month=state.currentDate.getUTCMonth();const firstDayOfMonth=new Date(year,month,1);const lastDayOfMonth=new Date(year,month+1,0);const numDays=lastDayOfMonth.getUTCDate();let startDayOfWeek=firstDayOfMonth.getDay();let date=1;for(let i=0;i<6;i++){html+="<tr>";for(let j=0;j<7;j++){if(i===0&&j<startDayOfWeek){html+='<td class="dp-empty"></td>'}else if(date>numDays){html+='<td class="dp-empty"></td>'}else{const cellDate=new Date(year,month,date);cellDate.setHours(0,0,0,0);let classes="dp-action";if(cellDate.getTime()===today.getTime())classes+=" table-info";for(const selectedDate of state.selectedDates){if(selectedDate.getTime()===cellDate.getTime()){classes+=" table-primary";break}}html+=`<td class="${classes}" data-action="select-day" data-day="${date}">${date}</td>`;date++}}html+="</tr>";if(date>numDays){break}}html+="</tbody>"}else if(state.currentView==="months"){html+="<tbody>";const months=state.currentDate.toLocaleDateString("default",{year:"numeric"}).split(" ").map((_,i)=>new Date(2e3,i).toLocaleString("default",{month:"short"}));const monthNames=Array.from({length:12},(e,i)=>{return new Date(null,i+1,null).toLocaleDateString("en",{month:"short"})});let monthIdx=0;for(let i=0;i<3;i++){html+="<tr>";for(let j=0;j<4;j++){if(monthIdx<12){html+=`<td class="dp-action" data-action="select-month" data-month="${monthIdx}">${monthNames[monthIdx]}</td>`;monthIdx++}else{html+='<td class="dp-empty"></td>'}}html+="</tr>"}html+="</tbody>"}else if(state.currentView==="years"){html+="<tbody>";const currentYearInView=state.currentDate.getUTCFullYear();let yearVal=Math.floor(currentYearInView/20)*20;for(let i=0;i<5;i++){html+="<tr>";for(let j=0;j<4;j++){html+=`<td class="dp-action" data-action="select-year" data-year="${yearVal}">${yearVal}</td>`;yearVal++}html+="</tr>"}html+="</tbody>"}html+="</table>";return html}function updateInputValue($input){const state=$input.data("datepickerState");let formattedDates=[];for(const selectedDate of state.selectedDates){formattedDates.push(formatDate(selectedDate,state.settings.dateFormat))}const formatted=formattedDates.join(", ");$input.val(formatted);$input.change();if(state.settings.multiple){$input.attr("data-selected-dates",JSON.stringify(state.selectedDates.map(d=>d.toISOString())))}else if(state.selectedDates.length>0){$input.trigger("changeDate",state.selectedDates[0])}else{$input.trigger("changeDate",null)}}function handlePopoverAction($input,$target){let state=$input.data("datepickerState");state.selectedDates=parseDates($input.val());const action=$target.data("action");if(action==="prev"){if(state.currentView==="days")state.currentDate.setMonth(state.currentDate.getUTCMonth()-1);else if(state.currentView==="months")state.currentDate.setFullYear(state.currentDate.getUTCFullYear()-1);else if(state.currentView==="years")state.currentDate.setFullYear(state.currentDate.getUTCFullYear()-20)}else if(action==="next"){if(state.currentView==="days")state.currentDate.setMonth(state.currentDate.getUTCMonth()+1);else if(state.currentView==="months")state.currentDate.setFullYear(state.currentDate.getUTCFullYear()+1);else if(state.currentView==="years")state.currentDate.setFullYear(state.currentDate.getUTCFullYear()+20)}else if(action==="title"){if(state.currentView==="days")state.currentView="months";else if(state.currentView==="months")state.currentView="years"}else if(action==="select-day"){const day=parseInt($target.data("day"));const selectedDate=new Date(state.currentDate.getUTCFullYear(),state.currentDate.getUTCMonth(),day);if(state.settings.multiple){state.selectedDates.push(selectedDate)}else{state.selectedDates=[selectedDate]}updateInputValue($input);if(!state.settings.multiple){bootstrap.Popover.getInstance($input[0]).hide();return}}else if(action==="select-month"){const month=parseInt($target.data("month"));state.currentDate.setMonth(month);state.currentView="days"}else if(action==="select-year"){const year=parseInt($target.data("year"));state.currentDate.setFullYear(year);state.currentDate.setMonth(0);state.currentView="months"}else if(action==="noop"){return}$input.data("datepickerState",state);const popoverInstance=bootstrap.Popover.getInstance($input[0]);if(popoverInstance){popoverInstance.setContent({".popover-header":generatePopoverTitle($input),".popover-body":generateCalendarGrid($input)})}}return this.each(function(){const $input=$(this);let inputDateStrings=$input.val().trim().split(/\s*,\s+/);let initialDates=parseDates($input.val());let initialDateFromInput;if(inputDateStrings.length>0&&inputDateStrings[0]){initialDateFromInput=new Date(inputDateStrings[0])}let initialPickerDate=settings.initialDate;if(initialDateFromInput&&!isNaN(initialDateFromInput.getTime())){initialPickerDate=initialDateFromInput}else if(typeof settings.initialDate==="string"){initialPickerDate=new Date(settings.initialDate);if(isNaN(initialPickerDate.getTime()))initialPickerDate=new Date}else if(!(settings.initialDate instanceof Date)){initialPickerDate=new Date}const state={currentDate:new Date(initialPickerDate.getUTCFullYear(),initialPickerDate.getUTCMonth(),1),selectedDates:initialDates,currentView:"days",settings:settings,inputElement:$input[0]};$input.data("datepickerState",state);const popover=new bootstrap.Popover($input[0],{html:true,sanitize:false,title:()=>generatePopoverTitle($input),content:()=>generateCalendarGrid($input),placement:"bottom",trigger:"click",customClass:"datepicker-popover rounded-md shadow-lg"});$input.on("shown.bs.popover",function(){const popoverTip=document.getElementById($input.attr("aria-describedby"));if(popoverTip){$(popoverTip).off(".datepicker").on("click.datepicker",".dp-action",function(e){e.stopPropagation();handlePopoverAction($input,$(this))})}});$(document).off("click.datepicker").on("click.datepicker",function(e){if(!$(e.target).closest(".datepicker-popover").length){const popoverInstance=bootstrap.Popover.getInstance($input[0]);if(popoverInstance){popoverInstance.hide()}}})})}})(jQuery);