[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nanofts"
version = "0.1.0"
description = "A lightweight full-text search library for Python"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Birch Kwok", email = "birchkwok@gmail.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Database :: Front-Ends",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["full-text-search", "indexing", "search-engine", "chinese-text", "fuzzy-search"]
requires-python = ">=3.9"
dependencies = [
    "msgpack",
    "pyroaring",
    "xxhash"
]

[project.optional-dependencies]
pandas = ["pandas>=1.0.0"]
polars = ["polars>=0.20.0"]
pyarrow = ["pyarrow>=14.0.0"]
all = [
    "pandas>=1.0.0",
    "polars>=0.20.0",
    "pyarrow>=14.0.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
]
test = [
    "pytest>=6.0",
    "pytest-cov",
]

[project.urls]
Homepage = "https://github.com/BirchKwok/NanoFTS"
Repository = "https://github.com/BirchKwok/NanoFTS"
Issues = "https://github.com/BirchKwok/NanoFTS/issues"
Documentation = "https://github.com/BirchKwok/NanoFTS/blob/main/README.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["nanofts*"]
exclude = ["test*", "tests*"]

[tool.setuptools.package-data]
nanofts = ["*.py"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyroaring.*",
    "msgpack.*",
    "pandas.*",
    "polars.*",
    "pyarrow.*",
]
ignore_missing_imports = true