#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á–∏ 4.2: Add directory access validation
"""

import sys
import tempfile
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.insert(0, str(Path(__file__).parent))

from offers_check_marketplaces.user_data_manager import (
    DirectoryManager, 
    PlatformConfig
)


def verify_task_4_2():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∑–∞–¥–∞—á–∞ 4.2 –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞."""
    print("=== –ü–†–û–í–ï–†–ö–ê –ó–ê–î–ê–ß–ò 4.2: Add directory access validation ===")
    
    config = PlatformConfig.for_current_platform()
    manager = DirectoryManager(config)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ú–µ—Ç–æ–¥ validate_directory_access —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    assert hasattr(manager, 'validate_directory_access'), "–ú–µ—Ç–æ–¥ validate_directory_access –Ω–µ –Ω–∞–π–¥–µ–Ω"
    print("‚úÖ –ú–µ—Ç–æ–¥ validate_directory_access —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ú–µ—Ç–æ–¥ _check_disk_space —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    assert hasattr(manager, '_check_disk_space'), "–ú–µ—Ç–æ–¥ _check_disk_space –Ω–µ –Ω–∞–π–¥–µ–Ω"
    print("‚úÖ –ú–µ—Ç–æ–¥ _check_disk_space —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ú–µ—Ç–æ–¥ _log_directory_validation_error —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    assert hasattr(manager, '_log_directory_validation_error'), "–ú–µ—Ç–æ–¥ _log_directory_validation_error –Ω–µ –Ω–∞–π–¥–µ–Ω"
    print("‚úÖ –ú–µ—Ç–æ–¥ _log_directory_validation_error —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ú–µ—Ç–æ–¥ _get_permission_fix_suggestion —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    assert hasattr(manager, '_get_permission_fix_suggestion'), "–ú–µ—Ç–æ–¥ _get_permission_fix_suggestion –Ω–µ –Ω–∞–π–¥–µ–Ω"
    print("‚úÖ –ú–µ—Ç–æ–¥ _get_permission_fix_suggestion —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    with tempfile.TemporaryDirectory() as temp_dir:
        test_path = Path(temp_dir)
        result = manager.validate_directory_access(test_path)
        assert result == True, "–í–∞–ª–∏–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É"
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    nonexistent_path = Path("/nonexistent/directory/path/12345")
    result = manager.validate_directory_access(nonexistent_path)
    assert result == False, "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É"
    print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("\nüéâ –ó–ê–î–ê–ß–ê 4.2 –ü–û–õ–ù–û–°–¢–¨–Æ –†–ï–ê–õ–ò–ó–û–í–ê–ù–ê!")
    print("–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:")
    print("  - ‚úÖ validate_directory_access method –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
    print("  - ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ")
    print("  - ‚úÖ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö")
    
    return True


if __name__ == "__main__":
    verify_task_4_2()