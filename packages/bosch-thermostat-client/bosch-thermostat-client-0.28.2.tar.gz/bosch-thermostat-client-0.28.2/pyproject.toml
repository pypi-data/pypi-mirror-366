[project]
name = "bosch-thermostat-client"
dynamic = []
description = "Python API for talking to Boschâ„¢ Heating gateway using HTTP or XMPP"
authors = [
    { name = "Pawel Szafer", email = "pszafer@gmail.com" },
]
dependencies = [
    "aiohttp>=3.9.0",
    "click>=8.1.7",
    "colorlog>=6.8.2",
    "pyaes>=1.6.1",
    "pytz>=2024.1",
    "pyyaml>=6.0.1",
    "slixmpp>=1.8.5",
]
requires-python = ">=3.12"
readme = "README.md"
version = "0.28.2"

[project.license]
text = "Apache License 2.0"

[project.scripts]
bosch_cli = "bosch_thermostat_client.bosch_cli:cli"

[build-system]
requires = [
    "pdm-pep517>=1.0.0",
]
build-backend = "pdm.pep517.api"

[tool.pdm.version]
from = "bosch_thermostat_client/version.py"

[tool.pdm.dev-dependencies]
dev = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "bandit>=1.7.5",
    "pre-commit>=3.2.1",
]

[tool.pdm.scripts]
lint = "pre-commit run --all-files"

[tool.black]
line-length = 88
exclude = "/(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  | pdm/_vendor\n  | tests/fixtures\n)/\n"

[tool.isort]
profile = "black"
atomic = true
filter_files = true
known_first_party = [
    "bosch_thermostat_client",
]
