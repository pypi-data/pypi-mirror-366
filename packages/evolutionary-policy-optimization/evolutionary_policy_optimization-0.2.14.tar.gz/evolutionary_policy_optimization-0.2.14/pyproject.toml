[project]
name = "evolutionary-policy-optimization"
version = "0.2.14"
description = "EPO - Pytorch"
authors = [
    { name = "Phil Wang", email = "lucidrains@gmail.com" }
]
readme = "README.md"
requires-python = ">= 3.9"
license = { file = "LICENSE" }
keywords = [
    'artificial intelligence',
    'deep learning',
    'reinforcement learning',
    'genetic algorithms',
    'robotics'
  ]
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3.8',
  ]

dependencies = [
    "accelerate>=1.6.0",
    "adam-atan2-pytorch",
    'assoc-scan>=0.0.2',
    'einx>=0.3.0',
    'einops>=0.8.1',
    'ema-pytorch>=0.7.7',
    'hl-gauss-pytorch>=0.1.19',
    'torch>=2.2',
    'tqdm'
]

[project.urls]
Homepage = "https://pypi.org/project/evolutionary-policy-optimization/"
Repository = "https://github.com/lucidrains/evolutionary-policy-optimization"

[project.optional-dependencies]
examples = [
    "numpy",
    "pufferlib>=2.0.6",
    "tqdm",
]

experimental = [
    "tensordict",
    "torchvision"
]

test = [
    "pytest",
    "ruff>=0.4.2",
]

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[tool.ruff]
line-length = 1000

lint.ignore = [
    "F722", # for jaxtyping shape annotation
    "F401",
    "F821"
]

lint.extend-select = [
    "W291"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["evolutionary_policy_optimization"]
