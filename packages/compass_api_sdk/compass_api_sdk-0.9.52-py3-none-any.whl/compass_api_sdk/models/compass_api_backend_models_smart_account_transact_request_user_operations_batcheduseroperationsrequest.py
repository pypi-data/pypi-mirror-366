"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .compass_api_backend_models_multicall_transact_request_multicall_execution_request_useroperation import (
    CompassAPIBackendModelsMulticallTransactRequestMulticallExecutionRequestUserOperation,
    CompassAPIBackendModelsMulticallTransactRequestMulticallExecutionRequestUserOperationTypedDict,
)
from compass_api_sdk.types import BaseModel
from enum import Enum
from typing import List
from typing_extensions import TypedDict


class CompassAPIBackendModelsSmartAccountTransactRequestUserOperationsBatchedUserOperationsRequestChain(
    str, Enum
):
    ARBITRUM = "arbitrum"
    BASE = "base"
    ETHEREUM = "ethereum"


class CompassAPIBackendModelsSmartAccountTransactRequestUserOperationsBatchedUserOperationsRequestTypedDict(
    TypedDict
):
    r"""Request model for batching user operations."""

    chain: CompassAPIBackendModelsSmartAccountTransactRequestUserOperationsBatchedUserOperationsRequestChain
    sender: str
    r"""The address of the transaction sender."""
    operations: List[
        CompassAPIBackendModelsMulticallTransactRequestMulticallExecutionRequestUserOperationTypedDict
    ]
    r"""List of possible user operations"""


class CompassAPIBackendModelsSmartAccountTransactRequestUserOperationsBatchedUserOperationsRequest(
    BaseModel
):
    r"""Request model for batching user operations."""

    chain: CompassAPIBackendModelsSmartAccountTransactRequestUserOperationsBatchedUserOperationsRequestChain

    sender: str
    r"""The address of the transaction sender."""

    operations: List[
        CompassAPIBackendModelsMulticallTransactRequestMulticallExecutionRequestUserOperation
    ]
    r"""List of possible user operations"""
