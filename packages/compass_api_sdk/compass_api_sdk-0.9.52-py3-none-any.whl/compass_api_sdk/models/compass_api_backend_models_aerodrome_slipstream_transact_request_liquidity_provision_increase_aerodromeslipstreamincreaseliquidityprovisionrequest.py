"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
from enum import Enum
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0DesiredTypedDict = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0DesiredTypedDict",
    Union[float, str],
)
r"""The desired amount of the first token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0Desired = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0Desired",
    Union[float, str],
)
r"""The desired amount of the first token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1DesiredTypedDict = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1DesiredTypedDict",
    Union[float, str],
)
r"""The desired amount of the second token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1Desired = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1Desired",
    Union[float, str],
)
r"""The desired amount of the second token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0MinTypedDict = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0MinTypedDict",
    Union[float, str],
)
r"""The minimum amount of the first token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0Min = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0Min",
    Union[float, str],
)
r"""The minimum amount of the first token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1MinTypedDict = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1MinTypedDict",
    Union[float, str],
)
r"""The minimum amount of the second token to deposit"""


CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1Min = TypeAliasType(
    "CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1Min",
    Union[float, str],
)
r"""The minimum amount of the second token to deposit"""


class CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestChain(
    str, Enum
):
    BASE = "base"


class CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestTypedDict(
    TypedDict
):
    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""
    amount0_desired: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0DesiredTypedDict
    r"""The desired amount of the first token to deposit"""
    amount1_desired: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1DesiredTypedDict
    r"""The desired amount of the second token to deposit"""
    amount0_min: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0MinTypedDict
    r"""The minimum amount of the first token to deposit"""
    amount1_min: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1MinTypedDict
    r"""The minimum amount of the second token to deposit"""
    chain: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestChain
    sender: str
    r"""The address of the transaction sender."""
    action_type: Literal["AERODROME_SLIPSTREAM_INCREASE_LIQUIDITY_PROVISION"]


class CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequest(
    BaseModel
):
    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""

    amount0_desired: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0Desired
    r"""The desired amount of the first token to deposit"""

    amount1_desired: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1Desired
    r"""The desired amount of the second token to deposit"""

    amount0_min: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount0Min
    r"""The minimum amount of the first token to deposit"""

    amount1_min: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestAmount1Min
    r"""The minimum amount of the second token to deposit"""

    chain: CompassAPIBackendModelsAerodromeSlipstreamTransactRequestLiquidityProvisionIncreaseAerodromeSlipstreamIncreaseLiquidityProvisionRequestChain

    sender: str
    r"""The address of the transaction sender."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["AERODROME_SLIPSTREAM_INCREASE_LIQUIDITY_PROVISION"]],
            AfterValidator(
                validate_const("AERODROME_SLIPSTREAM_INCREASE_LIQUIDITY_PROVISION")
            ),
        ],
        pydantic.Field(alias="action_type"),
    ] = "AERODROME_SLIPSTREAM_INCREASE_LIQUIDITY_PROVISION"
