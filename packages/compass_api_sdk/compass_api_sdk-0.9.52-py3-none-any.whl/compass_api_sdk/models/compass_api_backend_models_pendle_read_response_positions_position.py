"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .compass_api_backend_models_pendle_read_response_positions_openposition import (
    CompassAPIBackendModelsPendleReadResponsePositionsOpenPosition,
    CompassAPIBackendModelsPendleReadResponsePositionsOpenPositionTypedDict,
)
from .syposition import SyPosition, SyPositionTypedDict
from compass_api_sdk.types import BaseModel
from datetime import datetime
import pydantic
from typing import List
from typing_extensions import Annotated, TypedDict


class CompassAPIBackendModelsPendleReadResponsePositionsPositionTypedDict(TypedDict):
    chain_id: int
    total_open: int
    total_closed: int
    total_sy: int
    open_positions: List[
        CompassAPIBackendModelsPendleReadResponsePositionsOpenPositionTypedDict
    ]
    closed_positions: List[
        CompassAPIBackendModelsPendleReadResponsePositionsOpenPositionTypedDict
    ]
    sy_positions: List[SyPositionTypedDict]
    updated_at: datetime


class CompassAPIBackendModelsPendleReadResponsePositionsPosition(BaseModel):
    chain_id: Annotated[int, pydantic.Field(alias="chainId")]

    total_open: Annotated[int, pydantic.Field(alias="totalOpen")]

    total_closed: Annotated[int, pydantic.Field(alias="totalClosed")]

    total_sy: Annotated[int, pydantic.Field(alias="totalSy")]

    open_positions: Annotated[
        List[CompassAPIBackendModelsPendleReadResponsePositionsOpenPosition],
        pydantic.Field(alias="openPositions"),
    ]

    closed_positions: Annotated[
        List[CompassAPIBackendModelsPendleReadResponsePositionsOpenPosition],
        pydantic.Field(alias="closedPositions"),
    ]

    sy_positions: Annotated[List[SyPosition], pydantic.Field(alias="syPositions")]

    updated_at: Annotated[datetime, pydantic.Field(alias="updatedAt")]
