"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
from enum import Enum
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestAmountTypedDict = TypeAliasType(
    "CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestAmountTypedDict",
    Union[float, str],
)
r"""The amount of the asset to withdraw"""


CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestAmount = (
    TypeAliasType(
        "CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestAmount",
        Union[float, str],
    )
)
r"""The amount of the asset to withdraw"""


class CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestChain(
    str, Enum
):
    ARBITRUM = "arbitrum"
    BASE = "base"
    ETHEREUM = "ethereum"


class CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestTypedDict(
    TypedDict
):
    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    amount: CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestAmountTypedDict
    r"""The amount of the asset to withdraw"""
    recipient: str
    r"""The address of the recipient of the withdrawn funds."""
    chain: CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestChain
    sender: str
    r"""The address of the transaction sender."""
    action_type: Literal["AAVE_WITHDRAW"]


class CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequest(BaseModel):
    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    amount: CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestAmount
    r"""The amount of the asset to withdraw"""

    recipient: str
    r"""The address of the recipient of the withdrawn funds."""

    chain: CompassAPIBackendModelsAaveTransactRequestWithdrawAaveWithdrawRequestChain

    sender: str
    r"""The address of the transaction sender."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["AAVE_WITHDRAW"]],
            AfterValidator(validate_const("AAVE_WITHDRAW")),
        ],
        pydantic.Field(alias="action_type"),
    ] = "AAVE_WITHDRAW"
