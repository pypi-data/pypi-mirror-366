"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
from enum import Enum
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestTokenIn(str, Enum):
    r"""The token you would like to swap 1:1 for USDS. Choose from DAI or USDC."""

    DAI = "DAI"
    USDC = "USDC"


CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestAmountTypedDict = (
    TypeAliasType(
        "CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestAmountTypedDict",
        Union[float, str],
    )
)
r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""


CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestAmount = TypeAliasType(
    "CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestAmount", Union[float, str]
)
r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""


class CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestChain(str, Enum):
    ETHEREUM = "ethereum"


class CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestTypedDict(TypedDict):
    token_in: CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestTokenIn
    r"""The token you would like to swap 1:1 for USDS. Choose from DAI or USDC."""
    amount: CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestAmountTypedDict
    r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""
    chain: CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestChain
    sender: str
    r"""The address of the transaction sender."""
    action_type: Literal["SKY_BUY"]


class CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequest(BaseModel):
    token_in: CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestTokenIn
    r"""The token you would like to swap 1:1 for USDS. Choose from DAI or USDC."""

    amount: CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestAmount
    r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""

    chain: CompassAPIBackendModelsSkyTransactRequestBuySkyBuyRequestChain

    sender: str
    r"""The address of the transaction sender."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["SKY_BUY"]], AfterValidator(validate_const("SKY_BUY"))
        ],
        pydantic.Field(alias="action_type"),
    ] = "SKY_BUY"
