"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .feeenum import FeeEnum
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
from enum import Enum
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenInTypedDict = TypeAliasType(
    "CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenInTypedDict",
    Union[TokenEnum, str],
)
r"""The symbol or address of the token to swap from."""


CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenIn = TypeAliasType(
    "CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenIn",
    Union[TokenEnum, str],
)
r"""The symbol or address of the token to swap from."""


CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenOutTypedDict = TypeAliasType(
    "CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenOutTypedDict",
    Union[TokenEnum, str],
)
r"""The symbol or address of the token to swap to."""


CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenOut = TypeAliasType(
    "CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenOut",
    Union[TokenEnum, str],
)
r"""The symbol or address of the token to swap to."""


CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestAmountOutTypedDict = TypeAliasType(
    "CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestAmountOutTypedDict",
    Union[float, str],
)
r"""The amount of 'token_out' to buy."""


CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestAmountOut = TypeAliasType(
    "CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestAmountOut",
    Union[float, str],
)
r"""The amount of 'token_out' to buy."""


class CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestChain(
    str, Enum
):
    ARBITRUM = "arbitrum"
    BASE = "base"
    ETHEREUM = "ethereum"


class CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTypedDict(
    TypedDict
):
    r"""Request model for buying an exact amount of tokens."""

    token_in: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenInTypedDict
    r"""The symbol or address of the token to swap from."""
    token_out: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenOutTypedDict
    r"""The symbol or address of the token to swap to."""
    fee: FeeEnum
    r"""The transaction fee of a Uniswap pool in bips.

    Uniswap supports 4 different fee levels.
    """
    amount_out: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestAmountOutTypedDict
    r"""The amount of 'token_out' to buy."""
    max_slippage_percent: float
    r"""The maximum slippage allowed in percent. e.g. `1` means `1 %` slippage allowed."""
    chain: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestChain
    sender: str
    r"""The address of the transaction sender."""
    action_type: Literal["UNISWAP_BUY_EXACTLY"]


class CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequest(
    BaseModel
):
    r"""Request model for buying an exact amount of tokens."""

    token_in: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenIn
    r"""The symbol or address of the token to swap from."""

    token_out: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestTokenOut
    r"""The symbol or address of the token to swap to."""

    fee: FeeEnum
    r"""The transaction fee of a Uniswap pool in bips.

    Uniswap supports 4 different fee levels.
    """

    amount_out: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestAmountOut
    r"""The amount of 'token_out' to buy."""

    max_slippage_percent: float
    r"""The maximum slippage allowed in percent. e.g. `1` means `1 %` slippage allowed."""

    chain: CompassAPIBackendModelsUniswapTransactSwapRequestBuyExactlyUniswapBuyExactlyRequestChain

    sender: str
    r"""The address of the transaction sender."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["UNISWAP_BUY_EXACTLY"]],
            AfterValidator(validate_const("UNISWAP_BUY_EXACTLY")),
        ],
        pydantic.Field(alias="action_type"),
    ] = "UNISWAP_BUY_EXACTLY"
