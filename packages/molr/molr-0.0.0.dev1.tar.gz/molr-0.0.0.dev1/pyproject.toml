[build-system]
requires = ["setuptools>=61.0", "wheel", "numpy>=1.20.0", "setuptools_scm[toml]>=6.2", "pyparsing>=3.0.0", "pdbreader>=0.1.0", "mmcif>=0.1.0", "scipy>=1.7.0"]
build-backend = "setuptools.build_meta"

[project]
name = "molr"
dynamic = ["version"]
description = "Molecular Realm for Spatial Indexed Structures - Fast spatial operations for molecular data"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Abhishek Tiwari", email = "molr@abhishek-tiwari.com"},
]
keywords = ["molecular", "structure", "chemistry", "bioinformatics", "pdb", "spatial-indexing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "pyparsing>=3.0.0",
    "pdbreader>=0.1.0",
    "mmcif>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "isort>=5.0.0",
]
build = [
    "build>=0.8.0",
    "twine>=4.0.0",
    "setuptools-scm>=6.2.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/abhishektiwari/molr"
Documentation = "https://molr.abhishek-tiwari.com/"
Repository = "https://github.com/abhishektiwari/molr.git"
Issues = "https://github.com/abhishektiwari/molr/issues"

[tool.setuptools_scm]
write_to = "molr/_version.py"
fallback_version = "0.1.0.dev0"
version_scheme = "no-guess-dev"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
exclude = ["tests*", "experiments*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["molr"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "pdbreader.*",
    "mmcif.*",
    "pyparsing.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["molr"]
omit = [
    "*/tests/*",
    "*/experiments/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]