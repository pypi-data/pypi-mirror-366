Metadata-Version: 2.4
Name: finn-viewer
Version: 0.3.0
Summary: n-dimensional array viewer for cell tracking data in Python
Author-email: Caroline Malin-Mayor <malinmayorc@janelia.hhmi.org>
License: BSD 3-Clause
Project-URL: Download, https://github.com/funkelab/finn
Project-URL: Bug Tracker, https://github.com/funkelab/finn/issues
Project-URL: Source Code, https://github.com/funkelab/finn
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: X11 Applications :: Qt
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: C
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Utilities
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: appdirs>=1.4.4
Requires-Dist: app-model<0.4.0,>=0.3.0
Requires-Dist: cachey>=0.2.1
Requires-Dist: certifi>=2018.1.18
Requires-Dist: dask[array]>=2021.10.0
Requires-Dist: imageio!=2.22.1,>=2.20
Requires-Dist: jsonschema>=3.2.0
Requires-Dist: lazy_loader>=0.2
Requires-Dist: magicgui>=0.7.0
Requires-Dist: napari-console>=0.1.1
Requires-Dist: napari-plugin-engine>=0.1.9
Requires-Dist: napari-svg>=0.1.8
Requires-Dist: npe2>=0.7.6
Requires-Dist: numpy>=1.22.2
Requires-Dist: numpydoc>=0.9.2
Requires-Dist: pandas>=1.3.0
Requires-Dist: Pillow>=9.0
Requires-Dist: pint>=0.17
Requires-Dist: psutil>=5.0
Requires-Dist: psygnal>=0.5.0
Requires-Dist: pydantic>=1.9.0
Requires-Dist: pygments>=2.6.0
Requires-Dist: PyOpenGL>=3.1.0
Requires-Dist: pywin32; platform_system == "Windows"
Requires-Dist: PyYAML>=5.1
Requires-Dist: qtpy>=2.3.1
Requires-Dist: scikit-image[data]>=0.19.1
Requires-Dist: scipy>=1.5.4
Requires-Dist: superqt>=0.6.7
Requires-Dist: tifffile>=2022.7.28
Requires-Dist: toolz>=0.10.0
Requires-Dist: tqdm>=4.56.0
Requires-Dist: typing_extensions>=4.2.0
Requires-Dist: vispy<0.15,>=0.14.1
Requires-Dist: wrapt>=1.11.1
Requires-Dist: funtracks>=1.2.1
Requires-Dist: pyqtgraph
Requires-Dist: fonticon-fontawesome6
Requires-Dist: zarr<3
Requires-Dist: imagecodecs
Provides-Extra: pyside2
Requires-Dist: PySide2!=5.15.0,>=5.13.2; (python_version < "3.11" and platform_machine != "arm64") and extra == "pyside2"
Provides-Extra: pyside6-experimental
Requires-Dist: PySide6<6.5; python_version < "3.12" and extra == "pyside6-experimental"
Provides-Extra: pyqt6
Requires-Dist: PyQt6>6.5; extra == "pyqt6"
Requires-Dist: PyQt6!=6.6.1; platform_system == "Darwin" and extra == "pyqt6"
Provides-Extra: pyside
Requires-Dist: finn-viewer[pyside2]; extra == "pyside"
Provides-Extra: pyqt5
Requires-Dist: PyQt5!=5.15.0,>=5.13.2; extra == "pyqt5"
Provides-Extra: pyqt
Requires-Dist: finn-viewer[pyqt5]; extra == "pyqt"
Provides-Extra: qt
Requires-Dist: finn-viewer[pyqt]; extra == "qt"
Provides-Extra: all
Requires-Dist: finn-viewer[optional,pyqt]; extra == "all"
Provides-Extra: optional-base
Requires-Dist: zarr>=2.12.0; extra == "optional-base"
Provides-Extra: optional-numba
Requires-Dist: numba>=0.57.1; extra == "optional-numba"
Requires-Dist: finn-viewer[optional,pyqt]; extra == "optional-numba"
Provides-Extra: optional
Requires-Dist: finn-viewer[optional-base,optional-numba]; extra == "optional"
Requires-Dist: triangle; extra == "optional"
Requires-Dist: PartSegCore-compiled-backend>=0.15.8; extra == "optional"
Provides-Extra: testing
Requires-Dist: babel>=2.9.0; extra == "testing"
Requires-Dist: fsspec>=2023.10.0; extra == "testing"
Requires-Dist: hypothesis>=6.8.0; extra == "testing"
Requires-Dist: lxml[html_clean]>5; extra == "testing"
Requires-Dist: matplotlib>=3.6.1; extra == "testing"
Requires-Dist: pooch>=1.6.0; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Requires-Dist: docstring_parser>=0.15; extra == "testing"
Requires-Dist: pretend>=1.0.9; extra == "testing"
Requires-Dist: pyautogui>=0.9.54; extra == "testing"
Requires-Dist: pytest-qt>=4.3.1; extra == "testing"
Requires-Dist: pytest-pretty>=1.1.0; extra == "testing"
Requires-Dist: pytest>=8.1.0; extra == "testing"
Requires-Dist: tensorstore!=0.1.72,>=0.1.13; extra == "testing"
Requires-Dist: virtualenv>=20.17; extra == "testing"
Requires-Dist: xarray>=0.16.2; extra == "testing"
Requires-Dist: IPython>=7.25.0; extra == "testing"
Requires-Dist: qtconsole>=4.5.1; extra == "testing"
Requires-Dist: rich>=12.0.0; extra == "testing"
Requires-Dist: finn-viewer[optional-base]; extra == "testing"
Provides-Extra: testing-extra
Requires-Dist: torch>=1.7; extra == "testing-extra"
Provides-Extra: release
Requires-Dist: PyGithub>=1.44.1; extra == "release"
Requires-Dist: twine>=3.1.1; extra == "release"
Requires-Dist: gitpython>=3.1.0; extra == "release"
Requires-Dist: requests-cache>=0.9.2; extra == "release"
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: check-manifest>=0.42; extra == "dev"
Requires-Dist: pre-commit>=2.9.0; extra == "dev"
Requires-Dist: pydantic; extra == "dev"
Requires-Dist: python-dotenv; extra == "dev"
Requires-Dist: finn[testing]; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Provides-Extra: build
Requires-Dist: ruff; extra == "build"
Requires-Dist: pyqt5; extra == "build"
Dynamic: license-file

# finn is (not) napari

The [motile tracker](https://github.com/funkelab/motile_tracker) started as a [napari](https://github.com/napari/napari) plugin. However, as we developed more advanced features, we found ourselves wanting to adapt the core code of napari, remove features that were not compatible with our applicaton, change layer controls, etc. finn started as a fork of napari, then a complete copy, and now it is an independent repo optimized for displaying cell tracking data.

Many thanks to the napari community for providing an excellent starting point and tons of great feedback and assistance!
> napari contributors (2019). napari: a multi-dimensional image viewer for python. [doi:10.5281/zenodo.3555620](https://zenodo.org/record/3555620)

## Installation

finn is not yet on pypi - you must clone and install from source code
```
git clone git@github.com:funkelab/finn.git
cd finn
conda create -n finn python=3.10
conda activate finn
pip install '.[all]'
```
