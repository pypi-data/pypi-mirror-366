[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unzipall"
version = "1.0.1"
description = "Universal archive extractor supporting 30+ formats including ZIP, RAR, 7Z, TAR, and many more"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "mricardo", email = "ricardo.lee.cm@gmail.com"}
]
maintainers = [
    {name = "mricardo", email = "ricardo.lee.cm@gmail.com"}
]
keywords = [
    "archive", "extract", "zip", "rar", "7z", "tar", "compression",
    "unzip", "extractor", "decompress", "unpack", "universal"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Operating System :: OS Independent",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Environment :: Console",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "py7zr>=0.20.0",
    "rarfile>=4.0",
    "patool>=1.12.0",
    "libarchive-c>=4.0",
    "python-magic>=0.4.27; sys_platform != 'win32'",
    "python-magic-bin>=0.4.14; sys_platform == 'win32'",
    "pycdlib>=1.13.0",
]

[project.optional-dependencies]
iso = ["pycdlib>=1.13.0"]
advanced = ["patool>=1.12.0", "libarchive-c>=4.0"]
all = ["unzipall[iso,advanced]"]

dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=2.20",
    "twine>=4.0",
    "build>=0.8.0",
]

docs = [
    "mkdocs>=1.4",
    "mkdocs-material>=8.5",
    "mkdocs-mermaid2-plugin>=0.6.0",
]

test-full = [
    "unzipall[all,dev]",
    "pytest-xdist>=3.0",
    "pytest-benchmark>=4.0",
]

[project.urls]
Homepage = "https://github.com/mricardo/unzipall"
Repository = "https://github.com/mricardo/unzipall"
Documentation = "https://github.com/mricardo/unzipall#readme"
"Bug Tracker" = "https://github.com/mricardo/unzipall/issues"
Funding = "https://github.com/sponsors/mricardo"

[project.scripts]
unzipall = "unzipall.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["unzipall*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
unzipall = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
mypy_path = "src"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = [
    "rarfile.*",
    "py7zr.*",
    "patoolib.*",
    "libarchive.*",
    "magic.*",
    "pycdlib.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/unzipall",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "requires_system_tools: marks tests that require external system tools",
    "benchmark: marks tests as benchmark tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/unzipall"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
src_paths = ["src"]
known_first_party = ["unzipall"]
known_third_party = [
    "py7zr", "rarfile", "patool", "libarchive",
    "magic", "pycdlib", "pytest"
]