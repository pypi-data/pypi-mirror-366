[project]
name = "antares-study-version"
version = "1.0.20"
description = 'Study version manager for Antares ecosystem'
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["antares", "study", "config", "configuration", "model", "versionning"]
authors = [
    { name = "Laurent LAPORTE", email = "laurent.laporte.pro@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = ["click", "pandas"]

[project.scripts]
antares-study-version = "antares.study.version.cli:cli"


[project.urls]
Documentation = "https://github.com/AntaresSimulatorTeam/antares-study-version#readme"
Issues = "https://github.com/AntaresSimulatorTeam/antares-study-version/issues"
Source = "https://github.com/AntaresSimulatorTeam/antares-study-version"

[tool.setuptools.data-files]
antares = ["src/antares/study/version/create_app/resources/*.zip"]

[tool.mypy]
files = ["src/", "tests/"]
ignore_missing_imports = true

[tool.coverage.run]
source_pkgs = ["antares.study.version", "tests"]
branch = true
parallel = true
omit = []

[tool.coverage.paths]
antares_study_config = ["src/antares/study/version", "*/antares-study-version/src/antares/study/version"]
tests = ["tests", "*/antares-study-version/tests"]


[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[project.entry-points."pyinstaller40"]
hook-dirs = "antares.study.version.__pyinstaller:get_hook_dirs"