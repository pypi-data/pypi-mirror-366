import pytest


@pytest.fixture(scope="module")
def data_pitchclass() -> tuple[int, ...]:
    return (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)


@pytest.fixture(scope="module")
def data_pitchname() -> tuple[str, ...]:
    return (
        "Dbb",
        "C",
        "B#",
        "A###",
        "Ebbb",
        "Db",
        "C#",
        "B##",
        "Fbbb",
        "Ebb",
        "D",
        "C##",
        "B###",
        "Fbb",
        "Eb",
        "D#",
        "C###",
        "Gbbb",
        "Fb",
        "E",
        "D##",
        "Gbb",
        "F",
        "E#",
        "D###",
        "Abbb",
        "Gb",
        "F#",
        "E##",
        "Abb",
        "G",
        "F##",
        "E###",
        "Bbbb",
        "Ab",
        "G#",
        "F###",
        "Cbbb",
        "Bbb",
        "A",
        "G##",
        "Cbb",
        "Bb",
        "A#",
        "G###",
        "Dbbb",
        "Cb",
        "B",
        "A##",
    )


@pytest.fixture(scope="module")
def data_map_pitchclass_to_pitchnames() -> dict[int, tuple[str | None, ...]]:
    return {
        0: (None, "Dbb", None, "C", "B#", None, "A###"),
        1: ("Ebbb", None, "Db", None, "C#", "B##", None),
        2: ("Fbbb", "Ebb", None, "D", None, "C##", "B###"),
        3: (None, "Fbb", "Eb", None, "D#", None, "C###"),
        4: ("Gbbb", None, "Fb", "E", None, "D##", None),
        5: (None, "Gbb", None, "F", "E#", None, "D###"),
        6: ("Abbb", None, "Gb", None, "F#", "E##", None),
        7: (None, "Abb", None, "G", None, "F##", "E###"),
        8: ("Bbbb", None, "Ab", None, "G#", None, "F###"),
        9: ("Cbbb", "Bbb", None, "A", None, "G##", None),
        10: (None, "Cbb", "Bb", None, "A#", None, "G###"),
        11: ("Dbbb", None, "Cb", "B", None, "A##", None),
    }


@pytest.fixture(scope="module")
def data_map_pitchname_to_pitchclass() -> dict[str, int]:
    return {
        "A": 9,
        "A#": 10,
        "A##": 11,
        "A###": 0,
        "Ab": 8,
        "Abb": 7,
        "Abbb": 6,
        "B": 11,
        "B#": 0,
        "B##": 1,
        "B###": 2,
        "Bb": 10,
        "Bbb": 9,
        "Bbbb": 8,
        "C": 0,
        "C#": 1,
        "C##": 2,
        "C###": 3,
        "Cb": 11,
        "Cbb": 10,
        "Cbbb": 9,
        "D": 2,
        "D#": 3,
        "D##": 4,
        "D###": 5,
        "Db": 1,
        "Dbb": 0,
        "Dbbb": 11,
        "E": 4,
        "E#": 5,
        "E##": 6,
        "E###": 7,
        "Eb": 3,
        "Ebb": 2,
        "Ebbb": 1,
        "F": 5,
        "F#": 6,
        "F##": 7,
        "F###": 8,
        "Fb": 4,
        "Fbb": 3,
        "Fbbb": 2,
        "G": 7,
        "G#": 8,
        "G##": 9,
        "G###": 10,
        "Gb": 6,
        "Gbb": 5,
        "Gbbb": 4,
    }


@pytest.fixture(scope="module")
def data_notenumbers() -> tuple[int, ...]:
    return tuple(range(128))


@pytest.fixture(scope="module")
def data_notenames() -> tuple[str, ...]:
    return (
        "Dbb-1",
        "C-1",
        "B#9",
        "A###9",
        "Ebbb-1",
        "Db-1",
        "C#-1",
        "B##9",
        "Fbbb-1",
        "Ebb-1",
        "D-1",
        "C##-1",
        "B###9",
        "Fbb-1",
        "Eb-1",
        "D#-1",
        "C###-1",
        "Gbbb-1",
        "Fb-1",
        "E-1",
        "D##-1",
        "Gbb-1",
        "F-1",
        "E#-1",
        "D###-1",
        "Abbb-1",
        "Gb-1",
        "F#-1",
        "E##-1",
        "Abb-1",
        "G-1",
        "F##-1",
        "E###-1",
        "Bbbb-1",
        "Ab-1",
        "G#-1",
        "F###-1",
        "Cbbb0",
        "Bbb-1",
        "A-1",
        "G##-1",
        "Cbb0",
        "Bb-1",
        "A#-1",
        "G###-1",
        "Dbbb0",
        "Cb0",
        "B-1",
        "A##-1",
        "Dbb0",
        "C0",
        "B#-1",
        "A###-1",
        "Ebbb0",
        "Db0",
        "C#0",
        "B##-1",
        "Fbbb0",
        "Ebb0",
        "D0",
        "C##0",
        "B###-1",
        "Fbb0",
        "Eb0",
        "D#0",
        "C###0",
        "Gbbb0",
        "Fb0",
        "E0",
        "D##0",
        "Gbb0",
        "F0",
        "E#0",
        "D###0",
        "Abbb0",
        "Gb0",
        "F#0",
        "E##0",
        "Abb0",
        "G0",
        "F##0",
        "E###0",
        "Bbbb0",
        "Ab0",
        "G#0",
        "F###0",
        "Cbbb1",
        "Bbb0",
        "A0",
        "G##0",
        "Cbb1",
        "Bb0",
        "A#0",
        "G###0",
        "Dbbb1",
        "Cb1",
        "B0",
        "A##0",
        "Dbb1",
        "C1",
        "B#0",
        "A###0",
        "Ebbb1",
        "Db1",
        "C#1",
        "B##0",
        "Fbbb1",
        "Ebb1",
        "D1",
        "C##1",
        "B###0",
        "Fbb1",
        "Eb1",
        "D#1",
        "C###1",
        "Gbbb1",
        "Fb1",
        "E1",
        "D##1",
        "Gbb1",
        "F1",
        "E#1",
        "D###1",
        "Abbb1",
        "Gb1",
        "F#1",
        "E##1",
        "Abb1",
        "G1",
        "F##1",
        "E###1",
        "Bbbb1",
        "Ab1",
        "G#1",
        "F###1",
        "Cbbb2",
        "Bbb1",
        "A1",
        "G##1",
        "Cbb2",
        "Bb1",
        "A#1",
        "G###1",
        "Dbbb2",
        "Cb2",
        "B1",
        "A##1",
        "Dbb2",
        "C2",
        "B#1",
        "A###1",
        "Ebbb2",
        "Db2",
        "C#2",
        "B##1",
        "Fbbb2",
        "Ebb2",
        "D2",
        "C##2",
        "B###1",
        "Fbb2",
        "Eb2",
        "D#2",
        "C###2",
        "Gbbb2",
        "Fb2",
        "E2",
        "D##2",
        "Gbb2",
        "F2",
        "E#2",
        "D###2",
        "Abbb2",
        "Gb2",
        "F#2",
        "E##2",
        "Abb2",
        "G2",
        "F##2",
        "E###2",
        "Bbbb2",
        "Ab2",
        "G#2",
        "F###2",
        "Cbbb3",
        "Bbb2",
        "A2",
        "G##2",
        "Cbb3",
        "Bb2",
        "A#2",
        "G###2",
        "Dbbb3",
        "Cb3",
        "B2",
        "A##2",
        "Dbb3",
        "C3",
        "B#2",
        "A###2",
        "Ebbb3",
        "Db3",
        "C#3",
        "B##2",
        "Fbbb3",
        "Ebb3",
        "D3",
        "C##3",
        "B###2",
        "Fbb3",
        "Eb3",
        "D#3",
        "C###3",
        "Gbbb3",
        "Fb3",
        "E3",
        "D##3",
        "Gbb3",
        "F3",
        "E#3",
        "D###3",
        "Abbb3",
        "Gb3",
        "F#3",
        "E##3",
        "Abb3",
        "G3",
        "F##3",
        "E###3",
        "Bbbb3",
        "Ab3",
        "G#3",
        "F###3",
        "Cbbb4",
        "Bbb3",
        "A3",
        "G##3",
        "Cbb4",
        "Bb3",
        "A#3",
        "G###3",
        "Dbbb4",
        "Cb4",
        "B3",
        "A##3",
        "Dbb4",
        "C4",
        "B#3",
        "A###3",
        "Ebbb4",
        "Db4",
        "C#4",
        "B##3",
        "Fbbb4",
        "Ebb4",
        "D4",
        "C##4",
        "B###3",
        "Fbb4",
        "Eb4",
        "D#4",
        "C###4",
        "Gbbb4",
        "Fb4",
        "E4",
        "D##4",
        "Gbb4",
        "F4",
        "E#4",
        "D###4",
        "Abbb4",
        "Gb4",
        "F#4",
        "E##4",
        "Abb4",
        "G4",
        "F##4",
        "E###4",
        "Bbbb4",
        "Ab4",
        "G#4",
        "F###4",
        "Cbbb5",
        "Bbb4",
        "A4",
        "G##4",
        "Cbb5",
        "Bb4",
        "A#4",
        "G###4",
        "Dbbb5",
        "Cb5",
        "B4",
        "A##4",
        "Dbb5",
        "C5",
        "B#4",
        "A###4",
        "Ebbb5",
        "Db5",
        "C#5",
        "B##4",
        "Fbbb5",
        "Ebb5",
        "D5",
        "C##5",
        "B###4",
        "Fbb5",
        "Eb5",
        "D#5",
        "C###5",
        "Gbbb5",
        "Fb5",
        "E5",
        "D##5",
        "Gbb5",
        "F5",
        "E#5",
        "D###5",
        "Abbb5",
        "Gb5",
        "F#5",
        "E##5",
        "Abb5",
        "G5",
        "F##5",
        "E###5",
        "Bbbb5",
        "Ab5",
        "G#5",
        "F###5",
        "Cbbb6",
        "Bbb5",
        "A5",
        "G##5",
        "Cbb6",
        "Bb5",
        "A#5",
        "G###5",
        "Dbbb6",
        "Cb6",
        "B5",
        "A##5",
        "Dbb6",
        "C6",
        "B#5",
        "A###5",
        "Ebbb6",
        "Db6",
        "C#6",
        "B##5",
        "Fbbb6",
        "Ebb6",
        "D6",
        "C##6",
        "B###5",
        "Fbb6",
        "Eb6",
        "D#6",
        "C###6",
        "Gbbb6",
        "Fb6",
        "E6",
        "D##6",
        "Gbb6",
        "F6",
        "E#6",
        "D###6",
        "Abbb6",
        "Gb6",
        "F#6",
        "E##6",
        "Abb6",
        "G6",
        "F##6",
        "E###6",
        "Bbbb6",
        "Ab6",
        "G#6",
        "F###6",
        "Cbbb7",
        "Bbb6",
        "A6",
        "G##6",
        "Cbb7",
        "Bb6",
        "A#6",
        "G###6",
        "Dbbb7",
        "Cb7",
        "B6",
        "A##6",
        "Dbb7",
        "C7",
        "B#6",
        "A###6",
        "Ebbb7",
        "Db7",
        "C#7",
        "B##6",
        "Fbbb7",
        "Ebb7",
        "D7",
        "C##7",
        "B###6",
        "Fbb7",
        "Eb7",
        "D#7",
        "C###7",
        "Gbbb7",
        "Fb7",
        "E7",
        "D##7",
        "Gbb7",
        "F7",
        "E#7",
        "D###7",
        "Abbb7",
        "Gb7",
        "F#7",
        "E##7",
        "Abb7",
        "G7",
        "F##7",
        "E###7",
        "Bbbb7",
        "Ab7",
        "G#7",
        "F###7",
        "Cbbb8",
        "Bbb7",
        "A7",
        "G##7",
        "Cbb8",
        "Bb7",
        "A#7",
        "G###7",
        "Dbbb8",
        "Cb8",
        "B7",
        "A##7",
        "Dbb8",
        "C8",
        "B#7",
        "A###7",
        "Ebbb8",
        "Db8",
        "C#8",
        "B##7",
        "Fbbb8",
        "Ebb8",
        "D8",
        "C##8",
        "B###7",
        "Fbb8",
        "Eb8",
        "D#8",
        "C###8",
        "Gbbb8",
        "Fb8",
        "E8",
        "D##8",
        "Gbb8",
        "F8",
        "E#8",
        "D###8",
        "Abbb8",
        "Gb8",
        "F#8",
        "E##8",
        "Abb8",
        "G8",
        "F##8",
        "E###8",
        "Bbbb8",
        "Ab8",
        "G#8",
        "F###8",
        "Cbbb9",
        "Bbb8",
        "A8",
        "G##8",
        "Cbb9",
        "Bb8",
        "A#8",
        "G###8",
        "Dbbb9",
        "Cb9",
        "B8",
        "A##8",
        "Dbb9",
        "C9",
        "B#8",
        "A###8",
        "Ebbb9",
        "Db9",
        "C#9",
        "B##8",
        "Fbbb9",
        "Ebb9",
        "D9",
        "C##9",
        "B###8",
        "Fbb9",
        "Eb9",
        "D#9",
        "C###9",
        "Gbbb9",
        "Fb9",
        "E9",
        "D##9",
        "Gbb9",
        "F9",
        "E#9",
        "D###9",
        "Abbb9",
        "Gb9",
        "F#9",
        "E##9",
        "Abb9",
        "G9",
        "F##9",
        "E###9",
    )


@pytest.fixture(scope="module")
def data_map_notename_to_notenumber() -> dict[str, int]:
    return {
        "A###-1": 12,
        "A###0": 24,
        "A###1": 36,
        "A###2": 48,
        "A###3": 60,
        "A###4": 72,
        "A###5": 84,
        "A###6": 96,
        "A###7": 108,
        "A###8": 120,
        "A###9": 0,
        "A##-1": 11,
        "A##0": 23,
        "A##1": 35,
        "A##2": 47,
        "A##3": 59,
        "A##4": 71,
        "A##5": 83,
        "A##6": 95,
        "A##7": 107,
        "A##8": 119,
        "A#-1": 10,
        "A#0": 22,
        "A#1": 34,
        "A#2": 46,
        "A#3": 58,
        "A#4": 70,
        "A#5": 82,
        "A#6": 94,
        "A#7": 106,
        "A#8": 118,
        "A-1": 9,
        "A0": 21,
        "A1": 33,
        "A2": 45,
        "A3": 57,
        "A4": 69,
        "A5": 81,
        "A6": 93,
        "A7": 105,
        "A8": 117,
        "Ab-1": 8,
        "Ab0": 20,
        "Ab1": 32,
        "Ab2": 44,
        "Ab3": 56,
        "Ab4": 68,
        "Ab5": 80,
        "Ab6": 92,
        "Ab7": 104,
        "Ab8": 116,
        "Abb-1": 7,
        "Abb0": 19,
        "Abb1": 31,
        "Abb2": 43,
        "Abb3": 55,
        "Abb4": 67,
        "Abb5": 79,
        "Abb6": 91,
        "Abb7": 103,
        "Abb8": 115,
        "Abb9": 127,
        "Abbb-1": 6,
        "Abbb0": 18,
        "Abbb1": 30,
        "Abbb2": 42,
        "Abbb3": 54,
        "Abbb4": 66,
        "Abbb5": 78,
        "Abbb6": 90,
        "Abbb7": 102,
        "Abbb8": 114,
        "Abbb9": 126,
        "B###-1": 14,
        "B###0": 26,
        "B###1": 38,
        "B###2": 50,
        "B###3": 62,
        "B###4": 74,
        "B###5": 86,
        "B###6": 98,
        "B###7": 110,
        "B###8": 122,
        "B###9": 2,
        "B##-1": 13,
        "B##0": 25,
        "B##1": 37,
        "B##2": 49,
        "B##3": 61,
        "B##4": 73,
        "B##5": 85,
        "B##6": 97,
        "B##7": 109,
        "B##8": 121,
        "B##9": 1,
        "B#-1": 12,
        "B#0": 24,
        "B#1": 36,
        "B#2": 48,
        "B#3": 60,
        "B#4": 72,
        "B#5": 84,
        "B#6": 96,
        "B#7": 108,
        "B#8": 120,
        "B#9": 0,
        "B-1": 11,
        "B0": 23,
        "B1": 35,
        "B2": 47,
        "B3": 59,
        "B4": 71,
        "B5": 83,
        "B6": 95,
        "B7": 107,
        "B8": 119,
        "Bb-1": 10,
        "Bb0": 22,
        "Bb1": 34,
        "Bb2": 46,
        "Bb3": 58,
        "Bb4": 70,
        "Bb5": 82,
        "Bb6": 94,
        "Bb7": 106,
        "Bb8": 118,
        "Bbb-1": 9,
        "Bbb0": 21,
        "Bbb1": 33,
        "Bbb2": 45,
        "Bbb3": 57,
        "Bbb4": 69,
        "Bbb5": 81,
        "Bbb6": 93,
        "Bbb7": 105,
        "Bbb8": 117,
        "Bbbb-1": 8,
        "Bbbb0": 20,
        "Bbbb1": 32,
        "Bbbb2": 44,
        "Bbbb3": 56,
        "Bbbb4": 68,
        "Bbbb5": 80,
        "Bbbb6": 92,
        "Bbbb7": 104,
        "Bbbb8": 116,
        "C###-1": 3,
        "C###0": 15,
        "C###1": 27,
        "C###2": 39,
        "C###3": 51,
        "C###4": 63,
        "C###5": 75,
        "C###6": 87,
        "C###7": 99,
        "C###8": 111,
        "C###9": 123,
        "C##-1": 2,
        "C##0": 14,
        "C##1": 26,
        "C##2": 38,
        "C##3": 50,
        "C##4": 62,
        "C##5": 74,
        "C##6": 86,
        "C##7": 98,
        "C##8": 110,
        "C##9": 122,
        "C#-1": 1,
        "C#0": 13,
        "C#1": 25,
        "C#2": 37,
        "C#3": 49,
        "C#4": 61,
        "C#5": 73,
        "C#6": 85,
        "C#7": 97,
        "C#8": 109,
        "C#9": 121,
        "C-1": 0,
        "C0": 12,
        "C1": 24,
        "C2": 36,
        "C3": 48,
        "C4": 60,
        "C5": 72,
        "C6": 84,
        "C7": 96,
        "C8": 108,
        "C9": 120,
        "Cb0": 11,
        "Cb1": 23,
        "Cb2": 35,
        "Cb3": 47,
        "Cb4": 59,
        "Cb5": 71,
        "Cb6": 83,
        "Cb7": 95,
        "Cb8": 107,
        "Cb9": 119,
        "Cbb0": 10,
        "Cbb1": 22,
        "Cbb2": 34,
        "Cbb3": 46,
        "Cbb4": 58,
        "Cbb5": 70,
        "Cbb6": 82,
        "Cbb7": 94,
        "Cbb8": 106,
        "Cbb9": 118,
        "Cbbb0": 9,
        "Cbbb1": 21,
        "Cbbb2": 33,
        "Cbbb3": 45,
        "Cbbb4": 57,
        "Cbbb5": 69,
        "Cbbb6": 81,
        "Cbbb7": 93,
        "Cbbb8": 105,
        "Cbbb9": 117,
        "D###-1": 5,
        "D###0": 17,
        "D###1": 29,
        "D###2": 41,
        "D###3": 53,
        "D###4": 65,
        "D###5": 77,
        "D###6": 89,
        "D###7": 101,
        "D###8": 113,
        "D###9": 125,
        "D##-1": 4,
        "D##0": 16,
        "D##1": 28,
        "D##2": 40,
        "D##3": 52,
        "D##4": 64,
        "D##5": 76,
        "D##6": 88,
        "D##7": 100,
        "D##8": 112,
        "D##9": 124,
        "D#-1": 3,
        "D#0": 15,
        "D#1": 27,
        "D#2": 39,
        "D#3": 51,
        "D#4": 63,
        "D#5": 75,
        "D#6": 87,
        "D#7": 99,
        "D#8": 111,
        "D#9": 123,
        "D-1": 2,
        "D0": 14,
        "D1": 26,
        "D2": 38,
        "D3": 50,
        "D4": 62,
        "D5": 74,
        "D6": 86,
        "D7": 98,
        "D8": 110,
        "D9": 122,
        "Db-1": 1,
        "Db0": 13,
        "Db1": 25,
        "Db2": 37,
        "Db3": 49,
        "Db4": 61,
        "Db5": 73,
        "Db6": 85,
        "Db7": 97,
        "Db8": 109,
        "Db9": 121,
        "Dbb-1": 0,
        "Dbb0": 12,
        "Dbb1": 24,
        "Dbb2": 36,
        "Dbb3": 48,
        "Dbb4": 60,
        "Dbb5": 72,
        "Dbb6": 84,
        "Dbb7": 96,
        "Dbb8": 108,
        "Dbb9": 120,
        "Dbbb0": 11,
        "Dbbb1": 23,
        "Dbbb2": 35,
        "Dbbb3": 47,
        "Dbbb4": 59,
        "Dbbb5": 71,
        "Dbbb6": 83,
        "Dbbb7": 95,
        "Dbbb8": 107,
        "Dbbb9": 119,
        "E###-1": 7,
        "E###0": 19,
        "E###1": 31,
        "E###2": 43,
        "E###3": 55,
        "E###4": 67,
        "E###5": 79,
        "E###6": 91,
        "E###7": 103,
        "E###8": 115,
        "E###9": 127,
        "E##-1": 6,
        "E##0": 18,
        "E##1": 30,
        "E##2": 42,
        "E##3": 54,
        "E##4": 66,
        "E##5": 78,
        "E##6": 90,
        "E##7": 102,
        "E##8": 114,
        "E##9": 126,
        "E#-1": 5,
        "E#0": 17,
        "E#1": 29,
        "E#2": 41,
        "E#3": 53,
        "E#4": 65,
        "E#5": 77,
        "E#6": 89,
        "E#7": 101,
        "E#8": 113,
        "E#9": 125,
        "E-1": 4,
        "E0": 16,
        "E1": 28,
        "E2": 40,
        "E3": 52,
        "E4": 64,
        "E5": 76,
        "E6": 88,
        "E7": 100,
        "E8": 112,
        "E9": 124,
        "Eb-1": 3,
        "Eb0": 15,
        "Eb1": 27,
        "Eb2": 39,
        "Eb3": 51,
        "Eb4": 63,
        "Eb5": 75,
        "Eb6": 87,
        "Eb7": 99,
        "Eb8": 111,
        "Eb9": 123,
        "Ebb-1": 2,
        "Ebb0": 14,
        "Ebb1": 26,
        "Ebb2": 38,
        "Ebb3": 50,
        "Ebb4": 62,
        "Ebb5": 74,
        "Ebb6": 86,
        "Ebb7": 98,
        "Ebb8": 110,
        "Ebb9": 122,
        "Ebbb-1": 1,
        "Ebbb0": 13,
        "Ebbb1": 25,
        "Ebbb2": 37,
        "Ebbb3": 49,
        "Ebbb4": 61,
        "Ebbb5": 73,
        "Ebbb6": 85,
        "Ebbb7": 97,
        "Ebbb8": 109,
        "Ebbb9": 121,
        "F###-1": 8,
        "F###0": 20,
        "F###1": 32,
        "F###2": 44,
        "F###3": 56,
        "F###4": 68,
        "F###5": 80,
        "F###6": 92,
        "F###7": 104,
        "F###8": 116,
        "F##-1": 7,
        "F##0": 19,
        "F##1": 31,
        "F##2": 43,
        "F##3": 55,
        "F##4": 67,
        "F##5": 79,
        "F##6": 91,
        "F##7": 103,
        "F##8": 115,
        "F##9": 127,
        "F#-1": 6,
        "F#0": 18,
        "F#1": 30,
        "F#2": 42,
        "F#3": 54,
        "F#4": 66,
        "F#5": 78,
        "F#6": 90,
        "F#7": 102,
        "F#8": 114,
        "F#9": 126,
        "F-1": 5,
        "F0": 17,
        "F1": 29,
        "F2": 41,
        "F3": 53,
        "F4": 65,
        "F5": 77,
        "F6": 89,
        "F7": 101,
        "F8": 113,
        "F9": 125,
        "Fb-1": 4,
        "Fb0": 16,
        "Fb1": 28,
        "Fb2": 40,
        "Fb3": 52,
        "Fb4": 64,
        "Fb5": 76,
        "Fb6": 88,
        "Fb7": 100,
        "Fb8": 112,
        "Fb9": 124,
        "Fbb-1": 3,
        "Fbb0": 15,
        "Fbb1": 27,
        "Fbb2": 39,
        "Fbb3": 51,
        "Fbb4": 63,
        "Fbb5": 75,
        "Fbb6": 87,
        "Fbb7": 99,
        "Fbb8": 111,
        "Fbb9": 123,
        "Fbbb-1": 2,
        "Fbbb0": 14,
        "Fbbb1": 26,
        "Fbbb2": 38,
        "Fbbb3": 50,
        "Fbbb4": 62,
        "Fbbb5": 74,
        "Fbbb6": 86,
        "Fbbb7": 98,
        "Fbbb8": 110,
        "Fbbb9": 122,
        "G###-1": 10,
        "G###0": 22,
        "G###1": 34,
        "G###2": 46,
        "G###3": 58,
        "G###4": 70,
        "G###5": 82,
        "G###6": 94,
        "G###7": 106,
        "G###8": 118,
        "G##-1": 9,
        "G##0": 21,
        "G##1": 33,
        "G##2": 45,
        "G##3": 57,
        "G##4": 69,
        "G##5": 81,
        "G##6": 93,
        "G##7": 105,
        "G##8": 117,
        "G#-1": 8,
        "G#0": 20,
        "G#1": 32,
        "G#2": 44,
        "G#3": 56,
        "G#4": 68,
        "G#5": 80,
        "G#6": 92,
        "G#7": 104,
        "G#8": 116,
        "G-1": 7,
        "G0": 19,
        "G1": 31,
        "G2": 43,
        "G3": 55,
        "G4": 67,
        "G5": 79,
        "G6": 91,
        "G7": 103,
        "G8": 115,
        "G9": 127,
        "Gb-1": 6,
        "Gb0": 18,
        "Gb1": 30,
        "Gb2": 42,
        "Gb3": 54,
        "Gb4": 66,
        "Gb5": 78,
        "Gb6": 90,
        "Gb7": 102,
        "Gb8": 114,
        "Gb9": 126,
        "Gbb-1": 5,
        "Gbb0": 17,
        "Gbb1": 29,
        "Gbb2": 41,
        "Gbb3": 53,
        "Gbb4": 65,
        "Gbb5": 77,
        "Gbb6": 89,
        "Gbb7": 101,
        "Gbb8": 113,
        "Gbb9": 125,
        "Gbbb-1": 4,
        "Gbbb0": 16,
        "Gbbb1": 28,
        "Gbbb2": 40,
        "Gbbb3": 52,
        "Gbbb4": 64,
        "Gbbb5": 76,
        "Gbbb6": 88,
        "Gbbb7": 100,
        "Gbbb8": 112,
        "Gbbb9": 124,
    }


@pytest.fixture(scope="module")
def data_map_notenumber_to_notenames() -> dict[int, tuple[str | None, ...]]:
    return {
        0: (None, "Dbb-1", None, "C-1", "B#9", None, "A###9"),
        1: ("Ebbb-1", None, "Db-1", None, "C#-1", "B##9", None),
        2: ("Fbbb-1", "Ebb-1", None, "D-1", None, "C##-1", "B###9"),
        3: (None, "Fbb-1", "Eb-1", None, "D#-1", None, "C###-1"),
        4: ("Gbbb-1", None, "Fb-1", "E-1", None, "D##-1", None),
        5: (None, "Gbb-1", None, "F-1", "E#-1", None, "D###-1"),
        6: ("Abbb-1", None, "Gb-1", None, "F#-1", "E##-1", None),
        7: (None, "Abb-1", None, "G-1", None, "F##-1", "E###-1"),
        8: ("Bbbb-1", None, "Ab-1", None, "G#-1", None, "F###-1"),
        9: ("Cbbb0", "Bbb-1", None, "A-1", None, "G##-1", None),
        10: (None, "Cbb0", "Bb-1", None, "A#-1", None, "G###-1"),
        11: ("Dbbb0", None, "Cb0", "B-1", None, "A##-1", None),
        12: (None, "Dbb0", None, "C0", "B#-1", None, "A###-1"),
        13: ("Ebbb0", None, "Db0", None, "C#0", "B##-1", None),
        14: ("Fbbb0", "Ebb0", None, "D0", None, "C##0", "B###-1"),
        15: (None, "Fbb0", "Eb0", None, "D#0", None, "C###0"),
        16: ("Gbbb0", None, "Fb0", "E0", None, "D##0", None),
        17: (None, "Gbb0", None, "F0", "E#0", None, "D###0"),
        18: ("Abbb0", None, "Gb0", None, "F#0", "E##0", None),
        19: (None, "Abb0", None, "G0", None, "F##0", "E###0"),
        20: ("Bbbb0", None, "Ab0", None, "G#0", None, "F###0"),
        21: ("Cbbb1", "Bbb0", None, "A0", None, "G##0", None),
        22: (None, "Cbb1", "Bb0", None, "A#0", None, "G###0"),
        23: ("Dbbb1", None, "Cb1", "B0", None, "A##0", None),
        24: (None, "Dbb1", None, "C1", "B#0", None, "A###0"),
        25: ("Ebbb1", None, "Db1", None, "C#1", "B##0", None),
        26: ("Fbbb1", "Ebb1", None, "D1", None, "C##1", "B###0"),
        27: (None, "Fbb1", "Eb1", None, "D#1", None, "C###1"),
        28: ("Gbbb1", None, "Fb1", "E1", None, "D##1", None),
        29: (None, "Gbb1", None, "F1", "E#1", None, "D###1"),
        30: ("Abbb1", None, "Gb1", None, "F#1", "E##1", None),
        31: (None, "Abb1", None, "G1", None, "F##1", "E###1"),
        32: ("Bbbb1", None, "Ab1", None, "G#1", None, "F###1"),
        33: ("Cbbb2", "Bbb1", None, "A1", None, "G##1", None),
        34: (None, "Cbb2", "Bb1", None, "A#1", None, "G###1"),
        35: ("Dbbb2", None, "Cb2", "B1", None, "A##1", None),
        36: (None, "Dbb2", None, "C2", "B#1", None, "A###1"),
        37: ("Ebbb2", None, "Db2", None, "C#2", "B##1", None),
        38: ("Fbbb2", "Ebb2", None, "D2", None, "C##2", "B###1"),
        39: (None, "Fbb2", "Eb2", None, "D#2", None, "C###2"),
        40: ("Gbbb2", None, "Fb2", "E2", None, "D##2", None),
        41: (None, "Gbb2", None, "F2", "E#2", None, "D###2"),
        42: ("Abbb2", None, "Gb2", None, "F#2", "E##2", None),
        43: (None, "Abb2", None, "G2", None, "F##2", "E###2"),
        44: ("Bbbb2", None, "Ab2", None, "G#2", None, "F###2"),
        45: ("Cbbb3", "Bbb2", None, "A2", None, "G##2", None),
        46: (None, "Cbb3", "Bb2", None, "A#2", None, "G###2"),
        47: ("Dbbb3", None, "Cb3", "B2", None, "A##2", None),
        48: (None, "Dbb3", None, "C3", "B#2", None, "A###2"),
        49: ("Ebbb3", None, "Db3", None, "C#3", "B##2", None),
        50: ("Fbbb3", "Ebb3", None, "D3", None, "C##3", "B###2"),
        51: (None, "Fbb3", "Eb3", None, "D#3", None, "C###3"),
        52: ("Gbbb3", None, "Fb3", "E3", None, "D##3", None),
        53: (None, "Gbb3", None, "F3", "E#3", None, "D###3"),
        54: ("Abbb3", None, "Gb3", None, "F#3", "E##3", None),
        55: (None, "Abb3", None, "G3", None, "F##3", "E###3"),
        56: ("Bbbb3", None, "Ab3", None, "G#3", None, "F###3"),
        57: ("Cbbb4", "Bbb3", None, "A3", None, "G##3", None),
        58: (None, "Cbb4", "Bb3", None, "A#3", None, "G###3"),
        59: ("Dbbb4", None, "Cb4", "B3", None, "A##3", None),
        60: (None, "Dbb4", None, "C4", "B#3", None, "A###3"),
        61: ("Ebbb4", None, "Db4", None, "C#4", "B##3", None),
        62: ("Fbbb4", "Ebb4", None, "D4", None, "C##4", "B###3"),
        63: (None, "Fbb4", "Eb4", None, "D#4", None, "C###4"),
        64: ("Gbbb4", None, "Fb4", "E4", None, "D##4", None),
        65: (None, "Gbb4", None, "F4", "E#4", None, "D###4"),
        66: ("Abbb4", None, "Gb4", None, "F#4", "E##4", None),
        67: (None, "Abb4", None, "G4", None, "F##4", "E###4"),
        68: ("Bbbb4", None, "Ab4", None, "G#4", None, "F###4"),
        69: ("Cbbb5", "Bbb4", None, "A4", None, "G##4", None),
        70: (None, "Cbb5", "Bb4", None, "A#4", None, "G###4"),
        71: ("Dbbb5", None, "Cb5", "B4", None, "A##4", None),
        72: (None, "Dbb5", None, "C5", "B#4", None, "A###4"),
        73: ("Ebbb5", None, "Db5", None, "C#5", "B##4", None),
        74: ("Fbbb5", "Ebb5", None, "D5", None, "C##5", "B###4"),
        75: (None, "Fbb5", "Eb5", None, "D#5", None, "C###5"),
        76: ("Gbbb5", None, "Fb5", "E5", None, "D##5", None),
        77: (None, "Gbb5", None, "F5", "E#5", None, "D###5"),
        78: ("Abbb5", None, "Gb5", None, "F#5", "E##5", None),
        79: (None, "Abb5", None, "G5", None, "F##5", "E###5"),
        80: ("Bbbb5", None, "Ab5", None, "G#5", None, "F###5"),
        81: ("Cbbb6", "Bbb5", None, "A5", None, "G##5", None),
        82: (None, "Cbb6", "Bb5", None, "A#5", None, "G###5"),
        83: ("Dbbb6", None, "Cb6", "B5", None, "A##5", None),
        84: (None, "Dbb6", None, "C6", "B#5", None, "A###5"),
        85: ("Ebbb6", None, "Db6", None, "C#6", "B##5", None),
        86: ("Fbbb6", "Ebb6", None, "D6", None, "C##6", "B###5"),
        87: (None, "Fbb6", "Eb6", None, "D#6", None, "C###6"),
        88: ("Gbbb6", None, "Fb6", "E6", None, "D##6", None),
        89: (None, "Gbb6", None, "F6", "E#6", None, "D###6"),
        90: ("Abbb6", None, "Gb6", None, "F#6", "E##6", None),
        91: (None, "Abb6", None, "G6", None, "F##6", "E###6"),
        92: ("Bbbb6", None, "Ab6", None, "G#6", None, "F###6"),
        93: ("Cbbb7", "Bbb6", None, "A6", None, "G##6", None),
        94: (None, "Cbb7", "Bb6", None, "A#6", None, "G###6"),
        95: ("Dbbb7", None, "Cb7", "B6", None, "A##6", None),
        96: (None, "Dbb7", None, "C7", "B#6", None, "A###6"),
        97: ("Ebbb7", None, "Db7", None, "C#7", "B##6", None),
        98: ("Fbbb7", "Ebb7", None, "D7", None, "C##7", "B###6"),
        99: (None, "Fbb7", "Eb7", None, "D#7", None, "C###7"),
        100: ("Gbbb7", None, "Fb7", "E7", None, "D##7", None),
        101: (None, "Gbb7", None, "F7", "E#7", None, "D###7"),
        102: ("Abbb7", None, "Gb7", None, "F#7", "E##7", None),
        103: (None, "Abb7", None, "G7", None, "F##7", "E###7"),
        104: ("Bbbb7", None, "Ab7", None, "G#7", None, "F###7"),
        105: ("Cbbb8", "Bbb7", None, "A7", None, "G##7", None),
        106: (None, "Cbb8", "Bb7", None, "A#7", None, "G###7"),
        107: ("Dbbb8", None, "Cb8", "B7", None, "A##7", None),
        108: (None, "Dbb8", None, "C8", "B#7", None, "A###7"),
        109: ("Ebbb8", None, "Db8", None, "C#8", "B##7", None),
        110: ("Fbbb8", "Ebb8", None, "D8", None, "C##8", "B###7"),
        111: (None, "Fbb8", "Eb8", None, "D#8", None, "C###8"),
        112: ("Gbbb8", None, "Fb8", "E8", None, "D##8", None),
        113: (None, "Gbb8", None, "F8", "E#8", None, "D###8"),
        114: ("Abbb8", None, "Gb8", None, "F#8", "E##8", None),
        115: (None, "Abb8", None, "G8", None, "F##8", "E###8"),
        116: ("Bbbb8", None, "Ab8", None, "G#8", None, "F###8"),
        117: ("Cbbb9", "Bbb8", None, "A8", None, "G##8", None),
        118: (None, "Cbb9", "Bb8", None, "A#8", None, "G###8"),
        119: ("Dbbb9", None, "Cb9", "B8", None, "A##8", None),
        120: (None, "Dbb9", None, "C9", "B#8", None, "A###8"),
        121: ("Ebbb9", None, "Db9", None, "C#9", "B##8", None),
        122: ("Fbbb9", "Ebb9", None, "D9", None, "C##9", "B###8"),
        123: (None, "Fbb9", "Eb9", None, "D#9", None, "C###9"),
        124: ("Gbbb9", None, "Fb9", "E9", None, "D##9", None),
        125: (None, "Gbb9", None, "F9", "E#9", None, "D###9"),
        126: ("Abbb9", None, "Gb9", None, "F#9", "E##9", None),
        127: (None, "Abb9", None, "G9", None, "F##9", "E###9"),
    }


@pytest.fixture(scope="module")
def data_keynames() -> list[str]:
    return [
        "C",
        "B#",
        "Db",
        "C#",
        "D",
        "Eb",
        "D#",
        "Fb",
        "E",
        "F",
        "E#",
        "Gb",
        "F#",
        "G",
        "Ab",
        "G#",
        "A",
        "Bb",
        "A#",
        "Cb",
        "B",
    ]
