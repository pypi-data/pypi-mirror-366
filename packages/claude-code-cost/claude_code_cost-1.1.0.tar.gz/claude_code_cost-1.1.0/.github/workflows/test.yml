name: Cross-platform Testing

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '*.md'
      - '*.png'
      - '*.jpg'
      - '*.jpeg'
      - '*.gif'
      - '*.svg'
      - 'docs/**'
      - 'screenshot*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - '*.png'
      - '*.jpg'
      - '*.jpeg'
      - '*.gif'
      - '*.svg'
      - 'docs/**'
      - 'screenshot*'
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.13"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyright>=1.1.403
        pip install pytest
        pip install -e .
      
    - name: Run type checking
      run: |
        pyright claude_code_cost/
        pyright tests/
      
    - name: Create test data directory
      shell: bash
      run: |
        mkdir -p test_data/.claude/projects
        
    - name: Generate test data (Unix)
      if: runner.os != 'Windows'
      run: |
        python tests/generate_test_data.py test_data/.claude/projects
        
    - name: Generate test data (Windows)
      if: runner.os == 'Windows'
      run: |
        python tests\generate_test_data.py test_data\.claude\projects
        
    - name: Run basic functionality test
      env:
        PYTHONIOENCODING: utf-8
      run: |
        python -m claude_code_cost.cli --data-dir test_data/.claude/projects --log-level INFO --max-days 0 --max-projects 0
        
    - name: Run comprehensive verification tests
      env:
        PYTHONIOENCODING: utf-8
      run: |
        python tests/test_verification.py
        
    - name: Test JSON export
      env:
        PYTHONIOENCODING: utf-8
      run: |
        python -m claude_code_cost.cli --data-dir test_data/.claude/projects --export-json test_output.json
        
    - name: Test currency conversion
      env:
        PYTHONIOENCODING: utf-8
      run: |
        python -m claude_code_cost.cli --data-dir test_data/.claude/projects --currency USD --log-level INFO
        python -m claude_code_cost.cli --data-dir test_data/.claude/projects --currency CNY --usd-to-cny 7.0 --log-level INFO
        
    - name: Test language options
      env:
        PYTHONIOENCODING: utf-8
      run: |
        python -m claude_code_cost.cli --data-dir test_data/.claude/projects --language en --log-level INFO
        python -m claude_code_cost.cli --data-dir test_data/.claude/projects --language zh --log-level INFO
        
    - name: Verify JSON output exists
      shell: bash
      run: |
        if [ ! -f test_output.json ]; then
          echo "JSON export failed"
          exit 1
        fi
        echo "JSON export successful"
        
    - name: Clean up test files
      if: always()
      shell: bash
      run: |
        rm -rf test_data
        rm -f test_output.json