# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  do-tests:
    uses: ./.github/workflows/run-pytest.yml

  build-wheels:
    needs: do-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels for ${{ matrix.python-version }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install repairwheel build
          python -m build -w -o .cache/dist
          repairwheel .cache/dist/*.whl -o dist/

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: ci-wheels-${{ matrix.python-version }}
          path: ./dist/*.whl

  build-sdist:
    needs: do-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build source distribution
        run: pipx run build --sdist

      - name: Upload source distribution
        uses: actions/upload-artifact@v4
        with:
          name: ci-sdist
          path: ./dist/*.tar.gz

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - build-wheels
      - build-sdist
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/project/uproot-custom
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: ci-*
          merge-multiple: true

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
