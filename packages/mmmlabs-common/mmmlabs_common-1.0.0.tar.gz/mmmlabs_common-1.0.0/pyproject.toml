# pyproject.toml - Modern Python project configuration
[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mmmlabs-common"
version = "1.0.0"
description = "Cloud-agnostic utilities for MMMLabs services"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MMM Labs", email = "info@mmmlabs.ai"}
]
maintainers = [
    {name = "MMM Labs", email = "info@mmmlabs.ai"}
]
keywords = ["cloud", "gcp", "azure", "aws", "utilities", "multi-cloud"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "requests>=2.28.0",
    "pydantic>=1.10.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
gcp = [
    "google-cloud-storage>=2.16.0",
    "google-cloud-firestore>=2.16.0",
    "google-cloud-pubsub>=2.21.0",
    "google-api-python-client>=2.140.0",
]
azure = [
    "azure-storage-blob>=12.17.0",
    "azure-servicebus>=7.11.0",
    "azure-cosmos>=4.5.0",
    "azure-identity>=1.13.0",
]
aws = [
    "boto3>=1.28.0",
    "botocore>=1.31.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit[toml]>=1.7.0",
    "safety>=2.0.0",
]
all = [
    "mmmlabs-common[gcp,azure,aws]",
]

[project.urls]
Homepage = "https://github.com/mmmlabs/mmmlabs-common"
Documentation = "https://mmmlabs.github.io/mmmlabs-common"
Repository = "https://github.com/mmmlabs/mmmlabs-common"
Issues = "https://github.com/mmmlabs/mmmlabs-common/issues"
Changelog = "https://github.com/mmmlabs/mmmlabs-common/blob/main/CHANGELOG.md"

[project.scripts]
mmmlabs-config = "mmmlabs.cli:main"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mmmlabs"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=mmmlabs",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gcp: marks tests that require GCP",
    "azure: marks tests that require Azure", 
    "aws: marks tests that require AWS",
]

# Coverage configuration
[tool.coverage.run]
source = ["mmmlabs"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

# Bandit configuration file: .bandit
# [bandit]
# exclude: /tests
# skips: B101,B601