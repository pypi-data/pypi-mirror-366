# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import user_service_pb2 as user__service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListUsers = channel.unary_unary(
                '/mygrpc.UserService/ListUsers',
                request_serializer=user__service__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=user__service__pb2.ListUsersResponse.FromString,
                _registered_method=True)
        self.RetrieveUser = channel.unary_unary(
                '/mygrpc.UserService/RetrieveUser',
                request_serializer=user__service__pb2.RetrieveUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.RetrieveUserResponse.FromString,
                _registered_method=True)
        self.PartialUpdateUser = channel.unary_unary(
                '/mygrpc.UserService/PartialUpdateUser',
                request_serializer=user__service__pb2.PartialUpdateUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.PartialUpdateUserResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/mygrpc.UserService/CreateUser',
                request_serializer=user__service__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.CreateUserResponse.FromString,
                _registered_method=True)
        self.CreateUsersFromExcel = channel.unary_unary(
                '/mygrpc.UserService/CreateUsersFromExcel',
                request_serializer=user__service__pb2.CreateUsersFromExcelRequest.SerializeToString,
                response_deserializer=user__service__pb2.CreateUsersFromExcelResponse.FromString,
                _registered_method=True)
        self.GetProfile = channel.unary_unary(
                '/mygrpc.UserService/GetProfile',
                request_serializer=user__service__pb2.GetProfileRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetProfileResponse.FromString,
                _registered_method=True)
        self.GetUserProfiles = channel.unary_unary(
                '/mygrpc.UserService/GetUserProfiles',
                request_serializer=user__service__pb2.GetUserProfilesRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetUserProfilesResponse.FromString,
                _registered_method=True)
        self.UpdateIsActive = channel.unary_unary(
                '/mygrpc.UserService/UpdateIsActive',
                request_serializer=user__service__pb2.UpdateIsActiveRequest.SerializeToString,
                response_deserializer=user__service__pb2.UpdateIsActiveResponse.FromString,
                _registered_method=True)
        self.UpdateProfileImage = channel.unary_unary(
                '/mygrpc.UserService/UpdateProfileImage',
                request_serializer=user__service__pb2.UpdateProfileImageRequest.SerializeToString,
                response_deserializer=user__service__pb2.UpdateProfileImageResponse.FromString,
                _registered_method=True)
        self.UpdateBannerImage = channel.unary_unary(
                '/mygrpc.UserService/UpdateBannerImage',
                request_serializer=user__service__pb2.UpdateBannerImageRequest.SerializeToString,
                response_deserializer=user__service__pb2.UpdateBannerImageResponse.FromString,
                _registered_method=True)
        self.GetCircleRequests = channel.unary_unary(
                '/mygrpc.UserService/GetCircleRequests',
                request_serializer=user__service__pb2.GetCircleRequestsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetCircleRequestsResponse.FromString,
                _registered_method=True)
        self.GetDropdownFilters = channel.unary_unary(
                '/mygrpc.UserService/GetDropdownFilters',
                request_serializer=user__service__pb2.GetDropdownFiltersRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetDropdownFiltersResponse.FromString,
                _registered_method=True)
        self.SendBirthdayWish = channel.unary_unary(
                '/mygrpc.UserService/SendBirthdayWish',
                request_serializer=user__service__pb2.SendBirthdayWishRequest.SerializeToString,
                response_deserializer=user__service__pb2.SendBirthdayWishResponse.FromString,
                _registered_method=True)
        self.SendWorkAnniversaryWish = channel.unary_unary(
                '/mygrpc.UserService/SendWorkAnniversaryWish',
                request_serializer=user__service__pb2.SendWorkAnniversaryWishRequest.SerializeToString,
                response_deserializer=user__service__pb2.SendWorkAnniversaryWishResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PartialUpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUsersFromExcel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserProfiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIsActive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBannerImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCircleRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDropdownFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendBirthdayWish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendWorkAnniversaryWish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=user__service__pb2.ListUsersRequest.FromString,
                    response_serializer=user__service__pb2.ListUsersResponse.SerializeToString,
            ),
            'RetrieveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveUser,
                    request_deserializer=user__service__pb2.RetrieveUserRequest.FromString,
                    response_serializer=user__service__pb2.RetrieveUserResponse.SerializeToString,
            ),
            'PartialUpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.PartialUpdateUser,
                    request_deserializer=user__service__pb2.PartialUpdateUserRequest.FromString,
                    response_serializer=user__service__pb2.PartialUpdateUserResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=user__service__pb2.CreateUserRequest.FromString,
                    response_serializer=user__service__pb2.CreateUserResponse.SerializeToString,
            ),
            'CreateUsersFromExcel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUsersFromExcel,
                    request_deserializer=user__service__pb2.CreateUsersFromExcelRequest.FromString,
                    response_serializer=user__service__pb2.CreateUsersFromExcelResponse.SerializeToString,
            ),
            'GetProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfile,
                    request_deserializer=user__service__pb2.GetProfileRequest.FromString,
                    response_serializer=user__service__pb2.GetProfileResponse.SerializeToString,
            ),
            'GetUserProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProfiles,
                    request_deserializer=user__service__pb2.GetUserProfilesRequest.FromString,
                    response_serializer=user__service__pb2.GetUserProfilesResponse.SerializeToString,
            ),
            'UpdateIsActive': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIsActive,
                    request_deserializer=user__service__pb2.UpdateIsActiveRequest.FromString,
                    response_serializer=user__service__pb2.UpdateIsActiveResponse.SerializeToString,
            ),
            'UpdateProfileImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileImage,
                    request_deserializer=user__service__pb2.UpdateProfileImageRequest.FromString,
                    response_serializer=user__service__pb2.UpdateProfileImageResponse.SerializeToString,
            ),
            'UpdateBannerImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBannerImage,
                    request_deserializer=user__service__pb2.UpdateBannerImageRequest.FromString,
                    response_serializer=user__service__pb2.UpdateBannerImageResponse.SerializeToString,
            ),
            'GetCircleRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCircleRequests,
                    request_deserializer=user__service__pb2.GetCircleRequestsRequest.FromString,
                    response_serializer=user__service__pb2.GetCircleRequestsResponse.SerializeToString,
            ),
            'GetDropdownFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDropdownFilters,
                    request_deserializer=user__service__pb2.GetDropdownFiltersRequest.FromString,
                    response_serializer=user__service__pb2.GetDropdownFiltersResponse.SerializeToString,
            ),
            'SendBirthdayWish': grpc.unary_unary_rpc_method_handler(
                    servicer.SendBirthdayWish,
                    request_deserializer=user__service__pb2.SendBirthdayWishRequest.FromString,
                    response_serializer=user__service__pb2.SendBirthdayWishResponse.SerializeToString,
            ),
            'SendWorkAnniversaryWish': grpc.unary_unary_rpc_method_handler(
                    servicer.SendWorkAnniversaryWish,
                    request_deserializer=user__service__pb2.SendWorkAnniversaryWishRequest.FromString,
                    response_serializer=user__service__pb2.SendWorkAnniversaryWishResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mygrpc.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mygrpc.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/ListUsers',
            user__service__pb2.ListUsersRequest.SerializeToString,
            user__service__pb2.ListUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RetrieveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/RetrieveUser',
            user__service__pb2.RetrieveUserRequest.SerializeToString,
            user__service__pb2.RetrieveUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PartialUpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/PartialUpdateUser',
            user__service__pb2.PartialUpdateUserRequest.SerializeToString,
            user__service__pb2.PartialUpdateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/CreateUser',
            user__service__pb2.CreateUserRequest.SerializeToString,
            user__service__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUsersFromExcel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/CreateUsersFromExcel',
            user__service__pb2.CreateUsersFromExcelRequest.SerializeToString,
            user__service__pb2.CreateUsersFromExcelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/GetProfile',
            user__service__pb2.GetProfileRequest.SerializeToString,
            user__service__pb2.GetProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/GetUserProfiles',
            user__service__pb2.GetUserProfilesRequest.SerializeToString,
            user__service__pb2.GetUserProfilesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateIsActive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/UpdateIsActive',
            user__service__pb2.UpdateIsActiveRequest.SerializeToString,
            user__service__pb2.UpdateIsActiveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProfileImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/UpdateProfileImage',
            user__service__pb2.UpdateProfileImageRequest.SerializeToString,
            user__service__pb2.UpdateProfileImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBannerImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/UpdateBannerImage',
            user__service__pb2.UpdateBannerImageRequest.SerializeToString,
            user__service__pb2.UpdateBannerImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCircleRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/GetCircleRequests',
            user__service__pb2.GetCircleRequestsRequest.SerializeToString,
            user__service__pb2.GetCircleRequestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDropdownFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/GetDropdownFilters',
            user__service__pb2.GetDropdownFiltersRequest.SerializeToString,
            user__service__pb2.GetDropdownFiltersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendBirthdayWish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/SendBirthdayWish',
            user__service__pb2.SendBirthdayWishRequest.SerializeToString,
            user__service__pb2.SendBirthdayWishResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendWorkAnniversaryWish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mygrpc.UserService/SendWorkAnniversaryWish',
            user__service__pb2.SendWorkAnniversaryWishRequest.SerializeToString,
            user__service__pb2.SendWorkAnniversaryWishResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
