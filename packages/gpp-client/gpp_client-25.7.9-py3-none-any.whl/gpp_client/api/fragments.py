# Generated by ariadne-codegen
# Source: src/queries

from typing import Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    Breakpoint,
    GcalArc,
    GcalContinuum,
    GcalDiffuser,
    GcalFilter,
    GcalShutter,
    GmosBinning,
    GmosDtax,
    GmosNorthBuiltinFpu,
    GmosNorthFilter,
    GmosNorthGrating,
    GmosRoi,
    GmosSouthBuiltinFpu,
    GmosSouthFilter,
    GmosSouthGrating,
    ObserveClass,
    StepType,
)


class SchedulerAtomStep(BaseModel):
    instrument_config: "SchedulerAtomStepInstrumentConfig" = Field(
        alias="instrumentConfig"
    )
    breakpoint: Breakpoint
    estimate: "SchedulerAtomStepEstimate"
    observe_class: ObserveClass = Field(alias="observeClass")
    step_config: Union[
        "SchedulerAtomStepStepConfigStepConfig", "SchedulerAtomStepStepConfigGcal"
    ] = Field(alias="stepConfig", discriminator="typename__")
    telescope_config: "SchedulerAtomStepTelescopeConfig" = Field(
        alias="telescopeConfig"
    )


class SchedulerAtomStepInstrumentConfig(BaseModel):
    exposure: "SchedulerAtomStepInstrumentConfigExposure"
    readout: "SchedulerAtomStepInstrumentConfigReadout"
    dtax: GmosDtax
    roi: GmosRoi
    grating_config: Optional["SchedulerAtomStepInstrumentConfigGratingConfig"] = Field(
        alias="gratingConfig"
    )
    filter: Optional[GmosNorthFilter]
    fpu: Optional["SchedulerAtomStepInstrumentConfigFpu"]
    central_wavelength: Optional[
        "SchedulerAtomStepInstrumentConfigCentralWavelength"
    ] = Field(alias="centralWavelength")


class SchedulerAtomStepInstrumentConfigExposure(BaseModel):
    seconds: Any


class SchedulerAtomStepInstrumentConfigReadout(BaseModel):
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")


class SchedulerAtomStepInstrumentConfigGratingConfig(BaseModel):
    grating: GmosNorthGrating
    wavelength: "SchedulerAtomStepInstrumentConfigGratingConfigWavelength"


class SchedulerAtomStepInstrumentConfigGratingConfigWavelength(BaseModel):
    nanometers: Any


class SchedulerAtomStepInstrumentConfigFpu(BaseModel):
    builtin: Optional[GmosNorthBuiltinFpu]


class SchedulerAtomStepInstrumentConfigCentralWavelength(BaseModel):
    nanometers: Any


class SchedulerAtomStepEstimate(BaseModel):
    total: "SchedulerAtomStepEstimateTotal"


class SchedulerAtomStepEstimateTotal(BaseModel):
    seconds: Any


class SchedulerAtomStepStepConfigStepConfig(BaseModel):
    typename__: Literal["Bias", "Dark", "Science", "SmartGcal", "StepConfig"] = Field(
        alias="__typename"
    )
    step_type: StepType = Field(alias="stepType")


class SchedulerAtomStepStepConfigGcal(BaseModel):
    typename__: Literal["Gcal"] = Field(alias="__typename")
    step_type: StepType = Field(alias="stepType")
    continuum: Optional[GcalContinuum]
    arcs: List[GcalArc]
    filter: GcalFilter
    diffuser: GcalDiffuser
    shutter: GcalShutter


class SchedulerAtomStepTelescopeConfig(BaseModel):
    offset: "SchedulerAtomStepTelescopeConfigOffset"


class SchedulerAtomStepTelescopeConfigOffset(BaseModel):
    p: "SchedulerAtomStepTelescopeConfigOffsetP"
    q: "SchedulerAtomStepTelescopeConfigOffsetQ"


class SchedulerAtomStepTelescopeConfigOffsetP(BaseModel):
    arcseconds: Any


class SchedulerAtomStepTelescopeConfigOffsetQ(BaseModel):
    arcseconds: Any


class SchedulerAtomStepNorth(BaseModel):
    instrument_config: "SchedulerAtomStepNorthInstrumentConfig" = Field(
        alias="instrumentConfig"
    )
    breakpoint: Breakpoint
    estimate: "SchedulerAtomStepNorthEstimate"
    observe_class: ObserveClass = Field(alias="observeClass")
    step_config: Union[
        "SchedulerAtomStepNorthStepConfigStepConfig",
        "SchedulerAtomStepNorthStepConfigGcal",
    ] = Field(alias="stepConfig", discriminator="typename__")
    telescope_config: "SchedulerAtomStepNorthTelescopeConfig" = Field(
        alias="telescopeConfig"
    )


class SchedulerAtomStepNorthInstrumentConfig(BaseModel):
    exposure: "SchedulerAtomStepNorthInstrumentConfigExposure"
    readout: "SchedulerAtomStepNorthInstrumentConfigReadout"
    dtax: GmosDtax
    roi: GmosRoi
    grating_config: Optional["SchedulerAtomStepNorthInstrumentConfigGratingConfig"] = (
        Field(alias="gratingConfig")
    )
    filter: Optional[GmosNorthFilter]
    fpu: Optional["SchedulerAtomStepNorthInstrumentConfigFpu"]
    central_wavelength: Optional[
        "SchedulerAtomStepNorthInstrumentConfigCentralWavelength"
    ] = Field(alias="centralWavelength")


class SchedulerAtomStepNorthInstrumentConfigExposure(BaseModel):
    seconds: Any


class SchedulerAtomStepNorthInstrumentConfigReadout(BaseModel):
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")


class SchedulerAtomStepNorthInstrumentConfigGratingConfig(BaseModel):
    grating: GmosNorthGrating
    wavelength: "SchedulerAtomStepNorthInstrumentConfigGratingConfigWavelength"


class SchedulerAtomStepNorthInstrumentConfigGratingConfigWavelength(BaseModel):
    nanometers: Any


class SchedulerAtomStepNorthInstrumentConfigFpu(BaseModel):
    builtin: Optional[GmosNorthBuiltinFpu]


class SchedulerAtomStepNorthInstrumentConfigCentralWavelength(BaseModel):
    nanometers: Any


class SchedulerAtomStepNorthEstimate(BaseModel):
    total: "SchedulerAtomStepNorthEstimateTotal"


class SchedulerAtomStepNorthEstimateTotal(BaseModel):
    seconds: Any


class SchedulerAtomStepNorthStepConfigStepConfig(BaseModel):
    typename__: Literal["Bias", "Dark", "Science", "SmartGcal", "StepConfig"] = Field(
        alias="__typename"
    )
    step_type: StepType = Field(alias="stepType")


class SchedulerAtomStepNorthStepConfigGcal(BaseModel):
    typename__: Literal["Gcal"] = Field(alias="__typename")
    step_type: StepType = Field(alias="stepType")
    continuum: Optional[GcalContinuum]
    arcs: List[GcalArc]
    filter: GcalFilter
    diffuser: GcalDiffuser
    shutter: GcalShutter


class SchedulerAtomStepNorthTelescopeConfig(BaseModel):
    offset: "SchedulerAtomStepNorthTelescopeConfigOffset"


class SchedulerAtomStepNorthTelescopeConfigOffset(BaseModel):
    p: "SchedulerAtomStepNorthTelescopeConfigOffsetP"
    q: "SchedulerAtomStepNorthTelescopeConfigOffsetQ"


class SchedulerAtomStepNorthTelescopeConfigOffsetP(BaseModel):
    arcseconds: Any


class SchedulerAtomStepNorthTelescopeConfigOffsetQ(BaseModel):
    arcseconds: Any


class SchedulerAtomStepSouth(BaseModel):
    instrument_config: "SchedulerAtomStepSouthInstrumentConfig" = Field(
        alias="instrumentConfig"
    )
    breakpoint: Breakpoint
    estimate: "SchedulerAtomStepSouthEstimate"
    observe_class: ObserveClass = Field(alias="observeClass")
    step_config: Union[
        "SchedulerAtomStepSouthStepConfigStepConfig",
        "SchedulerAtomStepSouthStepConfigGcal",
    ] = Field(alias="stepConfig", discriminator="typename__")
    telescope_config: "SchedulerAtomStepSouthTelescopeConfig" = Field(
        alias="telescopeConfig"
    )


class SchedulerAtomStepSouthInstrumentConfig(BaseModel):
    exposure: "SchedulerAtomStepSouthInstrumentConfigExposure"
    readout: "SchedulerAtomStepSouthInstrumentConfigReadout"
    dtax: GmosDtax
    roi: GmosRoi
    grating_config: Optional["SchedulerAtomStepSouthInstrumentConfigGratingConfig"] = (
        Field(alias="gratingConfig")
    )
    filter: Optional[GmosSouthFilter]
    fpu: Optional["SchedulerAtomStepSouthInstrumentConfigFpu"]
    central_wavelength: Optional[
        "SchedulerAtomStepSouthInstrumentConfigCentralWavelength"
    ] = Field(alias="centralWavelength")


class SchedulerAtomStepSouthInstrumentConfigExposure(BaseModel):
    seconds: Any


class SchedulerAtomStepSouthInstrumentConfigReadout(BaseModel):
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")


class SchedulerAtomStepSouthInstrumentConfigGratingConfig(BaseModel):
    grating: GmosSouthGrating
    wavelength: "SchedulerAtomStepSouthInstrumentConfigGratingConfigWavelength"


class SchedulerAtomStepSouthInstrumentConfigGratingConfigWavelength(BaseModel):
    nanometers: Any


class SchedulerAtomStepSouthInstrumentConfigFpu(BaseModel):
    builtin: Optional[GmosSouthBuiltinFpu]


class SchedulerAtomStepSouthInstrumentConfigCentralWavelength(BaseModel):
    nanometers: Any


class SchedulerAtomStepSouthEstimate(BaseModel):
    total: "SchedulerAtomStepSouthEstimateTotal"


class SchedulerAtomStepSouthEstimateTotal(BaseModel):
    seconds: Any


class SchedulerAtomStepSouthStepConfigStepConfig(BaseModel):
    typename__: Literal["Bias", "Dark", "Science", "SmartGcal", "StepConfig"] = Field(
        alias="__typename"
    )
    step_type: StepType = Field(alias="stepType")


class SchedulerAtomStepSouthStepConfigGcal(BaseModel):
    typename__: Literal["Gcal"] = Field(alias="__typename")
    step_type: StepType = Field(alias="stepType")
    continuum: Optional[GcalContinuum]
    arcs: List[GcalArc]
    filter: GcalFilter
    diffuser: GcalDiffuser
    shutter: GcalShutter


class SchedulerAtomStepSouthTelescopeConfig(BaseModel):
    offset: "SchedulerAtomStepSouthTelescopeConfigOffset"


class SchedulerAtomStepSouthTelescopeConfigOffset(BaseModel):
    p: "SchedulerAtomStepSouthTelescopeConfigOffsetP"
    q: "SchedulerAtomStepSouthTelescopeConfigOffsetQ"


class SchedulerAtomStepSouthTelescopeConfigOffsetP(BaseModel):
    arcseconds: Any


class SchedulerAtomStepSouthTelescopeConfigOffsetQ(BaseModel):
    arcseconds: Any


SchedulerAtomStep.model_rebuild()
SchedulerAtomStepNorth.model_rebuild()
SchedulerAtomStepSouth.model_rebuild()
