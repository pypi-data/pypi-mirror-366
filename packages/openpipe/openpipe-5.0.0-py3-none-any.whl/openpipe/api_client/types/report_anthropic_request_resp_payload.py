# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import typing_extensions

from ..core.datetime_utils import serialize_datetime
from .report_anthropic_request_resp_payload_content_item import ReportAnthropicRequestRespPayloadContentItem
from .report_anthropic_request_resp_payload_stop_reason import ReportAnthropicRequestRespPayloadStopReason
from .report_anthropic_request_resp_payload_stop_sequence import ReportAnthropicRequestRespPayloadStopSequence
from .report_anthropic_request_resp_payload_usage import ReportAnthropicRequestRespPayloadUsage

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ReportAnthropicRequestRespPayload(pydantic.BaseModel):
    """
    JSON-encoded response payload
    """

    id: str
    content: typing.List[ReportAnthropicRequestRespPayloadContentItem]
    model: str
    role: typing_extensions.Literal["assistant"]
    stop_reason: ReportAnthropicRequestRespPayloadStopReason
    stop_sequence: ReportAnthropicRequestRespPayloadStopSequence
    type: typing_extensions.Literal["message"]
    usage: ReportAnthropicRequestRespPayloadUsage

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
