# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .spray_target_service import SprayTargetService
from .spray_mode import SprayMode
import pydantic
import typing
from .spray_attempt import SprayAttempt
from .spray_statistics import SprayStatistics
from .credential import Credential
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class SprayTargetResult(UniversalBaseModel):
    target: str
    service: SprayTargetService
    operation_type: SprayMode = pydantic.Field(alias="operationType")
    attempts: typing.List[SprayAttempt]
    statistics: SprayStatistics
    successful_credentials: typing.Optional[typing.List[Credential]] = pydantic.Field(
        alias="successfulCredentials", default=None
    )
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
