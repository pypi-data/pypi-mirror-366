# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from .auth_method import AuthMethod
import pydantic
from .key_exchange_algorithm import KeyExchangeAlgorithm
from .host_key_algorithm import HostKeyAlgorithm
from .cipher_algorithm import CipherAlgorithm
from .mac_algorithm import MacAlgorithm
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class EnumerateSshDetails(UniversalBaseModel):
    target: str
    version: typing.Optional[str] = None
    auth_methods: typing.Optional[typing.List[AuthMethod]] = pydantic.Field(alias="authMethods", default=None)
    key_exchange_algos: typing.Optional[typing.List[KeyExchangeAlgorithm]] = pydantic.Field(
        alias="keyExchangeAlgos", default=None
    )
    host_key_algos: typing.Optional[typing.List[HostKeyAlgorithm]] = pydantic.Field(alias="hostKeyAlgos", default=None)
    ciphers: typing.Optional[typing.List[CipherAlgorithm]] = None
    macs: typing.Optional[typing.List[MacAlgorithm]] = None
    raw_ascii: typing.Optional[str] = pydantic.Field(alias="rawASCII", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
