# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class DomainComputer(UniversalBaseModel):
    distinguished_name: str = pydantic.Field(alias="distinguishedName")
    sam_account_name: str = pydantic.Field(alias="samAccountName")
    dns_host_name: typing.Optional[str] = pydantic.Field(alias="dnsHostName", default=None)
    description: typing.Optional[str] = None
    object_sid: str = pydantic.Field(alias="objectSid")
    operating_system: typing.Optional[str] = pydantic.Field(alias="operatingSystem", default=None)
    operating_system_version: typing.Optional[str] = pydantic.Field(alias="operatingSystemVersion", default=None)
    enabled: bool
    last_logon: typing.Optional[str] = pydantic.Field(alias="lastLogon", default=None)
    service_principal_names: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="servicePrincipalNames", default=None
    )
    is_domain_controller: bool = pydantic.Field(alias="isDomainController")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
