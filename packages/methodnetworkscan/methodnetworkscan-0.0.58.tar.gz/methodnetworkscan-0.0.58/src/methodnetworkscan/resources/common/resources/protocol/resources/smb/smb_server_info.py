# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .smb_version import SmbVersion
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class SmbServerInfo(UniversalBaseModel):
    server_name: typing.Optional[str] = pydantic.Field(alias="serverName", default=None)
    domain: typing.Optional[str] = None
    net_bios_domain_name: typing.Optional[str] = pydantic.Field(alias="netBIOSDomainName", default=None)
    workgroup: typing.Optional[str] = None
    os_version: typing.Optional[str] = pydantic.Field(alias="osVersion", default=None)
    raw_os_version: typing.Optional[str] = pydantic.Field(alias="rawOsVersion", default=None)
    lan_manager_version: typing.Optional[str] = pydantic.Field(alias="lanManagerVersion", default=None)
    smb_version: typing.Optional[SmbVersion] = pydantic.Field(alias="smbVersion", default=None)
    supported_smb_versions: typing.Optional[typing.List[SmbVersion]] = pydantic.Field(
        alias="supportedSmbVersions", default=None
    )
    signing_required: typing.Optional[bool] = pydantic.Field(alias="signingRequired", default=None)
    signing_enabled: typing.Optional[bool] = pydantic.Field(alias="signingEnabled", default=None)
    encryption_supported: typing.Optional[bool] = pydantic.Field(alias="encryptionSupported", default=None)
    encryption_required: typing.Optional[bool] = pydantic.Field(alias="encryptionRequired", default=None)
    capabilities: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
