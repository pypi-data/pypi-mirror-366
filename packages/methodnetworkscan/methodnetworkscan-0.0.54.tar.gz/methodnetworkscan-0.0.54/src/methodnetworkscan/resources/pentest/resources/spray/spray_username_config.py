# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
from .spray_target_service import SprayTargetService
from .wordlist_type import WordlistType
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class SprayUsernameConfig(UniversalBaseModel):
    targets: typing.List[str]
    service: SprayTargetService
    username_lists: typing.List[WordlistType] = pydantic.Field(alias="usernameLists")
    usernames: typing.Optional[typing.List[str]] = None
    domain: typing.Optional[str] = None
    timeout: int
    sleep: int
    retries: int
    continue_on_error: bool = pydantic.Field(alias="continueOnError")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
