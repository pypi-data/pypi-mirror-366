# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .domain_user_properties import DomainUserProperties
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class DomainUser(UniversalBaseModel):
    allowed_to_delegate: typing.List[str] = pydantic.Field(alias="AllowedToDelegate")
    object_identifier: str = pydantic.Field(alias="ObjectIdentifier")
    primary_group_sid: typing.Optional[str] = pydantic.Field(alias="PrimaryGroupSID", default=None)
    properties: DomainUserProperties = pydantic.Field(alias="Properties")
    aces: typing.List[str] = pydantic.Field(alias="Aces")
    spn_targets: typing.List[str] = pydantic.Field(alias="SPNTargets")
    has_sid_history: typing.List[str] = pydantic.Field(alias="HasSIDHistory")
    is_deleted: bool = pydantic.Field(alias="IsDeleted")
    is_acl_protected: typing.Optional[bool] = pydantic.Field(alias="IsACLProtected", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
