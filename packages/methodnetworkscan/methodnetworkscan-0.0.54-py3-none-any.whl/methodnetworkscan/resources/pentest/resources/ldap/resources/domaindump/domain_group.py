# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import pydantic
from .domain_group_properties import DomainGroupProperties
import typing
from .group_member import GroupMember
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class DomainGroup(UniversalBaseModel):
    object_identifier: str = pydantic.Field(alias="ObjectIdentifier")
    properties: DomainGroupProperties = pydantic.Field(alias="Properties")
    members: typing.List[GroupMember] = pydantic.Field(alias="Members")
    aces: typing.List[str] = pydantic.Field(alias="Aces")
    is_deleted: bool = pydantic.Field(alias="IsDeleted")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
