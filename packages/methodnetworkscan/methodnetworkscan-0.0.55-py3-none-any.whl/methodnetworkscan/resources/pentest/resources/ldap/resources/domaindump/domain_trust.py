# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class DomainTrust(UniversalBaseModel):
    source_domain: str = pydantic.Field(alias="sourceDomain")
    target_domain: str = pydantic.Field(alias="targetDomain")
    trust_direction: str = pydantic.Field(alias="trustDirection")
    trust_type: str = pydantic.Field(alias="trustType")
    trust_attributes: typing.Optional[str] = pydantic.Field(alias="trustAttributes", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
