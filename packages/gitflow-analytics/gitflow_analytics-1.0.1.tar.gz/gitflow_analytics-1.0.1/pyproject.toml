[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gitflow-analytics"
dynamic = ["version"]
description = "Analyze Git repositories for developer productivity insights"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Bob Matyas", email = "bobmatnyc@gmail.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Quality Assurance",
]
keywords = ["git", "analytics", "productivity", "metrics", "development"]

dependencies = [
    "click>=8.1",
    "gitpython>=3.1",
    "tqdm>=4.65",
    "sqlalchemy>=2.0",
    "pandas>=2.0",
    "pyyaml>=6.0",
    "python-dateutil>=2.8",
    "python-dotenv>=1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "black>=23.0",
]

github = [
    "pygithub>=1.58",
]

all = [
    "gitflow-analytics[github]",
]

[project.scripts]
gitflow-analytics = "gitflow_analytics.cli:main"

[project.urls]
Homepage = "https://github.com/bobmatnyc/gitflow-analytics"
Documentation = "https://github.com/bobmatnyc/gitflow-analytics/blob/main/README.md"
Repository = "https://github.com/bobmatnyc/gitflow-analytics"
Issues = "https://github.com/bobmatnyc/gitflow-analytics/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "gitflow_analytics._version.__version__"}

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = ["E501"]  # Line too long - handled by formatter

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=gitflow_analytics --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]