# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import browsercontroller_pb2 as browsercontroller__pb2
import dcmpix_pb2 as dcmpix__pb2
import dicomimage_pb2 as dicomimage__pb2
import dicomseries_pb2 as dicomseries__pb2
import dicomstudy_pb2 as dicomstudy__pb2
import osirix_pb2 as osirix__pb2
import roi_pb2 as roi__pb2
import roivolume_pb2 as roivolume__pb2
import types_pb2 as types__pb2
import utilities_pb2 as utilities__pb2
import viewercontroller_pb2 as viewercontroller__pb2
import vrcontroller_pb2 as vrcontroller__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in osirix_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OsiriXServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OsirixCurrentBrowser = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixCurrentBrowser',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixCurrentBrowserResponse.FromString,
                _registered_method=True)
        self.OsirixFrontmostViewer = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixFrontmostViewer',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixFrontmostViewerResponse.FromString,
                _registered_method=True)
        self.OsirixDisplayed2DViewers = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixDisplayed2DViewers',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixDisplayed2DViewersResponse.FromString,
                _registered_method=True)
        self.OsirixFrontmostVRController = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixFrontmostVRController',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixFrontmostVRControllerResponse.FromString,
                _registered_method=True)
        self.OsirixDisplayedVRControllers = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixDisplayedVRControllers',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixDisplayedVRControllersResponse.FromString,
                _registered_method=True)
        self.OsirixVersion = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixVersion',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixVersionResponse.FromString,
                _registered_method=True)
        self.OsirixCacheUids = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixCacheUids',
                request_serializer=utilities__pb2.Empty.SerializeToString,
                response_deserializer=osirix__pb2.OsirixCacheUidsResponse.FromString,
                _registered_method=True)
        self.OsirixCacheObjectForUid = channel.unary_unary(
                '/osirixgrpc.OsiriXService/OsirixCacheObjectForUid',
                request_serializer=osirix__pb2.OsirixCacheObjectForUidRequest.SerializeToString,
                response_deserializer=osirix__pb2.OsirixCacheObjectForUidResponse.FromString,
                _registered_method=True)
        self.ROIDelete = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIDelete',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIFlipHorizontally = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIFlipHorizontally',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIFlipVertically = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIFlipVertically',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIArea = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIArea',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIAreaResponse.FromString,
                _registered_method=True)
        self.ROICentroid = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROICentroid',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROICentroidResponse.FromString,
                _registered_method=True)
        self.ROIRotate = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIRotate',
                request_serializer=roi__pb2.ROIRotateRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIMove = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIMove',
                request_serializer=roi__pb2.ROIMoveRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIPix = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIPix',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIPixResponse.FromString,
                _registered_method=True)
        self.ROIName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIName',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROINameResponse.FromString,
                _registered_method=True)
        self.ROIIType = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIIType',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIITypeResponse.FromString,
                _registered_method=True)
        self.ROISetName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROISetName',
                request_serializer=roi__pb2.ROISetNameRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIColor = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIColor',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIColorResponse.FromString,
                _registered_method=True)
        self.ROISetColor = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROISetColor',
                request_serializer=roi__pb2.ROISetColorRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIOpacity = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIOpacity',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIOpacityResponse.FromString,
                _registered_method=True)
        self.ROISetOpacity = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROISetOpacity',
                request_serializer=roi__pb2.ROISetOpacityRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIThickness = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIThickness',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIThicknessResponse.FromString,
                _registered_method=True)
        self.ROISetThickness = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROISetThickness',
                request_serializer=roi__pb2.ROISetThicknessRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIPoints = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIPoints',
                request_serializer=types__pb2.ROI.SerializeToString,
                response_deserializer=roi__pb2.ROIPointsResponse.FromString,
                _registered_method=True)
        self.ROISetPoints = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROISetPoints',
                request_serializer=roi__pb2.ROISetPointsRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIVolumeTexture = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeTexture',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeTextureResponse.FromString,
                _registered_method=True)
        self.ROIVolumeSetTexture = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeSetTexture',
                request_serializer=roivolume__pb2.ROIVolumeSetTextureRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIVolumeVolume = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeVolume',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeVolumeResponse.FromString,
                _registered_method=True)
        self.ROIVolumeColor = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeColor',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeColorResponse.FromString,
                _registered_method=True)
        self.ROIVolumeSetColor = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeSetColor',
                request_serializer=roivolume__pb2.ROIVolumeSetColorRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIVolumeOpacity = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeOpacity',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeOpacityResponse.FromString,
                _registered_method=True)
        self.ROIVolumeSetOpacity = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeSetOpacity',
                request_serializer=roivolume__pb2.ROIVolumeSetOpacityRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIVolumeFactor = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeFactor',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeFactorResponse.FromString,
                _registered_method=True)
        self.ROIVolumeSetFactor = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeSetFactor',
                request_serializer=roivolume__pb2.ROIVolumeSetFactorRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ROIVolumeName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeName',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeNameResponse.FromString,
                _registered_method=True)
        self.ROIVolumeVisible = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ROIVolumeVisible',
                request_serializer=types__pb2.ROIVolume.SerializeToString,
                response_deserializer=roivolume__pb2.ROIVolumeVisibleResponse.FromString,
                _registered_method=True)
        self.DCMPixConvertToRGB = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixConvertToRGB',
                request_serializer=dcmpix__pb2.DCMPixConvertToRGBRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.DCMPixConvertToBW = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixConvertToBW',
                request_serializer=dcmpix__pb2.DCMPixConvertToBWRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.DCMPixIsRGB = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixIsRGB',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixIsRGBResponse.FromString,
                _registered_method=True)
        self.DCMPixComputeROI = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixComputeROI',
                request_serializer=dcmpix__pb2.DCMPixComputeROIRequest.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixComputeROIResponse.FromString,
                _registered_method=True)
        self.DCMPixROIValues = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixROIValues',
                request_serializer=dcmpix__pb2.DCMPixROIValuesRequest.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixROIValuesResponse.FromString,
                _registered_method=True)
        self.DCMPixShape = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixShape',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixShapeResponse.FromString,
                _registered_method=True)
        self.DCMPixSpacing = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixSpacing',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixSpacingResponse.FromString,
                _registered_method=True)
        self.DCMPixOrigin = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixOrigin',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixOriginResponse.FromString,
                _registered_method=True)
        self.DCMPixOrientation = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixOrientation',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixOrientationResponse.FromString,
                _registered_method=True)
        self.DCMPixSliceLocation = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixSliceLocation',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixSliceLocationResponse.FromString,
                _registered_method=True)
        self.DCMPixSourceFile = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixSourceFile',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixSourceFileResponse.FromString,
                _registered_method=True)
        self.DCMPixImage = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixImage',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixImageResponse.FromString,
                _registered_method=True)
        self.DCMPixSetImage = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixSetImage',
                request_serializer=dcmpix__pb2.DCMPixSetImageRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.DCMPixGetMapFromROI = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixGetMapFromROI',
                request_serializer=dcmpix__pb2.DCMPixGetMapFromROIRequest.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixGetMapFromROIResponse.FromString,
                _registered_method=True)
        self.DCMPixDicomImage = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixDicomImage',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixDicomImageResponse.FromString,
                _registered_method=True)
        self.DCMPixDicomSeries = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixDicomSeries',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixDicomSeriesResponse.FromString,
                _registered_method=True)
        self.DCMPixDicomStudy = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DCMPixDicomStudy',
                request_serializer=types__pb2.DCMPix.SerializeToString,
                response_deserializer=dcmpix__pb2.DCMPixDicomStudyResponse.FromString,
                _registered_method=True)
        self.VRControllerViewer2D = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerViewer2D',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerViewer2DResponse.FromString,
                _registered_method=True)
        self.VRControllerBlendingController = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerBlendingController',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerBlendingControllerResponse.FromString,
                _registered_method=True)
        self.VRControllerStyle = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerStyle',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerStyleResponse.FromString,
                _registered_method=True)
        self.VRControllerTitle = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerTitle',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerTitleResponse.FromString,
                _registered_method=True)
        self.VRControllerROIVolumes = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerROIVolumes',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerROIVolumesResponse.FromString,
                _registered_method=True)
        self.VRControllerRenderingMode = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerRenderingMode',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerRenderingModeResponse.FromString,
                _registered_method=True)
        self.VRControllerSetRenderingMode = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerSetRenderingMode',
                request_serializer=vrcontroller__pb2.VRControllerSetRenderingModeRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.VRControllerWLWW = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerWLWW',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=vrcontroller__pb2.VRControllerWLWWResponse.FromString,
                _registered_method=True)
        self.VRControllerSetWLWW = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerSetWLWW',
                request_serializer=vrcontroller__pb2.VRControllerSetWLWWRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.VRControllerHideROIVolume = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerHideROIVolume',
                request_serializer=vrcontroller__pb2.VRControllerHideROIVolumeRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.VRControllerDisplayROIVolume = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerDisplayROIVolume',
                request_serializer=vrcontroller__pb2.VRControllerDisplayROIVolumeRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.VRControllerNeedsDisplayUpdate = channel.unary_unary(
                '/osirixgrpc.OsiriXService/VRControllerNeedsDisplayUpdate',
                request_serializer=types__pb2.VRController.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerCloseViewer = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerCloseViewer',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerPixList = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerPixList',
                request_serializer=viewercontroller__pb2.ViewerControllerPixListRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerPixListResponse.FromString,
                _registered_method=True)
        self.ViewerControllerNeedsDisplayUpdate = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerNeedsDisplayUpdate',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerROIList = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerROIList',
                request_serializer=viewercontroller__pb2.ViewerControllerROIListRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerROIListResponse.FromString,
                _registered_method=True)
        self.ViewerControllerNewROI = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerNewROI',
                request_serializer=viewercontroller__pb2.ViewerControllerNewROIRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerNewROIResponse.FromString,
                _registered_method=True)
        self.ViewerControllerCurDCM = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerCurDCM',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerCurDCMResponse.FromString,
                _registered_method=True)
        self.ViewerControllerROIsWithName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerROIsWithName',
                request_serializer=viewercontroller__pb2.ViewerControllerROIsWithNameRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerROIsWithNameResponse.FromString,
                _registered_method=True)
        self.ViewerControllerSelectedROIs = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerSelectedROIs',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerSelectedROIsResponse.FromString,
                _registered_method=True)
        self.ViewerControllerIsDataVolumic = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerIsDataVolumic',
                request_serializer=viewercontroller__pb2.ViewerControllerIsDataVolumicRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerIsDataVolumicResponse.FromString,
                _registered_method=True)
        self.ViewerControllerCopyViewerWindow = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerCopyViewerWindow',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerCopyViewerWindowResponse.FromString,
                _registered_method=True)
        self.ViewerControllerResampleViewerController = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerResampleViewerController',
                request_serializer=viewercontroller__pb2.ViewerControllerResampleViewerControllerRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerResampleViewerControllerResponse.FromString,
                _registered_method=True)
        self.ViewerControllerBlendingController = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerBlendingController',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerBlendingControllerResponse.FromString,
                _registered_method=True)
        self.ViewerControllerVRControllers = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerVRControllers',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerVRControllersResponse.FromString,
                _registered_method=True)
        self.ViewerControllerTitle = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerTitle',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerTitleResponse.FromString,
                _registered_method=True)
        self.ViewerControllerModality = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerModality',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerModalityResponse.FromString,
                _registered_method=True)
        self.ViewerControllerMovieIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerMovieIdx',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerMovieIdxResponse.FromString,
                _registered_method=True)
        self.ViewerControllerSetMovieIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerSetMovieIdx',
                request_serializer=viewercontroller__pb2.ViewerControllerSetMovieIdxRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerMaxMovieIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerMaxMovieIdx',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerMaxMovieIdxResponse.FromString,
                _registered_method=True)
        self.ViewerControllerIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerIdx',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerIdxResponse.FromString,
                _registered_method=True)
        self.ViewerControllerSetIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerSetIdx',
                request_serializer=viewercontroller__pb2.ViewerControllerSetIdxRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerDisplayedIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerDisplayedIdx',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerDisplayedIdxResponse.FromString,
                _registered_method=True)
        self.ViewerControllerSetDisplayedIdx = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerSetDisplayedIdx',
                request_serializer=viewercontroller__pb2.ViewerControllerSetDisplayedIdxRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerFlippedData = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerFlippedData',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerFlippedDataResponse.FromString,
                _registered_method=True)
        self.ViewerControllerWLWW = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerWLWW',
                request_serializer=types__pb2.ViewerController.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerWLWWResponse.FromString,
                _registered_method=True)
        self.ViewerControllerSetWLWW = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerSetWLWW',
                request_serializer=viewercontroller__pb2.ViewerControllerSetWLWWRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.ViewerControllerOpenVRViewerForMode = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerOpenVRViewerForMode',
                request_serializer=viewercontroller__pb2.ViewerControllerOpenVRViewerForModeRequest.SerializeToString,
                response_deserializer=viewercontroller__pb2.ViewerControllerOpenVRViewerForModeResponse.FromString,
                _registered_method=True)
        self.ViewerControllerFuseWithViewer = channel.unary_unary(
                '/osirixgrpc.OsiriXService/ViewerControllerFuseWithViewer',
                request_serializer=viewercontroller__pb2.ViewerControllerFuseWithViewerRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.BrowserControllerDatabaseSelection = channel.unary_unary(
                '/osirixgrpc.OsiriXService/BrowserControllerDatabaseSelection',
                request_serializer=types__pb2.BrowserController.SerializeToString,
                response_deserializer=browsercontroller__pb2.BrowserControllerDatabaseSelectionResponse.FromString,
                _registered_method=True)
        self.BrowserControllerCopyFilesIfNeeded = channel.unary_unary(
                '/osirixgrpc.OsiriXService/BrowserControllerCopyFilesIfNeeded',
                request_serializer=browsercontroller__pb2.BrowserControllerCopyFilesIfNeededRequest.SerializeToString,
                response_deserializer=utilities__pb2.Response.FromString,
                _registered_method=True)
        self.BrowserControllerOpenViewerFromImages = channel.unary_unary(
                '/osirixgrpc.OsiriXService/BrowserControllerOpenViewerFromImages',
                request_serializer=browsercontroller__pb2.BrowserControllerOpenViewerFromImagesRequest.SerializeToString,
                response_deserializer=browsercontroller__pb2.BrowserControllerOpenViewerFromImagesResponse.FromString,
                _registered_method=True)
        self.BrowserControllerDatabaseStudies = channel.unary_unary(
                '/osirixgrpc.OsiriXService/BrowserControllerDatabaseStudies',
                request_serializer=types__pb2.BrowserController.SerializeToString,
                response_deserializer=browsercontroller__pb2.BrowserControllerDatabaseStudiesResponse.FromString,
                _registered_method=True)
        self.DicomImageWidth = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageWidth',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageWidthResponse.FromString,
                _registered_method=True)
        self.DicomImageHeight = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageHeight',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageHeightResponse.FromString,
                _registered_method=True)
        self.DicomImageSOPInstanceUID = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageSOPInstanceUID',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageSOPInstanceUIDResponse.FromString,
                _registered_method=True)
        self.DicomImageCompletePath = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageCompletePath',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageCompletePathResponse.FromString,
                _registered_method=True)
        self.DicomImageDate = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageDate',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageDateResponse.FromString,
                _registered_method=True)
        self.DicomImageNumberOfFrames = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageNumberOfFrames',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageNumberOfFramesResponse.FromString,
                _registered_method=True)
        self.DicomImageModality = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageModality',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageModalityResponse.FromString,
                _registered_method=True)
        self.DicomImageSeries = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageSeries',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageSeriesResponse.FromString,
                _registered_method=True)
        self.DicomImageSliceLocation = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageSliceLocation',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageSliceLocationResponse.FromString,
                _registered_method=True)
        self.DicomImageInstanceNumber = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomImageInstanceNumber',
                request_serializer=types__pb2.DicomImage.SerializeToString,
                response_deserializer=dicomimage__pb2.DicomImageInstanceNumberResponse.FromString,
                _registered_method=True)
        self.DicomSeriesPaths = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesPaths',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesPathsResponse.FromString,
                _registered_method=True)
        self.DicomSeriesPreviousSeries = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesPreviousSeries',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesPreviousSeriesResponse.FromString,
                _registered_method=True)
        self.DicomSeriesNextSeries = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesNextSeries',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesNextSeriesResponse.FromString,
                _registered_method=True)
        self.DicomSeriesSortedImages = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesSortedImages',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesSortedImagesResponse.FromString,
                _registered_method=True)
        self.DicomSeriesStudy = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesStudy',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesStudyResponse.FromString,
                _registered_method=True)
        self.DicomSeriesImages = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesImages',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesImagesResponse.FromString,
                _registered_method=True)
        self.DicomSeriesSeriesInstanceUID = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesSeriesInstanceUID',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesSeriesInstanceUIDResponse.FromString,
                _registered_method=True)
        self.DicomSeriesSeriesSOPClassUID = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesSeriesSOPClassUID',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesSeriesSOPClassUIDResponse.FromString,
                _registered_method=True)
        self.DicomSeriesSeriesDescription = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesSeriesDescription',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesSeriesDescriptionResponse.FromString,
                _registered_method=True)
        self.DicomSeriesModality = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesModality',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesModalityResponse.FromString,
                _registered_method=True)
        self.DicomSeriesName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesName',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesNameResponse.FromString,
                _registered_method=True)
        self.DicomSeriesDate = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesDate',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesDateResponse.FromString,
                _registered_method=True)
        self.DicomSeriesNumberOfImages = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomSeriesNumberOfImages',
                request_serializer=types__pb2.DicomSeries.SerializeToString,
                response_deserializer=dicomseries__pb2.DicomSeriesNumberOfImagesResponse.FromString,
                _registered_method=True)
        self.DicomStudyPaths = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyPaths',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyPathsResponse.FromString,
                _registered_method=True)
        self.DicomStudyImages = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyImages',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyImagesResponse.FromString,
                _registered_method=True)
        self.DicomStudyModalities = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyModalities',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyModalitiesResponse.FromString,
                _registered_method=True)
        self.DicomStudyNoFiles = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyNoFiles',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyNoFilesResponse.FromString,
                _registered_method=True)
        self.DicomStudyRawNoFiles = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyRawNoFiles',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyRawNoFilesResponse.FromString,
                _registered_method=True)
        self.DicomStudyNumberOfImages = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyNumberOfImages',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyNumberOfImagesResponse.FromString,
                _registered_method=True)
        self.DicomStudySeries = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudySeries',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudySeriesResponse.FromString,
                _registered_method=True)
        self.DicomStudyName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyName',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyNameResponse.FromString,
                _registered_method=True)
        self.DicomStudyDate = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyDate',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyDateResponse.FromString,
                _registered_method=True)
        self.DicomStudyDateAdded = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyDateAdded',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyDateAddedResponse.FromString,
                _registered_method=True)
        self.DicomStudyDateOfBirth = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyDateOfBirth',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyDateOfBirthResponse.FromString,
                _registered_method=True)
        self.DicomStudyInstitutionName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyInstitutionName',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyInstitutionNameResponse.FromString,
                _registered_method=True)
        self.DicomStudyModality = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyModality',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyModalityResponse.FromString,
                _registered_method=True)
        self.DicomStudyPatientID = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyPatientID',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyPatientIDResponse.FromString,
                _registered_method=True)
        self.DicomStudyPatientUID = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyPatientUID',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyPatientUIDResponse.FromString,
                _registered_method=True)
        self.DicomStudyPatientSex = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyPatientSex',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyPatientSexResponse.FromString,
                _registered_method=True)
        self.DicomStudyPerformingPhysician = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyPerformingPhysician',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyPerformingPhysicianResponse.FromString,
                _registered_method=True)
        self.DicomStudyReferringPhysician = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyReferringPhysician',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyReferringPhysicianResponse.FromString,
                _registered_method=True)
        self.DicomStudyStudyInstanceUID = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyStudyInstanceUID',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyStudyInstanceUIDResponse.FromString,
                _registered_method=True)
        self.DicomStudyStudyName = channel.unary_unary(
                '/osirixgrpc.OsiriXService/DicomStudyStudyName',
                request_serializer=types__pb2.DicomStudy.SerializeToString,
                response_deserializer=dicomstudy__pb2.DicomStudyStudyNameResponse.FromString,
                _registered_method=True)


class OsiriXServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OsirixCurrentBrowser(self, request, context):
        """OsiriX methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixFrontmostViewer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixDisplayed2DViewers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixFrontmostVRController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixDisplayedVRControllers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixCacheUids(self, request, context):
        """Cache methods - debug only
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OsirixCacheObjectForUid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIDelete(self, request, context):
        """ROI methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIFlipHorizontally(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIFlipVertically(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROICentroid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIRotate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIPix(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIIType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROISetName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIColor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROISetColor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIOpacity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROISetOpacity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIThickness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROISetThickness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIPoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROISetPoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeTexture(self, request, context):
        """ROIVolume methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeSetTexture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeColor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeSetColor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeOpacity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeSetOpacity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeFactor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeSetFactor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ROIVolumeVisible(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixConvertToRGB(self, request, context):
        """DCMPix methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixConvertToBW(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixIsRGB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixComputeROI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixROIValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixShape(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixSpacing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixOrigin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixOrientation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixSliceLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixSourceFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixSetImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixGetMapFromROI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixDicomImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixDicomSeries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DCMPixDicomStudy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerViewer2D(self, request, context):
        """VRController methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerBlendingController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerStyle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerROIVolumes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerRenderingMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerSetRenderingMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerWLWW(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerSetWLWW(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerHideROIVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerDisplayROIVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VRControllerNeedsDisplayUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerCloseViewer(self, request, context):
        """ViewerController methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerPixList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerNeedsDisplayUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerROIList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerNewROI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerCurDCM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerROIsWithName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerSelectedROIs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerIsDataVolumic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerCopyViewerWindow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerResampleViewerController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerBlendingController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerVRControllers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerModality(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerMovieIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerSetMovieIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerMaxMovieIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerSetIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerDisplayedIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerSetDisplayedIdx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerFlippedData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerWLWW(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerSetWLWW(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerOpenVRViewerForMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewerControllerFuseWithViewer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BrowserControllerDatabaseSelection(self, request, context):
        """BrowserController methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BrowserControllerCopyFilesIfNeeded(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BrowserControllerOpenViewerFromImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BrowserControllerDatabaseStudies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageWidth(self, request, context):
        """DicomImage methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageSOPInstanceUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageCompletePath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageNumberOfFrames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageModality(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageSeries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageSliceLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomImageInstanceNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesPaths(self, request, context):
        """DicomSeries methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesPreviousSeries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesNextSeries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesSortedImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesStudy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesSeriesInstanceUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesSeriesSOPClassUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesSeriesDescription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesModality(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomSeriesNumberOfImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyPaths(self, request, context):
        """DicomStudy methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyModalities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyNoFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyRawNoFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyNumberOfImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudySeries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyDateAdded(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyDateOfBirth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyInstitutionName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyModality(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyPatientID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyPatientUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyPatientSex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyPerformingPhysician(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyReferringPhysician(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyStudyInstanceUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DicomStudyStudyName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OsiriXServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OsirixCurrentBrowser': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixCurrentBrowser,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixCurrentBrowserResponse.SerializeToString,
            ),
            'OsirixFrontmostViewer': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixFrontmostViewer,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixFrontmostViewerResponse.SerializeToString,
            ),
            'OsirixDisplayed2DViewers': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixDisplayed2DViewers,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixDisplayed2DViewersResponse.SerializeToString,
            ),
            'OsirixFrontmostVRController': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixFrontmostVRController,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixFrontmostVRControllerResponse.SerializeToString,
            ),
            'OsirixDisplayedVRControllers': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixDisplayedVRControllers,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixDisplayedVRControllersResponse.SerializeToString,
            ),
            'OsirixVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixVersion,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixVersionResponse.SerializeToString,
            ),
            'OsirixCacheUids': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixCacheUids,
                    request_deserializer=utilities__pb2.Empty.FromString,
                    response_serializer=osirix__pb2.OsirixCacheUidsResponse.SerializeToString,
            ),
            'OsirixCacheObjectForUid': grpc.unary_unary_rpc_method_handler(
                    servicer.OsirixCacheObjectForUid,
                    request_deserializer=osirix__pb2.OsirixCacheObjectForUidRequest.FromString,
                    response_serializer=osirix__pb2.OsirixCacheObjectForUidResponse.SerializeToString,
            ),
            'ROIDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIDelete,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIFlipHorizontally': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIFlipHorizontally,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIFlipVertically': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIFlipVertically,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIArea': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIArea,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIAreaResponse.SerializeToString,
            ),
            'ROICentroid': grpc.unary_unary_rpc_method_handler(
                    servicer.ROICentroid,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROICentroidResponse.SerializeToString,
            ),
            'ROIRotate': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIRotate,
                    request_deserializer=roi__pb2.ROIRotateRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIMove': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIMove,
                    request_deserializer=roi__pb2.ROIMoveRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIPix': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIPix,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIPixResponse.SerializeToString,
            ),
            'ROIName': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIName,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROINameResponse.SerializeToString,
            ),
            'ROIIType': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIIType,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIITypeResponse.SerializeToString,
            ),
            'ROISetName': grpc.unary_unary_rpc_method_handler(
                    servicer.ROISetName,
                    request_deserializer=roi__pb2.ROISetNameRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIColor': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIColor,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIColorResponse.SerializeToString,
            ),
            'ROISetColor': grpc.unary_unary_rpc_method_handler(
                    servicer.ROISetColor,
                    request_deserializer=roi__pb2.ROISetColorRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIOpacity': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIOpacity,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIOpacityResponse.SerializeToString,
            ),
            'ROISetOpacity': grpc.unary_unary_rpc_method_handler(
                    servicer.ROISetOpacity,
                    request_deserializer=roi__pb2.ROISetOpacityRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIThickness': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIThickness,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIThicknessResponse.SerializeToString,
            ),
            'ROISetThickness': grpc.unary_unary_rpc_method_handler(
                    servicer.ROISetThickness,
                    request_deserializer=roi__pb2.ROISetThicknessRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIPoints,
                    request_deserializer=types__pb2.ROI.FromString,
                    response_serializer=roi__pb2.ROIPointsResponse.SerializeToString,
            ),
            'ROISetPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.ROISetPoints,
                    request_deserializer=roi__pb2.ROISetPointsRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIVolumeTexture': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeTexture,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeTextureResponse.SerializeToString,
            ),
            'ROIVolumeSetTexture': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeSetTexture,
                    request_deserializer=roivolume__pb2.ROIVolumeSetTextureRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIVolumeVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeVolume,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeVolumeResponse.SerializeToString,
            ),
            'ROIVolumeColor': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeColor,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeColorResponse.SerializeToString,
            ),
            'ROIVolumeSetColor': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeSetColor,
                    request_deserializer=roivolume__pb2.ROIVolumeSetColorRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIVolumeOpacity': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeOpacity,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeOpacityResponse.SerializeToString,
            ),
            'ROIVolumeSetOpacity': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeSetOpacity,
                    request_deserializer=roivolume__pb2.ROIVolumeSetOpacityRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIVolumeFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeFactor,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeFactorResponse.SerializeToString,
            ),
            'ROIVolumeSetFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeSetFactor,
                    request_deserializer=roivolume__pb2.ROIVolumeSetFactorRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ROIVolumeName': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeName,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeNameResponse.SerializeToString,
            ),
            'ROIVolumeVisible': grpc.unary_unary_rpc_method_handler(
                    servicer.ROIVolumeVisible,
                    request_deserializer=types__pb2.ROIVolume.FromString,
                    response_serializer=roivolume__pb2.ROIVolumeVisibleResponse.SerializeToString,
            ),
            'DCMPixConvertToRGB': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixConvertToRGB,
                    request_deserializer=dcmpix__pb2.DCMPixConvertToRGBRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'DCMPixConvertToBW': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixConvertToBW,
                    request_deserializer=dcmpix__pb2.DCMPixConvertToBWRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'DCMPixIsRGB': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixIsRGB,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixIsRGBResponse.SerializeToString,
            ),
            'DCMPixComputeROI': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixComputeROI,
                    request_deserializer=dcmpix__pb2.DCMPixComputeROIRequest.FromString,
                    response_serializer=dcmpix__pb2.DCMPixComputeROIResponse.SerializeToString,
            ),
            'DCMPixROIValues': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixROIValues,
                    request_deserializer=dcmpix__pb2.DCMPixROIValuesRequest.FromString,
                    response_serializer=dcmpix__pb2.DCMPixROIValuesResponse.SerializeToString,
            ),
            'DCMPixShape': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixShape,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixShapeResponse.SerializeToString,
            ),
            'DCMPixSpacing': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixSpacing,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixSpacingResponse.SerializeToString,
            ),
            'DCMPixOrigin': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixOrigin,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixOriginResponse.SerializeToString,
            ),
            'DCMPixOrientation': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixOrientation,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixOrientationResponse.SerializeToString,
            ),
            'DCMPixSliceLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixSliceLocation,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixSliceLocationResponse.SerializeToString,
            ),
            'DCMPixSourceFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixSourceFile,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixSourceFileResponse.SerializeToString,
            ),
            'DCMPixImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixImage,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixImageResponse.SerializeToString,
            ),
            'DCMPixSetImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixSetImage,
                    request_deserializer=dcmpix__pb2.DCMPixSetImageRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'DCMPixGetMapFromROI': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixGetMapFromROI,
                    request_deserializer=dcmpix__pb2.DCMPixGetMapFromROIRequest.FromString,
                    response_serializer=dcmpix__pb2.DCMPixGetMapFromROIResponse.SerializeToString,
            ),
            'DCMPixDicomImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixDicomImage,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixDicomImageResponse.SerializeToString,
            ),
            'DCMPixDicomSeries': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixDicomSeries,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixDicomSeriesResponse.SerializeToString,
            ),
            'DCMPixDicomStudy': grpc.unary_unary_rpc_method_handler(
                    servicer.DCMPixDicomStudy,
                    request_deserializer=types__pb2.DCMPix.FromString,
                    response_serializer=dcmpix__pb2.DCMPixDicomStudyResponse.SerializeToString,
            ),
            'VRControllerViewer2D': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerViewer2D,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerViewer2DResponse.SerializeToString,
            ),
            'VRControllerBlendingController': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerBlendingController,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerBlendingControllerResponse.SerializeToString,
            ),
            'VRControllerStyle': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerStyle,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerStyleResponse.SerializeToString,
            ),
            'VRControllerTitle': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerTitle,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerTitleResponse.SerializeToString,
            ),
            'VRControllerROIVolumes': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerROIVolumes,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerROIVolumesResponse.SerializeToString,
            ),
            'VRControllerRenderingMode': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerRenderingMode,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerRenderingModeResponse.SerializeToString,
            ),
            'VRControllerSetRenderingMode': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerSetRenderingMode,
                    request_deserializer=vrcontroller__pb2.VRControllerSetRenderingModeRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'VRControllerWLWW': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerWLWW,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=vrcontroller__pb2.VRControllerWLWWResponse.SerializeToString,
            ),
            'VRControllerSetWLWW': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerSetWLWW,
                    request_deserializer=vrcontroller__pb2.VRControllerSetWLWWRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'VRControllerHideROIVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerHideROIVolume,
                    request_deserializer=vrcontroller__pb2.VRControllerHideROIVolumeRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'VRControllerDisplayROIVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerDisplayROIVolume,
                    request_deserializer=vrcontroller__pb2.VRControllerDisplayROIVolumeRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'VRControllerNeedsDisplayUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.VRControllerNeedsDisplayUpdate,
                    request_deserializer=types__pb2.VRController.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerCloseViewer': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerCloseViewer,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerPixList': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerPixList,
                    request_deserializer=viewercontroller__pb2.ViewerControllerPixListRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerPixListResponse.SerializeToString,
            ),
            'ViewerControllerNeedsDisplayUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerNeedsDisplayUpdate,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerROIList': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerROIList,
                    request_deserializer=viewercontroller__pb2.ViewerControllerROIListRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerROIListResponse.SerializeToString,
            ),
            'ViewerControllerNewROI': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerNewROI,
                    request_deserializer=viewercontroller__pb2.ViewerControllerNewROIRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerNewROIResponse.SerializeToString,
            ),
            'ViewerControllerCurDCM': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerCurDCM,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerCurDCMResponse.SerializeToString,
            ),
            'ViewerControllerROIsWithName': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerROIsWithName,
                    request_deserializer=viewercontroller__pb2.ViewerControllerROIsWithNameRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerROIsWithNameResponse.SerializeToString,
            ),
            'ViewerControllerSelectedROIs': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerSelectedROIs,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerSelectedROIsResponse.SerializeToString,
            ),
            'ViewerControllerIsDataVolumic': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerIsDataVolumic,
                    request_deserializer=viewercontroller__pb2.ViewerControllerIsDataVolumicRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerIsDataVolumicResponse.SerializeToString,
            ),
            'ViewerControllerCopyViewerWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerCopyViewerWindow,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerCopyViewerWindowResponse.SerializeToString,
            ),
            'ViewerControllerResampleViewerController': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerResampleViewerController,
                    request_deserializer=viewercontroller__pb2.ViewerControllerResampleViewerControllerRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerResampleViewerControllerResponse.SerializeToString,
            ),
            'ViewerControllerBlendingController': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerBlendingController,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerBlendingControllerResponse.SerializeToString,
            ),
            'ViewerControllerVRControllers': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerVRControllers,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerVRControllersResponse.SerializeToString,
            ),
            'ViewerControllerTitle': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerTitle,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerTitleResponse.SerializeToString,
            ),
            'ViewerControllerModality': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerModality,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerModalityResponse.SerializeToString,
            ),
            'ViewerControllerMovieIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerMovieIdx,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerMovieIdxResponse.SerializeToString,
            ),
            'ViewerControllerSetMovieIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerSetMovieIdx,
                    request_deserializer=viewercontroller__pb2.ViewerControllerSetMovieIdxRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerMaxMovieIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerMaxMovieIdx,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerMaxMovieIdxResponse.SerializeToString,
            ),
            'ViewerControllerIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerIdx,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerIdxResponse.SerializeToString,
            ),
            'ViewerControllerSetIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerSetIdx,
                    request_deserializer=viewercontroller__pb2.ViewerControllerSetIdxRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerDisplayedIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerDisplayedIdx,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerDisplayedIdxResponse.SerializeToString,
            ),
            'ViewerControllerSetDisplayedIdx': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerSetDisplayedIdx,
                    request_deserializer=viewercontroller__pb2.ViewerControllerSetDisplayedIdxRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerFlippedData': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerFlippedData,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerFlippedDataResponse.SerializeToString,
            ),
            'ViewerControllerWLWW': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerWLWW,
                    request_deserializer=types__pb2.ViewerController.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerWLWWResponse.SerializeToString,
            ),
            'ViewerControllerSetWLWW': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerSetWLWW,
                    request_deserializer=viewercontroller__pb2.ViewerControllerSetWLWWRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'ViewerControllerOpenVRViewerForMode': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerOpenVRViewerForMode,
                    request_deserializer=viewercontroller__pb2.ViewerControllerOpenVRViewerForModeRequest.FromString,
                    response_serializer=viewercontroller__pb2.ViewerControllerOpenVRViewerForModeResponse.SerializeToString,
            ),
            'ViewerControllerFuseWithViewer': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewerControllerFuseWithViewer,
                    request_deserializer=viewercontroller__pb2.ViewerControllerFuseWithViewerRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'BrowserControllerDatabaseSelection': grpc.unary_unary_rpc_method_handler(
                    servicer.BrowserControllerDatabaseSelection,
                    request_deserializer=types__pb2.BrowserController.FromString,
                    response_serializer=browsercontroller__pb2.BrowserControllerDatabaseSelectionResponse.SerializeToString,
            ),
            'BrowserControllerCopyFilesIfNeeded': grpc.unary_unary_rpc_method_handler(
                    servicer.BrowserControllerCopyFilesIfNeeded,
                    request_deserializer=browsercontroller__pb2.BrowserControllerCopyFilesIfNeededRequest.FromString,
                    response_serializer=utilities__pb2.Response.SerializeToString,
            ),
            'BrowserControllerOpenViewerFromImages': grpc.unary_unary_rpc_method_handler(
                    servicer.BrowserControllerOpenViewerFromImages,
                    request_deserializer=browsercontroller__pb2.BrowserControllerOpenViewerFromImagesRequest.FromString,
                    response_serializer=browsercontroller__pb2.BrowserControllerOpenViewerFromImagesResponse.SerializeToString,
            ),
            'BrowserControllerDatabaseStudies': grpc.unary_unary_rpc_method_handler(
                    servicer.BrowserControllerDatabaseStudies,
                    request_deserializer=types__pb2.BrowserController.FromString,
                    response_serializer=browsercontroller__pb2.BrowserControllerDatabaseStudiesResponse.SerializeToString,
            ),
            'DicomImageWidth': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageWidth,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageWidthResponse.SerializeToString,
            ),
            'DicomImageHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageHeight,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageHeightResponse.SerializeToString,
            ),
            'DicomImageSOPInstanceUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageSOPInstanceUID,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageSOPInstanceUIDResponse.SerializeToString,
            ),
            'DicomImageCompletePath': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageCompletePath,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageCompletePathResponse.SerializeToString,
            ),
            'DicomImageDate': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageDate,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageDateResponse.SerializeToString,
            ),
            'DicomImageNumberOfFrames': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageNumberOfFrames,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageNumberOfFramesResponse.SerializeToString,
            ),
            'DicomImageModality': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageModality,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageModalityResponse.SerializeToString,
            ),
            'DicomImageSeries': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageSeries,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageSeriesResponse.SerializeToString,
            ),
            'DicomImageSliceLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageSliceLocation,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageSliceLocationResponse.SerializeToString,
            ),
            'DicomImageInstanceNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomImageInstanceNumber,
                    request_deserializer=types__pb2.DicomImage.FromString,
                    response_serializer=dicomimage__pb2.DicomImageInstanceNumberResponse.SerializeToString,
            ),
            'DicomSeriesPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesPaths,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesPathsResponse.SerializeToString,
            ),
            'DicomSeriesPreviousSeries': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesPreviousSeries,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesPreviousSeriesResponse.SerializeToString,
            ),
            'DicomSeriesNextSeries': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesNextSeries,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesNextSeriesResponse.SerializeToString,
            ),
            'DicomSeriesSortedImages': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesSortedImages,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesSortedImagesResponse.SerializeToString,
            ),
            'DicomSeriesStudy': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesStudy,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesStudyResponse.SerializeToString,
            ),
            'DicomSeriesImages': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesImages,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesImagesResponse.SerializeToString,
            ),
            'DicomSeriesSeriesInstanceUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesSeriesInstanceUID,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesSeriesInstanceUIDResponse.SerializeToString,
            ),
            'DicomSeriesSeriesSOPClassUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesSeriesSOPClassUID,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesSeriesSOPClassUIDResponse.SerializeToString,
            ),
            'DicomSeriesSeriesDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesSeriesDescription,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesSeriesDescriptionResponse.SerializeToString,
            ),
            'DicomSeriesModality': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesModality,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesModalityResponse.SerializeToString,
            ),
            'DicomSeriesName': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesName,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesNameResponse.SerializeToString,
            ),
            'DicomSeriesDate': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesDate,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesDateResponse.SerializeToString,
            ),
            'DicomSeriesNumberOfImages': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomSeriesNumberOfImages,
                    request_deserializer=types__pb2.DicomSeries.FromString,
                    response_serializer=dicomseries__pb2.DicomSeriesNumberOfImagesResponse.SerializeToString,
            ),
            'DicomStudyPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyPaths,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyPathsResponse.SerializeToString,
            ),
            'DicomStudyImages': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyImages,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyImagesResponse.SerializeToString,
            ),
            'DicomStudyModalities': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyModalities,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyModalitiesResponse.SerializeToString,
            ),
            'DicomStudyNoFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyNoFiles,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyNoFilesResponse.SerializeToString,
            ),
            'DicomStudyRawNoFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyRawNoFiles,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyRawNoFilesResponse.SerializeToString,
            ),
            'DicomStudyNumberOfImages': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyNumberOfImages,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyNumberOfImagesResponse.SerializeToString,
            ),
            'DicomStudySeries': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudySeries,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudySeriesResponse.SerializeToString,
            ),
            'DicomStudyName': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyName,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyNameResponse.SerializeToString,
            ),
            'DicomStudyDate': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyDate,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyDateResponse.SerializeToString,
            ),
            'DicomStudyDateAdded': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyDateAdded,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyDateAddedResponse.SerializeToString,
            ),
            'DicomStudyDateOfBirth': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyDateOfBirth,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyDateOfBirthResponse.SerializeToString,
            ),
            'DicomStudyInstitutionName': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyInstitutionName,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyInstitutionNameResponse.SerializeToString,
            ),
            'DicomStudyModality': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyModality,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyModalityResponse.SerializeToString,
            ),
            'DicomStudyPatientID': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyPatientID,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyPatientIDResponse.SerializeToString,
            ),
            'DicomStudyPatientUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyPatientUID,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyPatientUIDResponse.SerializeToString,
            ),
            'DicomStudyPatientSex': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyPatientSex,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyPatientSexResponse.SerializeToString,
            ),
            'DicomStudyPerformingPhysician': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyPerformingPhysician,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyPerformingPhysicianResponse.SerializeToString,
            ),
            'DicomStudyReferringPhysician': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyReferringPhysician,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyReferringPhysicianResponse.SerializeToString,
            ),
            'DicomStudyStudyInstanceUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyStudyInstanceUID,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyStudyInstanceUIDResponse.SerializeToString,
            ),
            'DicomStudyStudyName': grpc.unary_unary_rpc_method_handler(
                    servicer.DicomStudyStudyName,
                    request_deserializer=types__pb2.DicomStudy.FromString,
                    response_serializer=dicomstudy__pb2.DicomStudyStudyNameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'osirixgrpc.OsiriXService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('osirixgrpc.OsiriXService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OsiriXService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OsirixCurrentBrowser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixCurrentBrowser',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixCurrentBrowserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixFrontmostViewer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixFrontmostViewer',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixFrontmostViewerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixDisplayed2DViewers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixDisplayed2DViewers',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixDisplayed2DViewersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixFrontmostVRController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixFrontmostVRController',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixFrontmostVRControllerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixDisplayedVRControllers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixDisplayedVRControllers',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixDisplayedVRControllersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixVersion',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixCacheUids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixCacheUids',
            utilities__pb2.Empty.SerializeToString,
            osirix__pb2.OsirixCacheUidsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OsirixCacheObjectForUid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/OsirixCacheObjectForUid',
            osirix__pb2.OsirixCacheObjectForUidRequest.SerializeToString,
            osirix__pb2.OsirixCacheObjectForUidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIDelete',
            types__pb2.ROI.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIFlipHorizontally(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIFlipHorizontally',
            types__pb2.ROI.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIFlipVertically(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIFlipVertically',
            types__pb2.ROI.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIArea',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIAreaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROICentroid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROICentroid',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROICentroidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIRotate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIRotate',
            roi__pb2.ROIRotateRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIMove',
            roi__pb2.ROIMoveRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIPix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIPix',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIPixResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIName',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROINameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIIType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIIType',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIITypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROISetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROISetName',
            roi__pb2.ROISetNameRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIColor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIColor',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIColorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROISetColor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROISetColor',
            roi__pb2.ROISetColorRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIOpacity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIOpacity',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIOpacityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROISetOpacity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROISetOpacity',
            roi__pb2.ROISetOpacityRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIThickness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIThickness',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIThicknessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROISetThickness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROISetThickness',
            roi__pb2.ROISetThicknessRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIPoints',
            types__pb2.ROI.SerializeToString,
            roi__pb2.ROIPointsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROISetPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROISetPoints',
            roi__pb2.ROISetPointsRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeTexture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeTexture',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeTextureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeSetTexture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeSetTexture',
            roivolume__pb2.ROIVolumeSetTextureRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeVolume',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeVolumeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeColor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeColor',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeColorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeSetColor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeSetColor',
            roivolume__pb2.ROIVolumeSetColorRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeOpacity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeOpacity',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeOpacityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeSetOpacity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeSetOpacity',
            roivolume__pb2.ROIVolumeSetOpacityRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeFactor',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeFactorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeSetFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeSetFactor',
            roivolume__pb2.ROIVolumeSetFactorRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeName',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ROIVolumeVisible(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ROIVolumeVisible',
            types__pb2.ROIVolume.SerializeToString,
            roivolume__pb2.ROIVolumeVisibleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixConvertToRGB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixConvertToRGB',
            dcmpix__pb2.DCMPixConvertToRGBRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixConvertToBW(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixConvertToBW',
            dcmpix__pb2.DCMPixConvertToBWRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixIsRGB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixIsRGB',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixIsRGBResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixComputeROI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixComputeROI',
            dcmpix__pb2.DCMPixComputeROIRequest.SerializeToString,
            dcmpix__pb2.DCMPixComputeROIResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixROIValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixROIValues',
            dcmpix__pb2.DCMPixROIValuesRequest.SerializeToString,
            dcmpix__pb2.DCMPixROIValuesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixShape(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixShape',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixShapeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixSpacing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixSpacing',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixSpacingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixOrigin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixOrigin',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixOriginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixOrientation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixOrientation',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixOrientationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixSliceLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixSliceLocation',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixSliceLocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixSourceFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixSourceFile',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixSourceFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixImage',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixSetImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixSetImage',
            dcmpix__pb2.DCMPixSetImageRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixGetMapFromROI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixGetMapFromROI',
            dcmpix__pb2.DCMPixGetMapFromROIRequest.SerializeToString,
            dcmpix__pb2.DCMPixGetMapFromROIResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixDicomImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixDicomImage',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixDicomImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixDicomSeries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixDicomSeries',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixDicomSeriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DCMPixDicomStudy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DCMPixDicomStudy',
            types__pb2.DCMPix.SerializeToString,
            dcmpix__pb2.DCMPixDicomStudyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerViewer2D(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerViewer2D',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerViewer2DResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerBlendingController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerBlendingController',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerBlendingControllerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerStyle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerStyle',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerStyleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerTitle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerTitle',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerTitleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerROIVolumes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerROIVolumes',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerROIVolumesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerRenderingMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerRenderingMode',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerRenderingModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerSetRenderingMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerSetRenderingMode',
            vrcontroller__pb2.VRControllerSetRenderingModeRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerWLWW(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerWLWW',
            types__pb2.VRController.SerializeToString,
            vrcontroller__pb2.VRControllerWLWWResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerSetWLWW(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerSetWLWW',
            vrcontroller__pb2.VRControllerSetWLWWRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerHideROIVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerHideROIVolume',
            vrcontroller__pb2.VRControllerHideROIVolumeRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerDisplayROIVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerDisplayROIVolume',
            vrcontroller__pb2.VRControllerDisplayROIVolumeRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VRControllerNeedsDisplayUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/VRControllerNeedsDisplayUpdate',
            types__pb2.VRController.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerCloseViewer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerCloseViewer',
            types__pb2.ViewerController.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerPixList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerPixList',
            viewercontroller__pb2.ViewerControllerPixListRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerPixListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerNeedsDisplayUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerNeedsDisplayUpdate',
            types__pb2.ViewerController.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerROIList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerROIList',
            viewercontroller__pb2.ViewerControllerROIListRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerROIListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerNewROI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerNewROI',
            viewercontroller__pb2.ViewerControllerNewROIRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerNewROIResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerCurDCM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerCurDCM',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerCurDCMResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerROIsWithName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerROIsWithName',
            viewercontroller__pb2.ViewerControllerROIsWithNameRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerROIsWithNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerSelectedROIs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerSelectedROIs',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerSelectedROIsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerIsDataVolumic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerIsDataVolumic',
            viewercontroller__pb2.ViewerControllerIsDataVolumicRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerIsDataVolumicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerCopyViewerWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerCopyViewerWindow',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerCopyViewerWindowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerResampleViewerController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerResampleViewerController',
            viewercontroller__pb2.ViewerControllerResampleViewerControllerRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerResampleViewerControllerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerBlendingController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerBlendingController',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerBlendingControllerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerVRControllers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerVRControllers',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerVRControllersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerTitle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerTitle',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerTitleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerModality(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerModality',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerModalityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerMovieIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerMovieIdx',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerMovieIdxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerSetMovieIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerSetMovieIdx',
            viewercontroller__pb2.ViewerControllerSetMovieIdxRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerMaxMovieIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerMaxMovieIdx',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerMaxMovieIdxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerIdx',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerIdxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerSetIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerSetIdx',
            viewercontroller__pb2.ViewerControllerSetIdxRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerDisplayedIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerDisplayedIdx',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerDisplayedIdxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerSetDisplayedIdx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerSetDisplayedIdx',
            viewercontroller__pb2.ViewerControllerSetDisplayedIdxRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerFlippedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerFlippedData',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerFlippedDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerWLWW(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerWLWW',
            types__pb2.ViewerController.SerializeToString,
            viewercontroller__pb2.ViewerControllerWLWWResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerSetWLWW(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerSetWLWW',
            viewercontroller__pb2.ViewerControllerSetWLWWRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerOpenVRViewerForMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerOpenVRViewerForMode',
            viewercontroller__pb2.ViewerControllerOpenVRViewerForModeRequest.SerializeToString,
            viewercontroller__pb2.ViewerControllerOpenVRViewerForModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewerControllerFuseWithViewer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/ViewerControllerFuseWithViewer',
            viewercontroller__pb2.ViewerControllerFuseWithViewerRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BrowserControllerDatabaseSelection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/BrowserControllerDatabaseSelection',
            types__pb2.BrowserController.SerializeToString,
            browsercontroller__pb2.BrowserControllerDatabaseSelectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BrowserControllerCopyFilesIfNeeded(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/BrowserControllerCopyFilesIfNeeded',
            browsercontroller__pb2.BrowserControllerCopyFilesIfNeededRequest.SerializeToString,
            utilities__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BrowserControllerOpenViewerFromImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/BrowserControllerOpenViewerFromImages',
            browsercontroller__pb2.BrowserControllerOpenViewerFromImagesRequest.SerializeToString,
            browsercontroller__pb2.BrowserControllerOpenViewerFromImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BrowserControllerDatabaseStudies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/BrowserControllerDatabaseStudies',
            types__pb2.BrowserController.SerializeToString,
            browsercontroller__pb2.BrowserControllerDatabaseStudiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageWidth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageWidth',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageWidthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageHeight',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageHeightResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageSOPInstanceUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageSOPInstanceUID',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageSOPInstanceUIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageCompletePath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageCompletePath',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageCompletePathResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageDate',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageDateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageNumberOfFrames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageNumberOfFrames',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageNumberOfFramesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageModality(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageModality',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageModalityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageSeries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageSeries',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageSeriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageSliceLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageSliceLocation',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageSliceLocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomImageInstanceNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomImageInstanceNumber',
            types__pb2.DicomImage.SerializeToString,
            dicomimage__pb2.DicomImageInstanceNumberResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesPaths',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesPathsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesPreviousSeries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesPreviousSeries',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesPreviousSeriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesNextSeries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesNextSeries',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesNextSeriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesSortedImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesSortedImages',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesSortedImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesStudy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesStudy',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesStudyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesImages',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesSeriesInstanceUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesSeriesInstanceUID',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesSeriesInstanceUIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesSeriesSOPClassUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesSeriesSOPClassUID',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesSeriesSOPClassUIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesSeriesDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesSeriesDescription',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesSeriesDescriptionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesModality(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesModality',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesModalityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesName',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesDate',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesDateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomSeriesNumberOfImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomSeriesNumberOfImages',
            types__pb2.DicomSeries.SerializeToString,
            dicomseries__pb2.DicomSeriesNumberOfImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyPaths',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyPathsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyImages',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyModalities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyModalities',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyModalitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyNoFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyNoFiles',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyNoFilesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyRawNoFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyRawNoFiles',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyRawNoFilesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyNumberOfImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyNumberOfImages',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyNumberOfImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudySeries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudySeries',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudySeriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyName',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyDate',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyDateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyDateAdded(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyDateAdded',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyDateAddedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyDateOfBirth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyDateOfBirth',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyDateOfBirthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyInstitutionName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyInstitutionName',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyInstitutionNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyModality(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyModality',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyModalityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyPatientID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyPatientID',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyPatientIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyPatientUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyPatientUID',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyPatientUIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyPatientSex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyPatientSex',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyPatientSexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyPerformingPhysician(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyPerformingPhysician',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyPerformingPhysicianResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyReferringPhysician(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyReferringPhysician',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyReferringPhysicianResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyStudyInstanceUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyStudyInstanceUID',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyStudyInstanceUIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DicomStudyStudyName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osirixgrpc.OsiriXService/DicomStudyStudyName',
            types__pb2.DicomStudy.SerializeToString,
            dicomstudy__pb2.DicomStudyStudyNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
