name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf]
        pip install -e .[dev]

    - name: Run Rust tests
      run: cargo test

    - name: Build package
      run: maturin develop

    - name: Run Python tests
      run: |
        python -m pytest tests/ -v

    - name: Check formatting (Rust)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: cargo fmt --check

    - name: Run clippy
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: cargo clippy -- -D warnings

  build-test:
    name: Test wheel building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install maturin
      run: pip install maturin[patchelf]

    - name: Build wheel
      run: maturin build --release

    - name: Build sdist
      run: maturin sdist