# coding: utf-8

"""
    EDIS public shipping API

    <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span> This method is only available for Greater-China based sellers with an active eDIS account.</p></div><br>This API allows 3rd party developers in the Greater-China area to process package shipping details.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ServiceInfoResponses(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description_en': 'str',
        'description_hk': 'str',
        'description_jp': 'str',
        'description_zh': 'str',
        'directions': 'list[DirectionsResponses]',
        'incoterm': 'str',
        'max_length': 'float',
        'max_total_length': 'float',
        'max_weight': 'float',
        'name_en': 'str',
        'name_hk': 'str',
        'name_jp': 'str',
        'name_zh': 'str',
        'shipping_service_id': 'str'
    }

    attribute_map = {
        'description_en': 'descriptionEn',
        'description_hk': 'descriptionHk',
        'description_jp': 'descriptionJp',
        'description_zh': 'descriptionZh',
        'directions': 'directions',
        'incoterm': 'incoterm',
        'max_length': 'maxLength',
        'max_total_length': 'maxTotalLength',
        'max_weight': 'maxWeight',
        'name_en': 'nameEn',
        'name_hk': 'nameHk',
        'name_jp': 'nameJp',
        'name_zh': 'nameZh',
        'shipping_service_id': 'shippingServiceId'
    }

    def __init__(self, description_en=None, description_hk=None, description_jp=None, description_zh=None, directions=None, incoterm=None, max_length=None, max_total_length=None, max_weight=None, name_en=None, name_hk=None, name_jp=None, name_zh=None, shipping_service_id=None):  # noqa: E501
        """ServiceInfoResponses - a model defined in Swagger"""  # noqa: E501
        self._description_en = None
        self._description_hk = None
        self._description_jp = None
        self._description_zh = None
        self._directions = None
        self._incoterm = None
        self._max_length = None
        self._max_total_length = None
        self._max_weight = None
        self._name_en = None
        self._name_hk = None
        self._name_jp = None
        self._name_zh = None
        self._shipping_service_id = None
        self.discriminator = None
        if description_en is not None:
            self.description_en = description_en
        if description_hk is not None:
            self.description_hk = description_hk
        if description_jp is not None:
            self.description_jp = description_jp
        if description_zh is not None:
            self.description_zh = description_zh
        if directions is not None:
            self.directions = directions
        if incoterm is not None:
            self.incoterm = incoterm
        if max_length is not None:
            self.max_length = max_length
        if max_total_length is not None:
            self.max_total_length = max_total_length
        if max_weight is not None:
            self.max_weight = max_weight
        if name_en is not None:
            self.name_en = name_en
        if name_hk is not None:
            self.name_hk = name_hk
        if name_jp is not None:
            self.name_jp = name_jp
        if name_zh is not None:
            self.name_zh = name_zh
        if shipping_service_id is not None:
            self.shipping_service_id = shipping_service_id

    @property
    def description_en(self):
        """Gets the description_en of this ServiceInfoResponses.  # noqa: E501

        Basic shipping service information in English.  # noqa: E501

        :return: The description_en of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._description_en

    @description_en.setter
    def description_en(self, description_en):
        """Sets the description_en of this ServiceInfoResponses.

        Basic shipping service information in English.  # noqa: E501

        :param description_en: The description_en of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._description_en = description_en

    @property
    def description_hk(self):
        """Gets the description_hk of this ServiceInfoResponses.  # noqa: E501

        Basic shipping service information in traditional Chinese.  # noqa: E501

        :return: The description_hk of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._description_hk

    @description_hk.setter
    def description_hk(self, description_hk):
        """Sets the description_hk of this ServiceInfoResponses.

        Basic shipping service information in traditional Chinese.  # noqa: E501

        :param description_hk: The description_hk of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._description_hk = description_hk

    @property
    def description_jp(self):
        """Gets the description_jp of this ServiceInfoResponses.  # noqa: E501

        Basic shipping service information in Japanese.  # noqa: E501

        :return: The description_jp of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._description_jp

    @description_jp.setter
    def description_jp(self, description_jp):
        """Sets the description_jp of this ServiceInfoResponses.

        Basic shipping service information in Japanese.  # noqa: E501

        :param description_jp: The description_jp of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._description_jp = description_jp

    @property
    def description_zh(self):
        """Gets the description_zh of this ServiceInfoResponses.  # noqa: E501

        Basic shipping service information in simplified Chinese.  # noqa: E501

        :return: The description_zh of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._description_zh

    @description_zh.setter
    def description_zh(self, description_zh):
        """Sets the description_zh of this ServiceInfoResponses.

        Basic shipping service information in simplified Chinese.  # noqa: E501

        :param description_zh: The description_zh of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._description_zh = description_zh

    @property
    def directions(self):
        """Gets the directions of this ServiceInfoResponses.  # noqa: E501

        This array lists includes all Ship From/Ship To combinations that the service supports. It also includes the type of batteries that may be shipping using the shipping service.  # noqa: E501

        :return: The directions of this ServiceInfoResponses.  # noqa: E501
        :rtype: list[DirectionsResponses]
        """
        return self._directions

    @directions.setter
    def directions(self, directions):
        """Sets the directions of this ServiceInfoResponses.

        This array lists includes all Ship From/Ship To combinations that the service supports. It also includes the type of batteries that may be shipping using the shipping service.  # noqa: E501

        :param directions: The directions of this ServiceInfoResponses.  # noqa: E501
        :type: list[DirectionsResponses]
        """

        self._directions = directions

    @property
    def incoterm(self):
        """Gets the incoterm of this ServiceInfoResponses.  # noqa: E501

        The incoterm information associated with the the shipping service.<br><br><b>Supported values</b>:<ul><li><code>DDP</code></li><li><code>DDU</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/edelivery_international_shipping/types/api:IncotermEnum'>eBay API documentation</a>  # noqa: E501

        :return: The incoterm of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._incoterm

    @incoterm.setter
    def incoterm(self, incoterm):
        """Sets the incoterm of this ServiceInfoResponses.

        The incoterm information associated with the the shipping service.<br><br><b>Supported values</b>:<ul><li><code>DDP</code></li><li><code>DDU</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/edelivery_international_shipping/types/api:IncotermEnum'>eBay API documentation</a>  # noqa: E501

        :param incoterm: The incoterm of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._incoterm = incoterm

    @property
    def max_length(self):
        """Gets the max_length of this ServiceInfoResponses.  # noqa: E501

        This value indicates the maximum length (in centimeters) of the shipping package that the shipping service allows.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :return: The max_length of this ServiceInfoResponses.  # noqa: E501
        :rtype: float
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length):
        """Sets the max_length of this ServiceInfoResponses.

        This value indicates the maximum length (in centimeters) of the shipping package that the shipping service allows.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :param max_length: The max_length of this ServiceInfoResponses.  # noqa: E501
        :type: float
        """

        self._max_length = max_length

    @property
    def max_total_length(self):
        """Gets the max_total_length of this ServiceInfoResponses.  # noqa: E501

        This value indicates the total maximum value of the length, width, and height of the package.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :return: The max_total_length of this ServiceInfoResponses.  # noqa: E501
        :rtype: float
        """
        return self._max_total_length

    @max_total_length.setter
    def max_total_length(self, max_total_length):
        """Sets the max_total_length of this ServiceInfoResponses.

        This value indicates the total maximum value of the length, width, and height of the package.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :param max_total_length: The max_total_length of this ServiceInfoResponses.  # noqa: E501
        :type: float
        """

        self._max_total_length = max_total_length

    @property
    def max_weight(self):
        """Gets the max_weight of this ServiceInfoResponses.  # noqa: E501

        This value indicates the maximum weight (in grams) of the shipping package that the shipping service allows.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :return: The max_weight of this ServiceInfoResponses.  # noqa: E501
        :rtype: float
        """
        return self._max_weight

    @max_weight.setter
    def max_weight(self, max_weight):
        """Sets the max_weight of this ServiceInfoResponses.

        This value indicates the maximum weight (in grams) of the shipping package that the shipping service allows.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :param max_weight: The max_weight of this ServiceInfoResponses.  # noqa: E501
        :type: float
        """

        self._max_weight = max_weight

    @property
    def name_en(self):
        """Gets the name_en of this ServiceInfoResponses.  # noqa: E501

        The shipping service name in English  # noqa: E501

        :return: The name_en of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._name_en

    @name_en.setter
    def name_en(self, name_en):
        """Sets the name_en of this ServiceInfoResponses.

        The shipping service name in English  # noqa: E501

        :param name_en: The name_en of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._name_en = name_en

    @property
    def name_hk(self):
        """Gets the name_hk of this ServiceInfoResponses.  # noqa: E501

        The shipping service name in traditional Chinese  # noqa: E501

        :return: The name_hk of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._name_hk

    @name_hk.setter
    def name_hk(self, name_hk):
        """Sets the name_hk of this ServiceInfoResponses.

        The shipping service name in traditional Chinese  # noqa: E501

        :param name_hk: The name_hk of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._name_hk = name_hk

    @property
    def name_jp(self):
        """Gets the name_jp of this ServiceInfoResponses.  # noqa: E501

        The shipping service name in Japanese.  # noqa: E501

        :return: The name_jp of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._name_jp

    @name_jp.setter
    def name_jp(self, name_jp):
        """Sets the name_jp of this ServiceInfoResponses.

        The shipping service name in Japanese.  # noqa: E501

        :param name_jp: The name_jp of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._name_jp = name_jp

    @property
    def name_zh(self):
        """Gets the name_zh of this ServiceInfoResponses.  # noqa: E501

        The shipping service name in simplified Chinese  # noqa: E501

        :return: The name_zh of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._name_zh

    @name_zh.setter
    def name_zh(self, name_zh):
        """Sets the name_zh of this ServiceInfoResponses.

        The shipping service name in simplified Chinese  # noqa: E501

        :param name_zh: The name_zh of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._name_zh = name_zh

    @property
    def shipping_service_id(self):
        """Gets the shipping_service_id of this ServiceInfoResponses.  # noqa: E501

        The unique identifier of the shipping service being retrieved.<br><br>This value can be input in the <a href=\"/api-docs/sell/edelivery_international_shipping/resources/package/methods/createPackage#request.packageInfo.shippingServiceId\" target=\"_blank\">shippingServiceId</a> field when creating a package through the the <b>createPackage</b> method.  # noqa: E501

        :return: The shipping_service_id of this ServiceInfoResponses.  # noqa: E501
        :rtype: str
        """
        return self._shipping_service_id

    @shipping_service_id.setter
    def shipping_service_id(self, shipping_service_id):
        """Sets the shipping_service_id of this ServiceInfoResponses.

        The unique identifier of the shipping service being retrieved.<br><br>This value can be input in the <a href=\"/api-docs/sell/edelivery_international_shipping/resources/package/methods/createPackage#request.packageInfo.shippingServiceId\" target=\"_blank\">shippingServiceId</a> field when creating a package through the the <b>createPackage</b> method.  # noqa: E501

        :param shipping_service_id: The shipping_service_id of this ServiceInfoResponses.  # noqa: E501
        :type: str
        """

        self._shipping_service_id = shipping_service_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ServiceInfoResponses, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ServiceInfoResponses):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
