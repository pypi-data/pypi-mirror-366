# coding: utf-8

"""
    Fulfillment API

    Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.  # noqa: E501

    OpenAPI spec version: v1.20.7
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ShippingFulfillmentPagedCollection(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fulfillments': 'list[ShippingFulfillment]',
        'total': 'int',
        'warnings': 'list[Error]'
    }

    attribute_map = {
        'fulfillments': 'fulfillments',
        'total': 'total',
        'warnings': 'warnings'
    }

    def __init__(self, fulfillments=None, total=None, warnings=None):  # noqa: E501
        """ShippingFulfillmentPagedCollection - a model defined in Swagger"""  # noqa: E501
        self._fulfillments = None
        self._total = None
        self._warnings = None
        self.discriminator = None
        if fulfillments is not None:
            self.fulfillments = fulfillments
        if total is not None:
            self.total = total
        if warnings is not None:
            self.warnings = warnings

    @property
    def fulfillments(self):
        """Gets the fulfillments of this ShippingFulfillmentPagedCollection.  # noqa: E501

        This array contains one or more fulfillments required for the order that was specified in method endpoint.  # noqa: E501

        :return: The fulfillments of this ShippingFulfillmentPagedCollection.  # noqa: E501
        :rtype: list[ShippingFulfillment]
        """
        return self._fulfillments

    @fulfillments.setter
    def fulfillments(self, fulfillments):
        """Sets the fulfillments of this ShippingFulfillmentPagedCollection.

        This array contains one or more fulfillments required for the order that was specified in method endpoint.  # noqa: E501

        :param fulfillments: The fulfillments of this ShippingFulfillmentPagedCollection.  # noqa: E501
        :type: list[ShippingFulfillment]
        """

        self._fulfillments = fulfillments

    @property
    def total(self):
        """Gets the total of this ShippingFulfillmentPagedCollection.  # noqa: E501

        The total number of fulfillments in the specified order.<br><br><span class=\"tablenote\"><strong>Note:</strong> If no fulfillments are found for the order, this field is returned with a value of <code>0</code>.</span>  # noqa: E501

        :return: The total of this ShippingFulfillmentPagedCollection.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ShippingFulfillmentPagedCollection.

        The total number of fulfillments in the specified order.<br><br><span class=\"tablenote\"><strong>Note:</strong> If no fulfillments are found for the order, this field is returned with a value of <code>0</code>.</span>  # noqa: E501

        :param total: The total of this ShippingFulfillmentPagedCollection.  # noqa: E501
        :type: int
        """

        self._total = total

    @property
    def warnings(self):
        """Gets the warnings of this ShippingFulfillmentPagedCollection.  # noqa: E501

        This array is only returned if one or more errors or warnings occur with the call request.  # noqa: E501

        :return: The warnings of this ShippingFulfillmentPagedCollection.  # noqa: E501
        :rtype: list[Error]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this ShippingFulfillmentPagedCollection.

        This array is only returned if one or more errors or warnings occur with the call request.  # noqa: E501

        :param warnings: The warnings of this ShippingFulfillmentPagedCollection.  # noqa: E501
        :type: list[Error]
        """

        self._warnings = warnings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ShippingFulfillmentPagedCollection, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ShippingFulfillmentPagedCollection):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
