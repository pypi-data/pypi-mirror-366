# coding: utf-8

"""
    Fulfillment API

    Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.  # noqa: E501

    OpenAPI spec version: v1.20.7
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DisputeSummaryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'href': 'str',
        'limit': 'int',
        'next': 'str',
        'offset': 'int',
        'payment_dispute_summaries': 'list[PaymentDisputeSummary]',
        'prev': 'str',
        'total': 'int'
    }

    attribute_map = {
        'href': 'href',
        'limit': 'limit',
        'next': 'next',
        'offset': 'offset',
        'payment_dispute_summaries': 'paymentDisputeSummaries',
        'prev': 'prev',
        'total': 'total'
    }

    def __init__(self, href=None, limit=None, next=None, offset=None, payment_dispute_summaries=None, prev=None, total=None):  # noqa: E501
        """DisputeSummaryResponse - a model defined in Swagger"""  # noqa: E501
        self._href = None
        self._limit = None
        self._next = None
        self._offset = None
        self._payment_dispute_summaries = None
        self._prev = None
        self._total = None
        self.discriminator = None
        if href is not None:
            self.href = href
        if limit is not None:
            self.limit = limit
        if next is not None:
            self.next = next
        if offset is not None:
            self.offset = offset
        if payment_dispute_summaries is not None:
            self.payment_dispute_summaries = payment_dispute_summaries
        if prev is not None:
            self.prev = prev
        if total is not None:
            self.total = total

    @property
    def href(self):
        """Gets the href of this DisputeSummaryResponse.  # noqa: E501

        The URI of the <strong>getPaymentDisputeSummaries</strong> call request that produced the current page of the result set.  # noqa: E501

        :return: The href of this DisputeSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this DisputeSummaryResponse.

        The URI of the <strong>getPaymentDisputeSummaries</strong> call request that produced the current page of the result set.  # noqa: E501

        :param href: The href of this DisputeSummaryResponse.  # noqa: E501
        :type: str
        """

        self._href = href

    @property
    def limit(self):
        """Gets the limit of this DisputeSummaryResponse.  # noqa: E501

        This value shows the maximum number of payment disputes that will appear on one page of the result set. The <strong>limit</strong> value can be passed in as a query parameter in the request, or if it is not used, it defaults to <code>200</code>. If the value in the <strong>total</strong> field exceeds this <strong>limit</strong> value, there are multiple pages in the current result set.<br><br><b>Min</b>: 1; <b>Max</b>: 200; <b>Default</b>: 200  # noqa: E501

        :return: The limit of this DisputeSummaryResponse.  # noqa: E501
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this DisputeSummaryResponse.

        This value shows the maximum number of payment disputes that will appear on one page of the result set. The <strong>limit</strong> value can be passed in as a query parameter in the request, or if it is not used, it defaults to <code>200</code>. If the value in the <strong>total</strong> field exceeds this <strong>limit</strong> value, there are multiple pages in the current result set.<br><br><b>Min</b>: 1; <b>Max</b>: 200; <b>Default</b>: 200  # noqa: E501

        :param limit: The limit of this DisputeSummaryResponse.  # noqa: E501
        :type: int
        """

        self._limit = limit

    @property
    def next(self):
        """Gets the next of this DisputeSummaryResponse.  # noqa: E501

        The <strong>getPaymentDisputeSummaries</strong> call URI to use if you wish to view the next page of the result set. For example, the following URI returns records 11 thru 20 from the collection of payment disputes:<br><br><code>path/payment_dispute_summary?limit=10&offset=10</code><br><br>This field is only returned if there is a next page of results to view based on the current input criteria.  # noqa: E501

        :return: The next of this DisputeSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this DisputeSummaryResponse.

        The <strong>getPaymentDisputeSummaries</strong> call URI to use if you wish to view the next page of the result set. For example, the following URI returns records 11 thru 20 from the collection of payment disputes:<br><br><code>path/payment_dispute_summary?limit=10&offset=10</code><br><br>This field is only returned if there is a next page of results to view based on the current input criteria.  # noqa: E501

        :param next: The next of this DisputeSummaryResponse.  # noqa: E501
        :type: str
        """

        self._next = next

    @property
    def offset(self):
        """Gets the offset of this DisputeSummaryResponse.  # noqa: E501

        This integer value indicates the number of payment disputes skipped before listing the first payment dispute from the result set. The <strong>offset</strong> value can be passed in as a query parameter in the request, or if it is not used, it defaults to <code>0</code> and the first payment dispute of the result set is shown at the top of the response.  # noqa: E501

        :return: The offset of this DisputeSummaryResponse.  # noqa: E501
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this DisputeSummaryResponse.

        This integer value indicates the number of payment disputes skipped before listing the first payment dispute from the result set. The <strong>offset</strong> value can be passed in as a query parameter in the request, or if it is not used, it defaults to <code>0</code> and the first payment dispute of the result set is shown at the top of the response.  # noqa: E501

        :param offset: The offset of this DisputeSummaryResponse.  # noqa: E501
        :type: int
        """

        self._offset = offset

    @property
    def payment_dispute_summaries(self):
        """Gets the payment_dispute_summaries of this DisputeSummaryResponse.  # noqa: E501

        Each payment dispute that matches the input criteria is returned under this array. If no payment disputes are found, an empty array is returned.  # noqa: E501

        :return: The payment_dispute_summaries of this DisputeSummaryResponse.  # noqa: E501
        :rtype: list[PaymentDisputeSummary]
        """
        return self._payment_dispute_summaries

    @payment_dispute_summaries.setter
    def payment_dispute_summaries(self, payment_dispute_summaries):
        """Sets the payment_dispute_summaries of this DisputeSummaryResponse.

        Each payment dispute that matches the input criteria is returned under this array. If no payment disputes are found, an empty array is returned.  # noqa: E501

        :param payment_dispute_summaries: The payment_dispute_summaries of this DisputeSummaryResponse.  # noqa: E501
        :type: list[PaymentDisputeSummary]
        """

        self._payment_dispute_summaries = payment_dispute_summaries

    @property
    def prev(self):
        """Gets the prev of this DisputeSummaryResponse.  # noqa: E501

        The <strong>getPaymentDisputeSummaries</strong> call URI to use if you wish to view the previous page of the result set. For example, the following URI returns records 1 thru 10 from the collection of payment disputes:<br><br><code>path/payment_dispute_summary?limit=10&offset=0</code><br><br>This field is only returned if there is a previous page of results to view based on the current input criteria.  # noqa: E501

        :return: The prev of this DisputeSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._prev

    @prev.setter
    def prev(self, prev):
        """Sets the prev of this DisputeSummaryResponse.

        The <strong>getPaymentDisputeSummaries</strong> call URI to use if you wish to view the previous page of the result set. For example, the following URI returns records 1 thru 10 from the collection of payment disputes:<br><br><code>path/payment_dispute_summary?limit=10&offset=0</code><br><br>This field is only returned if there is a previous page of results to view based on the current input criteria.  # noqa: E501

        :param prev: The prev of this DisputeSummaryResponse.  # noqa: E501
        :type: str
        """

        self._prev = prev

    @property
    def total(self):
        """Gets the total of this DisputeSummaryResponse.  # noqa: E501

        This integer value is the total number of payment disputes that matched the input criteria. If the total number of entries exceeds the value that was set for <strong>limit</strong> in the request payload, you will have to make multiple API calls to see all pages of the results set. This field is returned even if it is <code>0</code>.  # noqa: E501

        :return: The total of this DisputeSummaryResponse.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this DisputeSummaryResponse.

        This integer value is the total number of payment disputes that matched the input criteria. If the total number of entries exceeds the value that was set for <strong>limit</strong> in the request payload, you will have to make multiple API calls to see all pages of the results set. This field is returned even if it is <code>0</code>.  # noqa: E501

        :param total: The total of this DisputeSummaryResponse.  # noqa: E501
        :type: int
        """

        self._total = total

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DisputeSummaryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DisputeSummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
