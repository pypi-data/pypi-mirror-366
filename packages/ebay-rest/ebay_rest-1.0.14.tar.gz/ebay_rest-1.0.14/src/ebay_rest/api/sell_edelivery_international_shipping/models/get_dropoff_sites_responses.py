# coding: utf-8

"""
    EDIS public shipping API

    <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span> This method is only available for Greater-China based sellers with an active eDIS account.</p></div><br>This API allows 3rd party developers in the Greater-China area to process package shipping details.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetDropoffSitesResponses(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'city': 'str',
        'contact': 'str',
        'country': 'str',
        'district': 'str',
        'dropoff_site_id': 'str',
        'name': 'str',
        'phone': 'str',
        'province': 'str',
        'street1': 'str',
        'street2': 'str',
        'street3': 'str',
        'type': 'str'
    }

    attribute_map = {
        'city': 'city',
        'contact': 'contact',
        'country': 'country',
        'district': 'district',
        'dropoff_site_id': 'dropoffSiteId',
        'name': 'name',
        'phone': 'phone',
        'province': 'province',
        'street1': 'street1',
        'street2': 'street2',
        'street3': 'street3',
        'type': 'type'
    }

    def __init__(self, city=None, contact=None, country=None, district=None, dropoff_site_id=None, name=None, phone=None, province=None, street1=None, street2=None, street3=None, type=None):  # noqa: E501
        """GetDropoffSitesResponses - a model defined in Swagger"""  # noqa: E501
        self._city = None
        self._contact = None
        self._country = None
        self._district = None
        self._dropoff_site_id = None
        self._name = None
        self._phone = None
        self._province = None
        self._street1 = None
        self._street2 = None
        self._street3 = None
        self._type = None
        self.discriminator = None
        if city is not None:
            self.city = city
        if contact is not None:
            self.contact = contact
        if country is not None:
            self.country = country
        if district is not None:
            self.district = district
        if dropoff_site_id is not None:
            self.dropoff_site_id = dropoff_site_id
        if name is not None:
            self.name = name
        if phone is not None:
            self.phone = phone
        if province is not None:
            self.province = province
        if street1 is not None:
            self.street1 = street1
        if street2 is not None:
            self.street2 = street2
        if street3 is not None:
            self.street3 = street3
        if type is not None:
            self.type = type

    @property
    def city(self):
        """Gets the city of this GetDropoffSitesResponses.  # noqa: E501

        The city code of the drop-off site location.<br><br>See <a href=\"https://www.edisebay.com/open/development-guide-detail?id=36\" target=\"_blank\">商户API地址编码主数据</a> for valid city codes.  # noqa: E501

        :return: The city of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this GetDropoffSitesResponses.

        The city code of the drop-off site location.<br><br>See <a href=\"https://www.edisebay.com/open/development-guide-detail?id=36\" target=\"_blank\">商户API地址编码主数据</a> for valid city codes.  # noqa: E501

        :param city: The city of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def contact(self):
        """Gets the contact of this GetDropoffSitesResponses.  # noqa: E501

        The name of the contact person associated with the drop-off site location.  # noqa: E501

        :return: The contact of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this GetDropoffSitesResponses.

        The name of the contact person associated with the drop-off site location.  # noqa: E501

        :param contact: The contact of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._contact = contact

    @property
    def country(self):
        """Gets the country of this GetDropoffSitesResponses.  # noqa: E501

        The two-letter country code associated with the drop-off site location.  # noqa: E501

        :return: The country of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this GetDropoffSitesResponses.

        The two-letter country code associated with the drop-off site location.  # noqa: E501

        :param country: The country of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def district(self):
        """Gets the district of this GetDropoffSitesResponses.  # noqa: E501

        The district code of the drop-off site location.<br><br>See <a href=\"https://www.edisebay.com/open/development-guide-detail?id=36\" target=\"_blank\">商户API地址编码主数据</a> for valid district codes.  # noqa: E501

        :return: The district of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this GetDropoffSitesResponses.

        The district code of the drop-off site location.<br><br>See <a href=\"https://www.edisebay.com/open/development-guide-detail?id=36\" target=\"_blank\">商户API地址编码主数据</a> for valid district codes.  # noqa: E501

        :param district: The district of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._district = district

    @property
    def dropoff_site_id(self):
        """Gets the dropoff_site_id of this GetDropoffSitesResponses.  # noqa: E501

        The unique identifier of the drop-off site location.  # noqa: E501

        :return: The dropoff_site_id of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._dropoff_site_id

    @dropoff_site_id.setter
    def dropoff_site_id(self, dropoff_site_id):
        """Sets the dropoff_site_id of this GetDropoffSitesResponses.

        The unique identifier of the drop-off site location.  # noqa: E501

        :param dropoff_site_id: The dropoff_site_id of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._dropoff_site_id = dropoff_site_id

    @property
    def name(self):
        """Gets the name of this GetDropoffSitesResponses.  # noqa: E501

        The name of the drop-off site location.  # noqa: E501

        :return: The name of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetDropoffSitesResponses.

        The name of the drop-off site location.  # noqa: E501

        :param name: The name of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this GetDropoffSitesResponses.  # noqa: E501

        The phone number associated with the drop-off site location.  # noqa: E501

        :return: The phone of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this GetDropoffSitesResponses.

        The phone number associated with the drop-off site location.  # noqa: E501

        :param phone: The phone of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def province(self):
        """Gets the province of this GetDropoffSitesResponses.  # noqa: E501

        The province code of the drop-off site location.<br><br>See <a href=\"https://www.edisebay.com/open/development-guide-detail?id=36\" target=\"_blank\">商户API地址编码主数据</a> for valid province codes.  # noqa: E501

        :return: The province of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._province

    @province.setter
    def province(self, province):
        """Sets the province of this GetDropoffSitesResponses.

        The province code of the drop-off site location.<br><br>See <a href=\"https://www.edisebay.com/open/development-guide-detail?id=36\" target=\"_blank\">商户API地址编码主数据</a> for valid province codes.  # noqa: E501

        :param province: The province of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._province = province

    @property
    def street1(self):
        """Gets the street1 of this GetDropoffSitesResponses.  # noqa: E501

        The first line of the street address of the drop-off site location.  # noqa: E501

        :return: The street1 of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._street1

    @street1.setter
    def street1(self, street1):
        """Sets the street1 of this GetDropoffSitesResponses.

        The first line of the street address of the drop-off site location.  # noqa: E501

        :param street1: The street1 of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._street1 = street1

    @property
    def street2(self):
        """Gets the street2 of this GetDropoffSitesResponses.  # noqa: E501

        The second line, if applicable, of the street address of the drop-off site location.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :return: The street2 of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._street2

    @street2.setter
    def street2(self, street2):
        """Sets the street2 of this GetDropoffSitesResponses.

        The second line, if applicable, of the street address of the drop-off site location.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :param street2: The street2 of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._street2 = street2

    @property
    def street3(self):
        """Gets the street3 of this GetDropoffSitesResponses.  # noqa: E501

        The third line, if applicable, of the street address of the drop-off site location.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :return: The street3 of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._street3

    @street3.setter
    def street3(self, street3):
        """Sets the street3 of this GetDropoffSitesResponses.

        The third line, if applicable, of the street address of the drop-off site location.<br><br><span class=\"tablenote\"><b>Note:</b> This field is always returned, but will show as null or have an empty value if not defined/applicable.</span>  # noqa: E501

        :param street3: The street3 of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._street3 = street3

    @property
    def type(self):
        """Gets the type of this GetDropoffSitesResponses.  # noqa: E501

        The type of the drop-off site location.<br><br>Currently, the only valid response is <code>DROP_OFF</code>.  # noqa: E501

        :return: The type of this GetDropoffSitesResponses.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetDropoffSitesResponses.

        The type of the drop-off site location.<br><br>Currently, the only valid response is <code>DROP_OFF</code>.  # noqa: E501

        :param type: The type of this GetDropoffSitesResponses.  # noqa: E501
        :type: str
        """

        self._type = type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetDropoffSitesResponses, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetDropoffSitesResponses):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
