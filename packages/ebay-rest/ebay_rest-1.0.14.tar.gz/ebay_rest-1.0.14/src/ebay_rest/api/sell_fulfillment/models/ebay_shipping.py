# coding: utf-8

"""
    Fulfillment API

    Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.  # noqa: E501

    OpenAPI spec version: v1.20.7
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EbayShipping(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'shipping_label_provided_by': 'str'
    }

    attribute_map = {
        'shipping_label_provided_by': 'shippingLabelProvidedBy'
    }

    def __init__(self, shipping_label_provided_by=None):  # noqa: E501
        """EbayShipping - a model defined in Swagger"""  # noqa: E501
        self._shipping_label_provided_by = None
        self.discriminator = None
        if shipping_label_provided_by is not None:
            self.shipping_label_provided_by = shipping_label_provided_by

    @property
    def shipping_label_provided_by(self):
        """Gets the shipping_label_provided_by of this EbayShipping.  # noqa: E501

        This field contains the shipping label provider. If <code>EBAY</code>, this order is managed by eBay shipping and a free shipping label by eBay is downloadable by the seller via the eBay website.  # noqa: E501

        :return: The shipping_label_provided_by of this EbayShipping.  # noqa: E501
        :rtype: str
        """
        return self._shipping_label_provided_by

    @shipping_label_provided_by.setter
    def shipping_label_provided_by(self, shipping_label_provided_by):
        """Sets the shipping_label_provided_by of this EbayShipping.

        This field contains the shipping label provider. If <code>EBAY</code>, this order is managed by eBay shipping and a free shipping label by eBay is downloadable by the seller via the eBay website.  # noqa: E501

        :param shipping_label_provided_by: The shipping_label_provided_by of this EbayShipping.  # noqa: E501
        :type: str
        """

        self._shipping_label_provided_by = shipping_label_provided_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EbayShipping, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EbayShipping):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
