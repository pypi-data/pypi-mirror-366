[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
dependencies = [
    "accelerate>=1.9.0",
    "chatterbox-tts",                # Custom developer fork/source defined in tool.uv.sources
    "elevenlabs[pyaudio]>=1.0,<2.0",
    "platformdirs>=4.3,<5.0",
    "peft>=0.16.0,<1.0",
    "python-dotenv>=1.1.1",
    "psutil>=7.0,<8.0",
    "torch>=2.6,<2.7",               # chatterbox restriction, find out why later
    "torchaudio>=2.6,<2.7",          # chatterbox restriction, find out why later
    "tqdm>=4.67,<5.0",
]
name = "gensay"
dynamic = ["version"]
description = 'Multi-provider TTS tool compatible with macOS say command'
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
    { name = "Anthony Wu", email = "pls-file-gh-issue@users.noreply.github.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
]

[project.scripts]
gensay = "gensay.main:main"

[project.urls]
Documentation = "https://github.com/anthonywu/gensay#readme"
Issues = "https://github.com/anthonywu/gensay/issues"
Source = "https://github.com/anthonywu/gensay"

[project.optional-dependencies]
# Optional provider-specific dependencies
openai = ["openai>=1.0.0"]
aws = ["boto3>=1.34.0"]
# Audio format conversion
audio-formats = ["pydub>=0.25.0", "ffmpeg-python>=0.2.0"]
# All optional dependencies
all = ["gensay[openai,aws,audio-formats]"]

[tool.hatch.version]
path = "src/gensay/__about__.py"

# uv-specific configuration
[tool.uv]
# Define development dependencies
dev-dependencies = [
    "mypy>=1.0.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.8.0",
    "build>=1.0.0",      # For building distributions
    "twine>=5.0.0",      # For uploading to PyPI
]


[tool.uv.sources]
# the upstream chatterbox-tts rigidly pins its dependencies, the fork relaxes the semvar ranges
chatterbox-tts = { git = "https://github.com/anthonywu/chatterbox.git", branch = "dev" }

[tool.coverage.run]
source_pkgs = ["gensay", "tests"]
branch = true
parallel = true
omit = ["src/gensay/__about__.py"]

[tool.coverage.paths]
gensay = ["src/gensay", "*/gensay/src/gensay"]
tests = ["tests", "*/gensay/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C90", # mccabe complexity
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused imports in __init__ files
"tests/*" = ["ARG"]      # unused arguments in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "chatterbox.*",
    "torchaudio.*",
    "torch.*",
    "librosa.*",
    "soundfile.*",
    "pytest.*",
]
ignore_missing_imports = true
