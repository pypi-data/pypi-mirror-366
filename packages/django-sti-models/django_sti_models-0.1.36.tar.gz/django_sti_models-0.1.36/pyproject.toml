[tool.poetry]
name = "django-sti-models"
version = "0.1.36"
description = "Improved Django Single Table Inheritance (STI) models with admin integration and advanced utilities"
authors = ["Konrad Beck <konrad.beck@gmail.com>"]
readme = "README.md"
packages = [{include = "django_sti_models"}]
keywords = ["django", "sti", "single-table-inheritance", "models", "polymorphic", "admin"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

[tool.poetry.dependencies]
python = "^3.8.1"
django = ">=4.2,<6.0"
typing-extensions = "^4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-django = "^4.5"
pytest-cov = "^4.0"
black = "^23.0"
isort = "^5.12"
flake8 = "^6.0"
mypy = "^1.0"
pre-commit = "^3.0"
django-debug-toolbar = "^4.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^6.0"
sphinx-rtd-theme = "^1.2"
sphinx-autodoc-typehints = "^1.20"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["django_sti_models"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=django_sti_models",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]

[tool.coverage.run]
source = ["django_sti_models"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/management/commands/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
