# Generated by Django 4.2.23 on 2025-08-04 04:11

from django.db import migrations


def create_algorithms(apps, schema_editor):
    """Populate EncryptionAlgorithm, AuthenticationAlgorithm, and DiffieHellmanGroup lookup tables."""

    EncryptionAlgorithm = apps.get_model("nautobot_app_vpn", "EncryptionAlgorithm")
    AuthenticationAlgorithm = apps.get_model("nautobot_app_vpn", "AuthenticationAlgorithm")
    DiffieHellmanGroup = apps.get_model("nautobot_app_vpn", "DiffieHellmanGroup")

    ENCRYPTION_CHOICES = [
        ("des", "DES (56-bit)"),
        ("3des", "3DES (168-bit)"),
        ("aes-128-cbc", "AES-128-CBC"),
        ("aes-192-cbc", "AES-192-CBC"),
        ("aes-256-cbc", "AES-256-CBC"),
        ("aes-128-gcm", "AES-128-GCM"),
        ("aes-256-gcm", "AES-256-GCM"),
    ]
    AUTHENTICATION_CHOICES = [
        ("non-auth", "None"),
        ("md5", "MD5 (128-bit)"),
        ("sha1", "SHA-1 (160-bit)"),
        ("sha256", "SHA-256"),
        ("sha384", "SHA-384"),
        ("sha512", "SHA-512"),
    ]
    DH_CHOICES = [
        ("1", "Group 1 - 768-bit"),
        ("2", "Group 2 - 1024-bit"),
        ("5", "Group 5 - 1536-bit"),
        ("14", "Group 14 - 2048-bit"),
        ("15", "Group 15 - 3072-bit"),
        ("16", "Group 16 - 4096-bit"),
        ("19", "Group 19 - 256-bit elliptic curve"),
        ("20", "Group 20 - 384-bit elliptic curve"),
        ("21", "Group 21 - 521-bit elliptic curve"),
    ]

    for code, label in ENCRYPTION_CHOICES:
        EncryptionAlgorithm.objects.get_or_create(code=code, defaults={"label": label})
    for code, label in AUTHENTICATION_CHOICES:
        AuthenticationAlgorithm.objects.get_or_create(code=code, defaults={"label": label})
    for code, label in DH_CHOICES:
        DiffieHellmanGroup.objects.get_or_create(code=code, defaults={"label": label})


def delete_algorithms(apps, schema_editor):
    """Remove all lookup table records (for backwards migration)."""

    EncryptionAlgorithm = apps.get_model("nautobot_app_vpn", "EncryptionAlgorithm")
    AuthenticationAlgorithm = apps.get_model("nautobot_app_vpn", "AuthenticationAlgorithm")
    DiffieHellmanGroup = apps.get_model("nautobot_app_vpn", "DiffieHellmanGroup")

    EncryptionAlgorithm.objects.all().delete()
    AuthenticationAlgorithm.objects.all().delete()
    DiffieHellmanGroup.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("nautobot_app_vpn", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_algorithms, delete_algorithms),
    ]
