Metadata-Version: 2.3
Name: langchain-qwen3
Version: 0.1.0
Summary: An integration package connecting Qwen3 and LangChain
License: MIT
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: langchain-core (>=0.3.15,<0.4.0)
Requires-Dist: modelscope (>=1.28.1,<2.0.0)
Requires-Dist: torch (>=2.7.1,<3.0.0)
Requires-Dist: transformers (>=4.54.1,<5.0.0)
Project-URL: Repository, https://github.com/Aye10032/langchain-qwen3
Project-URL: Release Notes, https://github.com/langchain-ai/langchain/releases?q=tag%3A%22qwen3%3D%3D0%22&expanded=true
Project-URL: Source Code, https://github.com/langchain-ai/langchain/tree/master/libs/partners/qwen3
Description-Content-Type: text/markdown

# langchain-qwen3

This package contains the LangChain integration with Qwen3

## Installation

```bash
pip install -U langchain-qwen3
```

And you should configure credentials by setting the following environment variables:

* TODO: fill this out

## Chat Models

`ChatQwen3` class exposes chat models from Qwen3.

```python
from langchain_qwen3 import ChatQwen3

llm = ChatQwen3()
llm.invoke("Sing a ballad of LangChain.")
```

## Embeddings

`Qwen3Embeddings` class exposes embeddings from Qwen3.

```python
from langchain_qwen3 import Qwen3Embeddings

embeddings = Qwen3Embeddings()
embeddings.embed_query("What is the meaning of life?")
```

## LLMs
`Qwen3LLM` class exposes LLMs from Qwen3.

```python
from langchain_qwen3 import Qwen3LLM

llm = Qwen3LLM()
llm.invoke("The meaning of life is")
```

