# # generated by datamodel-codegen:
# #   filename:  file_upload_api.yaml
# #   timestamp: 2025-07-20T10:26:41+00:00
#
# from __future__ import annotations
# from enum import Enum
# from typing import Optional
# from _build.models.basemodel import IterBaseModel
# from pydantic import Field
# from typing import Union, IO
# from io import IOBase
#
#
# class BookUploadRequest(IterBaseModel):
#     title: str = Field(..., description="Title of the book")
#     author: Optional[str] = Field(None, description="Author of the book")
#     publication_year: Optional[int] = Field(
#         None, description="Year the book was published"
#     )
#     file: Union[bytes | IO | IOBase] = Field(..., description="The book file to upload")
#
#     class Config:
#         arbitrary_types_allowed = True
#
#
# class Category(Enum):
#     category1 = "category1"
#     category2 = "category2"
#     category3 = "category3"
#
#
# class DummyResponse(IterBaseModel):
#     message: Optional[str] = Field(None, description="A dummy response message")
#     data: Optional[Union[bytes | IO | IOBase]] = Field(
#         None, description="Dummy binary data"
#     )
#     category: Optional[Category] = Field(
#         None, description="Category of the dummy response"
#     )
#
#     class Config:
#         arbitrary_types_allowed = True
