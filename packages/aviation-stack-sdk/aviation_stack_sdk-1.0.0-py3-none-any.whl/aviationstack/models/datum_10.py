# -*- coding: utf-8 -*-

"""
aviationstack

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Datum10(object):

    """Implementation of the 'Datum10' model.

    Attributes:
        id (str): The model property of type str.
        iata_type (str): The model property of type str.
        airplane_id (str): The model property of type str.
        airline_iata_code (str): The model property of type str.
        iata_code_long (str): The model property of type str.
        iata_code_short (str): The model property of type str.
        airline_icao_code (str): The model property of type str.
        construction_number (str): The model property of type str.
        delivery_date (str): The model property of type str.
        engines_count (str): The model property of type str.
        engines_type (str): The model property of type str.
        first_flight_date (str): The model property of type str.
        icao_code_hex (str): The model property of type str.
        line_number (str): The model property of type str.
        model_code (str): The model property of type str.
        registration_number (str): The model property of type str.
        test_registration_number (str): The model property of type str.
        plane_age (str): The model property of type str.
        plane_class (str): The model property of type str.
        model_name (str): The model property of type str.
        plane_owner (str): The model property of type str.
        plane_series (str): The model property of type str.
        plane_status (str): The model property of type str.
        production_line (str): The model property of type str.
        registration_date (str): The model property of type str.
        rollout_date (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "iata_type": 'iata_type',
        "airplane_id": 'airplane_id',
        "airline_iata_code": 'airline_iata_code',
        "iata_code_long": 'iata_code_long',
        "iata_code_short": 'iata_code_short',
        "airline_icao_code": 'airline_icao_code',
        "construction_number": 'construction_number',
        "delivery_date": 'delivery_date',
        "engines_count": 'engines_count',
        "engines_type": 'engines_type',
        "first_flight_date": 'first_flight_date',
        "icao_code_hex": 'icao_code_hex',
        "line_number": 'line_number',
        "model_code": 'model_code',
        "registration_number": 'registration_number',
        "test_registration_number": 'test_registration_number',
        "plane_age": 'plane_age',
        "plane_class": 'plane_class',
        "model_name": 'model_name',
        "plane_owner": 'plane_owner',
        "plane_series": 'plane_series',
        "plane_status": 'plane_status',
        "production_line": 'production_line',
        "registration_date": 'registration_date',
        "rollout_date": 'rollout_date'
    }

    _nullables = [
        'airline_icao_code',
        'delivery_date',
        'first_flight_date',
        'line_number',
        'test_registration_number',
        'plane_age',
        'plane_class',
        'plane_owner',
        'plane_series',
        'registration_date',
        'rollout_date',
    ]

    def __init__(self,
                 id=None,
                 iata_type=None,
                 airplane_id=None,
                 airline_iata_code=None,
                 iata_code_long=None,
                 iata_code_short=None,
                 airline_icao_code=None,
                 construction_number=None,
                 delivery_date=None,
                 engines_count=None,
                 engines_type=None,
                 first_flight_date=None,
                 icao_code_hex=None,
                 line_number=None,
                 model_code=None,
                 registration_number=None,
                 test_registration_number=None,
                 plane_age=None,
                 plane_class=None,
                 model_name=None,
                 plane_owner=None,
                 plane_series=None,
                 plane_status=None,
                 production_line=None,
                 registration_date=None,
                 rollout_date=None):
        """Constructor for the Datum10 class"""

        # Initialize members of the class
        self.id = id 
        self.iata_type = iata_type 
        self.airplane_id = airplane_id 
        self.airline_iata_code = airline_iata_code 
        self.iata_code_long = iata_code_long 
        self.iata_code_short = iata_code_short 
        self.airline_icao_code = airline_icao_code 
        self.construction_number = construction_number 
        self.delivery_date = delivery_date 
        self.engines_count = engines_count 
        self.engines_type = engines_type 
        self.first_flight_date = first_flight_date 
        self.icao_code_hex = icao_code_hex 
        self.line_number = line_number 
        self.model_code = model_code 
        self.registration_number = registration_number 
        self.test_registration_number = test_registration_number 
        self.plane_age = plane_age 
        self.plane_class = plane_class 
        self.model_name = model_name 
        self.plane_owner = plane_owner 
        self.plane_series = plane_series 
        self.plane_status = plane_status 
        self.production_line = production_line 
        self.registration_date = registration_date 
        self.rollout_date = rollout_date 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        iata_type = dictionary.get("iata_type") if dictionary.get("iata_type") else None
        airplane_id = dictionary.get("airplane_id") if dictionary.get("airplane_id") else None
        airline_iata_code = dictionary.get("airline_iata_code") if dictionary.get("airline_iata_code") else None
        iata_code_long = dictionary.get("iata_code_long") if dictionary.get("iata_code_long") else None
        iata_code_short = dictionary.get("iata_code_short") if dictionary.get("iata_code_short") else None
        airline_icao_code = dictionary.get("airline_icao_code") if dictionary.get("airline_icao_code") else None
        construction_number = dictionary.get("construction_number") if dictionary.get("construction_number") else None
        delivery_date = dictionary.get("delivery_date") if dictionary.get("delivery_date") else None
        engines_count = dictionary.get("engines_count") if dictionary.get("engines_count") else None
        engines_type = dictionary.get("engines_type") if dictionary.get("engines_type") else None
        first_flight_date = dictionary.get("first_flight_date") if dictionary.get("first_flight_date") else None
        icao_code_hex = dictionary.get("icao_code_hex") if dictionary.get("icao_code_hex") else None
        line_number = dictionary.get("line_number") if dictionary.get("line_number") else None
        model_code = dictionary.get("model_code") if dictionary.get("model_code") else None
        registration_number = dictionary.get("registration_number") if dictionary.get("registration_number") else None
        test_registration_number = dictionary.get("test_registration_number") if dictionary.get("test_registration_number") else None
        plane_age = dictionary.get("plane_age") if dictionary.get("plane_age") else None
        plane_class = dictionary.get("plane_class") if dictionary.get("plane_class") else None
        model_name = dictionary.get("model_name") if dictionary.get("model_name") else None
        plane_owner = dictionary.get("plane_owner") if dictionary.get("plane_owner") else None
        plane_series = dictionary.get("plane_series") if dictionary.get("plane_series") else None
        plane_status = dictionary.get("plane_status") if dictionary.get("plane_status") else None
        production_line = dictionary.get("production_line") if dictionary.get("production_line") else None
        registration_date = dictionary.get("registration_date") if dictionary.get("registration_date") else None
        rollout_date = dictionary.get("rollout_date") if dictionary.get("rollout_date") else None
        # Return an object of this model
        return cls(id,
                   iata_type,
                   airplane_id,
                   airline_iata_code,
                   iata_code_long,
                   iata_code_short,
                   airline_icao_code,
                   construction_number,
                   delivery_date,
                   engines_count,
                   engines_type,
                   first_flight_date,
                   icao_code_hex,
                   line_number,
                   model_code,
                   registration_number,
                   test_registration_number,
                   plane_age,
                   plane_class,
                   model_name,
                   plane_owner,
                   plane_series,
                   plane_status,
                   production_line,
                   registration_date,
                   rollout_date)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'iata_type={self.iata_type!r}, '
                f'airplane_id={self.airplane_id!r}, '
                f'airline_iata_code={self.airline_iata_code!r}, '
                f'iata_code_long={self.iata_code_long!r}, '
                f'iata_code_short={self.iata_code_short!r}, '
                f'airline_icao_code={self.airline_icao_code!r}, '
                f'construction_number={self.construction_number!r}, '
                f'delivery_date={self.delivery_date!r}, '
                f'engines_count={self.engines_count!r}, '
                f'engines_type={self.engines_type!r}, '
                f'first_flight_date={self.first_flight_date!r}, '
                f'icao_code_hex={self.icao_code_hex!r}, '
                f'line_number={self.line_number!r}, '
                f'model_code={self.model_code!r}, '
                f'registration_number={self.registration_number!r}, '
                f'test_registration_number={self.test_registration_number!r}, '
                f'plane_age={self.plane_age!r}, '
                f'plane_class={self.plane_class!r}, '
                f'model_name={self.model_name!r}, '
                f'plane_owner={self.plane_owner!r}, '
                f'plane_series={self.plane_series!r}, '
                f'plane_status={self.plane_status!r}, '
                f'production_line={self.production_line!r}, '
                f'registration_date={self.registration_date!r}, '
                f'rollout_date={self.rollout_date!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'iata_type={self.iata_type!s}, '
                f'airplane_id={self.airplane_id!s}, '
                f'airline_iata_code={self.airline_iata_code!s}, '
                f'iata_code_long={self.iata_code_long!s}, '
                f'iata_code_short={self.iata_code_short!s}, '
                f'airline_icao_code={self.airline_icao_code!s}, '
                f'construction_number={self.construction_number!s}, '
                f'delivery_date={self.delivery_date!s}, '
                f'engines_count={self.engines_count!s}, '
                f'engines_type={self.engines_type!s}, '
                f'first_flight_date={self.first_flight_date!s}, '
                f'icao_code_hex={self.icao_code_hex!s}, '
                f'line_number={self.line_number!s}, '
                f'model_code={self.model_code!s}, '
                f'registration_number={self.registration_number!s}, '
                f'test_registration_number={self.test_registration_number!s}, '
                f'plane_age={self.plane_age!s}, '
                f'plane_class={self.plane_class!s}, '
                f'model_name={self.model_name!s}, '
                f'plane_owner={self.plane_owner!s}, '
                f'plane_series={self.plane_series!s}, '
                f'plane_status={self.plane_status!s}, '
                f'production_line={self.production_line!s}, '
                f'registration_date={self.registration_date!s}, '
                f'rollout_date={self.rollout_date!s})')
