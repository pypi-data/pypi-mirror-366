# -*- coding: utf-8 -*-

"""
aviationstack

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Arrival8(object):

    """Implementation of the 'Arrival8' model.

    Attributes:
        iata_code (str): The model property of type str.
        icao_code (str): The model property of type str.
        terminal (str): The model property of type str.
        gate (str): The model property of type str.
        scheduled_time (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "iata_code": 'iataCode',
        "icao_code": 'icaoCode',
        "terminal": 'terminal',
        "gate": 'gate',
        "scheduled_time": 'scheduledTime'
    }

    def __init__(self,
                 iata_code=None,
                 icao_code=None,
                 terminal=None,
                 gate=None,
                 scheduled_time=None):
        """Constructor for the Arrival8 class"""

        # Initialize members of the class
        self.iata_code = iata_code 
        self.icao_code = icao_code 
        self.terminal = terminal 
        self.gate = gate 
        self.scheduled_time = scheduled_time 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        iata_code = dictionary.get("iataCode") if dictionary.get("iataCode") else None
        icao_code = dictionary.get("icaoCode") if dictionary.get("icaoCode") else None
        terminal = dictionary.get("terminal") if dictionary.get("terminal") else None
        gate = dictionary.get("gate") if dictionary.get("gate") else None
        scheduled_time = dictionary.get("scheduledTime") if dictionary.get("scheduledTime") else None
        # Return an object of this model
        return cls(iata_code,
                   icao_code,
                   terminal,
                   gate,
                   scheduled_time)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'iata_code={self.iata_code!r}, '
                f'icao_code={self.icao_code!r}, '
                f'terminal={self.terminal!r}, '
                f'gate={self.gate!r}, '
                f'scheduled_time={self.scheduled_time!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'iata_code={self.iata_code!s}, '
                f'icao_code={self.icao_code!s}, '
                f'terminal={self.terminal!s}, '
                f'gate={self.gate!s}, '
                f'scheduled_time={self.scheduled_time!s})')
