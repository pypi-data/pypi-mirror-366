# -*- coding: utf-8 -*-

"""
aviationstack

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.types.union_types.leaf_type import LeafType
from apimatic_core.types.union_types.one_of import OneOf
from apimatic_core.types.union_types.union_type_context import UnionTypeContext as Context
from aviationstack.models.aircraft import Aircraft
from aviationstack.models.aircraft_1 import Aircraft1
from aviationstack.models.codeshared import Codeshared
from aviationstack.models.codeshared_1 import Codeshared1
from aviationstack.models.codeshared_6 import Codeshared6
from aviationstack.models.codeshared_61 import Codeshared61


class UnionTypeLookUp:

    """The `UnionTypeLookUp` class serves as a utility class for 
    storing and managing type combinator templates.It acts as a container for the templates 
    used in handling various data types within the application.

    """
    _templates = {
        'DepartureDelay': OneOf(
            [
                LeafType(str,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(int)
            ],
            Context.create(
               is_nullable=True
            )
        ),
        'FlightCodeshared': OneOf(
            [
                LeafType(Codeshared,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(Codeshared1)
            ],
            Context.create(
               is_nullable=True
            )
        ),
        'Datum2Aircraft': OneOf(
            [
                LeafType(Aircraft,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(Aircraft1)
            ],
            Context.create(
               is_nullable=True
            )
        ),
        'Departure2Delay': OneOf(
            [
                LeafType(str,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(int)
            ],
            Context.create(
               is_nullable=True
            )
        ),
        'Arrival2Delay': OneOf(
            [
                LeafType(str,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(int)
            ],
            Context.create(
               is_nullable=True
            )
        ),
        'Flight2Codeshared': OneOf(
            [
                LeafType(Codeshared,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(Codeshared1)
            ],
            Context.create(
               is_nullable=True
            )
        ),
        'Datum20Codeshared': OneOf(
            [
                LeafType(Codeshared6,
                         Context.create(
                             is_nullable=True
                         )),
                LeafType(Codeshared61)
            ],
            Context.create(
               is_nullable=True
            )
        )
    }

    @staticmethod
    def get(name):
        return UnionTypeLookUp._templates[name]

