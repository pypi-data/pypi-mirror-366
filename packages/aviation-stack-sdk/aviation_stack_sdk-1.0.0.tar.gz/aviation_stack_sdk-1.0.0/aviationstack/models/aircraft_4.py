# -*- coding: utf-8 -*-

"""
aviationstack

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Aircraft4(object):

    """Implementation of the 'Aircraft4' model.

    Attributes:
        model_code (str): The model property of type str.
        model_text (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "model_code": 'modelCode',
        "model_text": 'modelText'
    }

    def __init__(self,
                 model_code=None,
                 model_text=None):
        """Constructor for the Aircraft4 class"""

        # Initialize members of the class
        self.model_code = model_code 
        self.model_text = model_text 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        model_code = dictionary.get("modelCode") if dictionary.get("modelCode") else None
        model_text = dictionary.get("modelText") if dictionary.get("modelText") else None
        # Return an object of this model
        return cls(model_code,
                   model_text)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'model_code={self.model_code!r}, '
                f'model_text={self.model_text!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'model_code={self.model_code!s}, '
                f'model_text={self.model_text!s})')
