# -*- coding: utf-8 -*-

"""
aviationstack

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Datum8(object):

    """Implementation of the 'Datum8' model.

    Attributes:
        id (str): The model property of type str.
        fleet_average_age (str): The model property of type str.
        airline_id (str): The model property of type str.
        callsign (str): The model property of type str.
        hub_code (str): The model property of type str.
        iata_code (str): The model property of type str.
        icao_code (str): The model property of type str.
        country_iso_2 (str): The model property of type str.
        date_founded (str): The model property of type str.
        iata_prefix_accounting (str): The model property of type str.
        airline_name (str): The model property of type str.
        country_name (str): The model property of type str.
        fleet_size (str): The model property of type str.
        status (str): The model property of type str.
        mtype (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "fleet_average_age": 'fleet_average_age',
        "airline_id": 'airline_id',
        "callsign": 'callsign',
        "hub_code": 'hub_code',
        "iata_code": 'iata_code',
        "icao_code": 'icao_code',
        "country_iso_2": 'country_iso2',
        "date_founded": 'date_founded',
        "iata_prefix_accounting": 'iata_prefix_accounting',
        "airline_name": 'airline_name',
        "country_name": 'country_name',
        "fleet_size": 'fleet_size',
        "status": 'status',
        "mtype": 'type'
    }

    _nullables = [
        'hub_code',
        'date_founded',
        'iata_prefix_accounting',
        'mtype',
    ]

    def __init__(self,
                 id=None,
                 fleet_average_age=None,
                 airline_id=None,
                 callsign=None,
                 hub_code=None,
                 iata_code=None,
                 icao_code=None,
                 country_iso_2=None,
                 date_founded=None,
                 iata_prefix_accounting=None,
                 airline_name=None,
                 country_name=None,
                 fleet_size=None,
                 status=None,
                 mtype=None):
        """Constructor for the Datum8 class"""

        # Initialize members of the class
        self.id = id 
        self.fleet_average_age = fleet_average_age 
        self.airline_id = airline_id 
        self.callsign = callsign 
        self.hub_code = hub_code 
        self.iata_code = iata_code 
        self.icao_code = icao_code 
        self.country_iso_2 = country_iso_2 
        self.date_founded = date_founded 
        self.iata_prefix_accounting = iata_prefix_accounting 
        self.airline_name = airline_name 
        self.country_name = country_name 
        self.fleet_size = fleet_size 
        self.status = status 
        self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        fleet_average_age = dictionary.get("fleet_average_age") if dictionary.get("fleet_average_age") else None
        airline_id = dictionary.get("airline_id") if dictionary.get("airline_id") else None
        callsign = dictionary.get("callsign") if dictionary.get("callsign") else None
        hub_code = dictionary.get("hub_code") if dictionary.get("hub_code") else None
        iata_code = dictionary.get("iata_code") if dictionary.get("iata_code") else None
        icao_code = dictionary.get("icao_code") if dictionary.get("icao_code") else None
        country_iso_2 = dictionary.get("country_iso2") if dictionary.get("country_iso2") else None
        date_founded = dictionary.get("date_founded") if dictionary.get("date_founded") else None
        iata_prefix_accounting = dictionary.get("iata_prefix_accounting") if dictionary.get("iata_prefix_accounting") else None
        airline_name = dictionary.get("airline_name") if dictionary.get("airline_name") else None
        country_name = dictionary.get("country_name") if dictionary.get("country_name") else None
        fleet_size = dictionary.get("fleet_size") if dictionary.get("fleet_size") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        # Return an object of this model
        return cls(id,
                   fleet_average_age,
                   airline_id,
                   callsign,
                   hub_code,
                   iata_code,
                   icao_code,
                   country_iso_2,
                   date_founded,
                   iata_prefix_accounting,
                   airline_name,
                   country_name,
                   fleet_size,
                   status,
                   mtype)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'fleet_average_age={self.fleet_average_age!r}, '
                f'airline_id={self.airline_id!r}, '
                f'callsign={self.callsign!r}, '
                f'hub_code={self.hub_code!r}, '
                f'iata_code={self.iata_code!r}, '
                f'icao_code={self.icao_code!r}, '
                f'country_iso_2={self.country_iso_2!r}, '
                f'date_founded={self.date_founded!r}, '
                f'iata_prefix_accounting={self.iata_prefix_accounting!r}, '
                f'airline_name={self.airline_name!r}, '
                f'country_name={self.country_name!r}, '
                f'fleet_size={self.fleet_size!r}, '
                f'status={self.status!r}, '
                f'mtype={self.mtype!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'fleet_average_age={self.fleet_average_age!s}, '
                f'airline_id={self.airline_id!s}, '
                f'callsign={self.callsign!s}, '
                f'hub_code={self.hub_code!s}, '
                f'iata_code={self.iata_code!s}, '
                f'icao_code={self.icao_code!s}, '
                f'country_iso_2={self.country_iso_2!s}, '
                f'date_founded={self.date_founded!s}, '
                f'iata_prefix_accounting={self.iata_prefix_accounting!s}, '
                f'airline_name={self.airline_name!s}, '
                f'country_name={self.country_name!s}, '
                f'fleet_size={self.fleet_size!s}, '
                f'status={self.status!s}, '
                f'mtype={self.mtype!s})')
