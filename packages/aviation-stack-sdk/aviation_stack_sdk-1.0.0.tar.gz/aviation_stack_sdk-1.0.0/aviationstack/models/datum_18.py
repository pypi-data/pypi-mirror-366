# -*- coding: utf-8 -*-

"""
aviationstack

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Datum18(object):

    """Implementation of the 'Datum18' model.

    Attributes:
        id (str): The model property of type str.
        capital (str): The model property of type str.
        currency_code (str): The model property of type str.
        fips_code (str): The model property of type str.
        country_iso_2 (str): The model property of type str.
        country_iso_3 (str): The model property of type str.
        continent (str): The model property of type str.
        country_id (str): The model property of type str.
        country_name (str): The model property of type str.
        currency_name (str): The model property of type str.
        country_iso_numeric (str): The model property of type str.
        phone_prefix (str): The model property of type str.
        population (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "capital": 'capital',
        "currency_code": 'currency_code',
        "fips_code": 'fips_code',
        "country_iso_2": 'country_iso2',
        "country_iso_3": 'country_iso3',
        "continent": 'continent',
        "country_id": 'country_id',
        "country_name": 'country_name',
        "currency_name": 'currency_name',
        "country_iso_numeric": 'country_iso_numeric',
        "phone_prefix": 'phone_prefix',
        "population": 'population'
    }

    _nullables = [
        'capital',
        'currency_code',
        'fips_code',
        'currency_name',
        'phone_prefix',
        'population',
    ]

    def __init__(self,
                 id=None,
                 capital=None,
                 currency_code=None,
                 fips_code=None,
                 country_iso_2=None,
                 country_iso_3=None,
                 continent=None,
                 country_id=None,
                 country_name=None,
                 currency_name=None,
                 country_iso_numeric=None,
                 phone_prefix=None,
                 population=None):
        """Constructor for the Datum18 class"""

        # Initialize members of the class
        self.id = id 
        self.capital = capital 
        self.currency_code = currency_code 
        self.fips_code = fips_code 
        self.country_iso_2 = country_iso_2 
        self.country_iso_3 = country_iso_3 
        self.continent = continent 
        self.country_id = country_id 
        self.country_name = country_name 
        self.currency_name = currency_name 
        self.country_iso_numeric = country_iso_numeric 
        self.phone_prefix = phone_prefix 
        self.population = population 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        capital = dictionary.get("capital") if dictionary.get("capital") else None
        currency_code = dictionary.get("currency_code") if dictionary.get("currency_code") else None
        fips_code = dictionary.get("fips_code") if dictionary.get("fips_code") else None
        country_iso_2 = dictionary.get("country_iso2") if dictionary.get("country_iso2") else None
        country_iso_3 = dictionary.get("country_iso3") if dictionary.get("country_iso3") else None
        continent = dictionary.get("continent") if dictionary.get("continent") else None
        country_id = dictionary.get("country_id") if dictionary.get("country_id") else None
        country_name = dictionary.get("country_name") if dictionary.get("country_name") else None
        currency_name = dictionary.get("currency_name") if dictionary.get("currency_name") else None
        country_iso_numeric = dictionary.get("country_iso_numeric") if dictionary.get("country_iso_numeric") else None
        phone_prefix = dictionary.get("phone_prefix") if dictionary.get("phone_prefix") else None
        population = dictionary.get("population") if dictionary.get("population") else None
        # Return an object of this model
        return cls(id,
                   capital,
                   currency_code,
                   fips_code,
                   country_iso_2,
                   country_iso_3,
                   continent,
                   country_id,
                   country_name,
                   currency_name,
                   country_iso_numeric,
                   phone_prefix,
                   population)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'capital={self.capital!r}, '
                f'currency_code={self.currency_code!r}, '
                f'fips_code={self.fips_code!r}, '
                f'country_iso_2={self.country_iso_2!r}, '
                f'country_iso_3={self.country_iso_3!r}, '
                f'continent={self.continent!r}, '
                f'country_id={self.country_id!r}, '
                f'country_name={self.country_name!r}, '
                f'currency_name={self.currency_name!r}, '
                f'country_iso_numeric={self.country_iso_numeric!r}, '
                f'phone_prefix={self.phone_prefix!r}, '
                f'population={self.population!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'capital={self.capital!s}, '
                f'currency_code={self.currency_code!s}, '
                f'fips_code={self.fips_code!s}, '
                f'country_iso_2={self.country_iso_2!s}, '
                f'country_iso_3={self.country_iso_3!s}, '
                f'continent={self.continent!s}, '
                f'country_id={self.country_id!s}, '
                f'country_name={self.country_name!s}, '
                f'currency_name={self.currency_name!s}, '
                f'country_iso_numeric={self.country_iso_numeric!s}, '
                f'phone_prefix={self.phone_prefix!s}, '
                f'population={self.population!s})')
