# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.configurations.global_configuration import GlobalConfiguration
from apimatic_core.decorators.lazy_property import LazyProperty
from xero.configuration import Configuration
from xero.controllers.base_controller import BaseController
from xero.configuration import Environment
from xero.http.auth.o_auth_2 import OAuth2
from xero.controllers.file_name_controller import FileNameController
from xero.controllers.attachments_controller import AttachmentsController
from xero.controllers.account_id_controller import AccountIDController
from xero.controllers.accounts_controller import AccountsController
from xero.controllers.batch_payment_id_history_controller\
    import BatchPaymentIDHistoryController
from xero.controllers.batch_payments_controller import BatchPaymentsController
from xero.controllers.history_controller import HistoryController
from xero.controllers.bank_transaction_id_controller\
    import BankTransactionIDController
from xero.controllers.bank_transactions_controller\
    import BankTransactionsController
from xero.controllers.bank_transfer_id_controller\
    import BankTransferIDController
from xero.controllers.bank_transfers_controller import BankTransfersController
from xero.controllers.payment_services_controller\
    import PaymentServicesController
from xero.controllers.branding_theme_id_controller\
    import BrandingThemeIDController
from xero.controllers.branding_themes_controller\
    import BrandingThemesController
from xero.controllers.contact_id_controller import ContactIDController
from xero.controllers.contacts_controller import ContactsController
from xero.controllers.contact_group_id_controller\
    import ContactGroupIDController
from xero.controllers.contact_groups_controller import ContactGroupsController
from xero.controllers.credit_note_id_controller import CreditNoteIDController
from xero.controllers.credit_notes_controller import CreditNotesController
from xero.controllers.currencies_controller import CurrenciesController
from xero.controllers.employees_controller import EmployeesController
from xero.controllers.expense_claim_id_controller\
    import ExpenseClaimIDController
from xero.controllers.expense_claims_controller import ExpenseClaimsController
from xero.controllers.invoice_id_controller import InvoiceIDController
from xero.controllers.invoices_controller import InvoicesController
from xero.controllers.item_id_controller import ItemIDController
from xero.controllers.items_controller import ItemsController
from xero.controllers.journals_controller import JournalsController
from xero.controllers.linked_transaction_id_controller\
    import LinkedTransactionIDController
from xero.controllers.linked_transactions_controller\
    import LinkedTransactionsController
from xero.controllers.manual_journal_id_controller\
    import ManualJournalIDController
from xero.controllers.manual_journals_controller\
    import ManualJournalsController
from xero.controllers.organisation_controller import OrganisationController
from xero.controllers.overpayment_id_controller import OverpaymentIDController
from xero.controllers.overpayments_controller import OverpaymentsController
from xero.controllers.payment_id_controller import PaymentIDController
from xero.controllers.payments_controller import PaymentsController
from xero.controllers.prepayment_id_controller import PrepaymentIDController
from xero.controllers.prepayments_controller import PrepaymentsController
from xero.controllers.purchase_order_id_controller\
    import PurchaseOrderIDController
from xero.controllers.purchase_orders_controller\
    import PurchaseOrdersController
from xero.controllers.quote_id_controller import QuoteIDController
from xero.controllers.quotes_controller import QuotesController
from xero.controllers.receipt_id_controller import ReceiptIDController
from xero.controllers.receipts_controller import ReceiptsController
from xero.controllers.repeating_invoice_id_controller\
    import RepeatingInvoiceIDController
from xero.controllers.repeating_invoices_controller\
    import RepeatingInvoicesController
from xero.controllers.reports_controller import ReportsController
from xero.controllers.tax_rates_controller import TaxRatesController
from xero.controllers.tracking_option_id_controller\
    import TrackingOptionIDController
from xero.controllers.options_controller import OptionsController
from xero.controllers.tracking_category_id_controller\
    import TrackingCategoryIDController
from xero.controllers.tracking_categories_controller\
    import TrackingCategoriesController
from xero.controllers.users_controller import UsersController
from xero.controllers.misc_controller import MiscController


class XeroClient(object):
    @LazyProperty
    def file_name(self):
        return FileNameController(self.global_configuration)

    @LazyProperty
    def attachments(self):
        return AttachmentsController(self.global_configuration)

    @LazyProperty
    def account_id(self):
        return AccountIDController(self.global_configuration)

    @LazyProperty
    def accounts(self):
        return AccountsController(self.global_configuration)

    @LazyProperty
    def batch_payment_id_history(self):
        return BatchPaymentIDHistoryController(self.global_configuration)

    @LazyProperty
    def batch_payments(self):
        return BatchPaymentsController(self.global_configuration)

    @LazyProperty
    def history(self):
        return HistoryController(self.global_configuration)

    @LazyProperty
    def bank_transaction_id(self):
        return BankTransactionIDController(self.global_configuration)

    @LazyProperty
    def bank_transactions(self):
        return BankTransactionsController(self.global_configuration)

    @LazyProperty
    def bank_transfer_id(self):
        return BankTransferIDController(self.global_configuration)

    @LazyProperty
    def bank_transfers(self):
        return BankTransfersController(self.global_configuration)

    @LazyProperty
    def payment_services(self):
        return PaymentServicesController(self.global_configuration)

    @LazyProperty
    def branding_theme_id(self):
        return BrandingThemeIDController(self.global_configuration)

    @LazyProperty
    def branding_themes(self):
        return BrandingThemesController(self.global_configuration)

    @LazyProperty
    def contact_id(self):
        return ContactIDController(self.global_configuration)

    @LazyProperty
    def contacts(self):
        return ContactsController(self.global_configuration)

    @LazyProperty
    def contact_group_id(self):
        return ContactGroupIDController(self.global_configuration)

    @LazyProperty
    def contact_groups(self):
        return ContactGroupsController(self.global_configuration)

    @LazyProperty
    def credit_note_id(self):
        return CreditNoteIDController(self.global_configuration)

    @LazyProperty
    def credit_notes(self):
        return CreditNotesController(self.global_configuration)

    @LazyProperty
    def currencies(self):
        return CurrenciesController(self.global_configuration)

    @LazyProperty
    def employees(self):
        return EmployeesController(self.global_configuration)

    @LazyProperty
    def expense_claim_id(self):
        return ExpenseClaimIDController(self.global_configuration)

    @LazyProperty
    def expense_claims(self):
        return ExpenseClaimsController(self.global_configuration)

    @LazyProperty
    def invoice_id(self):
        return InvoiceIDController(self.global_configuration)

    @LazyProperty
    def invoices(self):
        return InvoicesController(self.global_configuration)

    @LazyProperty
    def item_id(self):
        return ItemIDController(self.global_configuration)

    @LazyProperty
    def items(self):
        return ItemsController(self.global_configuration)

    @LazyProperty
    def journals(self):
        return JournalsController(self.global_configuration)

    @LazyProperty
    def linked_transaction_id(self):
        return LinkedTransactionIDController(self.global_configuration)

    @LazyProperty
    def linked_transactions(self):
        return LinkedTransactionsController(self.global_configuration)

    @LazyProperty
    def manual_journal_id(self):
        return ManualJournalIDController(self.global_configuration)

    @LazyProperty
    def manual_journals(self):
        return ManualJournalsController(self.global_configuration)

    @LazyProperty
    def organisation(self):
        return OrganisationController(self.global_configuration)

    @LazyProperty
    def overpayment_id(self):
        return OverpaymentIDController(self.global_configuration)

    @LazyProperty
    def overpayments(self):
        return OverpaymentsController(self.global_configuration)

    @LazyProperty
    def payment_id(self):
        return PaymentIDController(self.global_configuration)

    @LazyProperty
    def payments(self):
        return PaymentsController(self.global_configuration)

    @LazyProperty
    def prepayment_id(self):
        return PrepaymentIDController(self.global_configuration)

    @LazyProperty
    def prepayments(self):
        return PrepaymentsController(self.global_configuration)

    @LazyProperty
    def purchase_order_id(self):
        return PurchaseOrderIDController(self.global_configuration)

    @LazyProperty
    def purchase_orders(self):
        return PurchaseOrdersController(self.global_configuration)

    @LazyProperty
    def quote_id(self):
        return QuoteIDController(self.global_configuration)

    @LazyProperty
    def quotes(self):
        return QuotesController(self.global_configuration)

    @LazyProperty
    def receipt_id(self):
        return ReceiptIDController(self.global_configuration)

    @LazyProperty
    def receipts(self):
        return ReceiptsController(self.global_configuration)

    @LazyProperty
    def repeating_invoice_id(self):
        return RepeatingInvoiceIDController(self.global_configuration)

    @LazyProperty
    def repeating_invoices(self):
        return RepeatingInvoicesController(self.global_configuration)

    @LazyProperty
    def reports(self):
        return ReportsController(self.global_configuration)

    @LazyProperty
    def tax_rates(self):
        return TaxRatesController(self.global_configuration)

    @LazyProperty
    def tracking_option_id(self):
        return TrackingOptionIDController(self.global_configuration)

    @LazyProperty
    def options(self):
        return OptionsController(self.global_configuration)

    @LazyProperty
    def tracking_category_id(self):
        return TrackingCategoryIDController(self.global_configuration)

    @LazyProperty
    def tracking_categories(self):
        return TrackingCategoriesController(self.global_configuration)

    @LazyProperty
    def users(self):
        return UsersController(self.global_configuration)

    @LazyProperty
    def misc(self):
        return MiscController(self.global_configuration)

    @property
    def oauth_2(self):
        return self.auth_managers['oauth2']

    def __init__(self, http_client_instance=None,
                 override_http_client_configuration=False, http_call_back=None,
                 timeout=60, max_retries=0, backoff_factor=2,
                 retry_statuses=None, retry_methods=None,
                 environment=Environment.PRODUCTION, o_auth_client_id=None,
                 o_auth_redirect_uri=None, o_auth_token=None,
                 implicit_auth_credentials=None, config=None):
        self.config = config or Configuration(
            http_client_instance=http_client_instance,
            override_http_client_configuration=override_http_client_configuration,
            http_call_back=http_call_back, timeout=timeout,
            max_retries=max_retries, backoff_factor=backoff_factor,
            retry_statuses=retry_statuses, retry_methods=retry_methods,
            environment=environment, o_auth_client_id=o_auth_client_id,
            o_auth_redirect_uri=o_auth_redirect_uri, o_auth_token=o_auth_token,
            implicit_auth_credentials=implicit_auth_credentials)

        self.global_configuration = GlobalConfiguration(self.config)\
            .global_errors(BaseController.global_errors())\
            .base_uri_executor(self.config.get_base_uri)\
            .user_agent(BaseController.user_agent(), BaseController.user_agent_parameters())

        self.auth_managers = {key: None for key in ['oauth2']}
        self.auth_managers['oauth2'] = OAuth2(
            self.config.implicit_auth_credentials, self.global_configuration)
        self.global_configuration = self.global_configuration.auth_managers(self.auth_managers)

