# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from xero.models.contact_group import ContactGroup


class AllowsYouToCreateAContactGroupRequest(object):

    """Implementation of the 'Allows you to create a contact group Request' model.

    Attributes:
        contact_groups (List[ContactGroup]): The model property of type
            List[ContactGroup].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "contact_groups": 'ContactGroups'
    }

    def __init__(self,
                 contact_groups=None):
        """Constructor for the AllowsYouToCreateAContactGroupRequest class"""

        # Initialize members of the class
        self.contact_groups = contact_groups 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        contact_groups = None
        if dictionary.get('ContactGroups') is not None:
            contact_groups = [ContactGroup.from_dictionary(x) for x in dictionary.get('ContactGroups')]
        # Return an object of this model
        return cls(contact_groups)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'contact_groups={self.contact_groups!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'contact_groups={self.contact_groups!s})')
