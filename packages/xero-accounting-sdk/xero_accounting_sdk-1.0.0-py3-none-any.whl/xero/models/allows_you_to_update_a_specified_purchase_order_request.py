# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from xero.models.purchase_order import PurchaseOrder


class AllowsYouToUpdateASpecifiedPurchaseOrderRequest(object):

    """Implementation of the 'Allows you to update a specified purchase order Request' model.

    Attributes:
        purchase_orders (List[PurchaseOrder]): The model property of type
            List[PurchaseOrder].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "purchase_orders": 'PurchaseOrders'
    }

    def __init__(self,
                 purchase_orders=None):
        """Constructor for the AllowsYouToUpdateASpecifiedPurchaseOrderRequest class"""

        # Initialize members of the class
        self.purchase_orders = purchase_orders 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        purchase_orders = None
        if dictionary.get('PurchaseOrders') is not None:
            purchase_orders = [PurchaseOrder.from_dictionary(x) for x in dictionary.get('PurchaseOrders')]
        # Return an object of this model
        return cls(purchase_orders)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'purchase_orders={self.purchase_orders!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'purchase_orders={self.purchase_orders!s})')
