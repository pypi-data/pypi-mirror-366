# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CISSetting(object):

    """Implementation of the 'CISSetting' model.

    Attributes:
        cis_enabled (bool): The model property of type bool.
        rate (float): The model property of type float.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cis_enabled": 'CISEnabled',
        "rate": 'Rate'
    }

    def __init__(self,
                 cis_enabled=None,
                 rate=None):
        """Constructor for the CISSetting class"""

        # Initialize members of the class
        self.cis_enabled = cis_enabled 
        self.rate = rate 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        cis_enabled = dictionary.get("CISEnabled") if "CISEnabled" in dictionary.keys() else None
        rate = dictionary.get("Rate") if dictionary.get("Rate") else None
        # Return an object of this model
        return cls(cis_enabled,
                   rate)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'cis_enabled={self.cis_enabled!r}, '
                f'rate={self.rate!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'cis_enabled={self.cis_enabled!s}, '
                f'rate={self.rate!s})')
