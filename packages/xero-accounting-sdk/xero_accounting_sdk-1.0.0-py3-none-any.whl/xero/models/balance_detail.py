# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class BalanceDetail(object):

    """Implementation of the 'BalanceDetail' model.

    Attributes:
        balance (str): The model property of type str.
        currency_code (str): The model property of type str.
        currency_rate (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "balance": 'Balance',
        "currency_code": 'CurrencyCode',
        "currency_rate": 'CurrencyRate'
    }

    def __init__(self,
                 balance=None,
                 currency_code=None,
                 currency_rate=None):
        """Constructor for the BalanceDetail class"""

        # Initialize members of the class
        self.balance = balance 
        self.currency_code = currency_code 
        self.currency_rate = currency_rate 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        balance = dictionary.get("Balance") if dictionary.get("Balance") else None
        currency_code = dictionary.get("CurrencyCode") if dictionary.get("CurrencyCode") else None
        currency_rate = dictionary.get("CurrencyRate") if dictionary.get("CurrencyRate") else None
        # Return an object of this model
        return cls(balance,
                   currency_code,
                   currency_rate)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'balance={self.balance!r}, '
                f'currency_code={self.currency_code!r}, '
                f'currency_rate={self.currency_rate!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'balance={self.balance!s}, '
                f'currency_code={self.currency_code!s}, '
                f'currency_rate={self.currency_rate!s})')
