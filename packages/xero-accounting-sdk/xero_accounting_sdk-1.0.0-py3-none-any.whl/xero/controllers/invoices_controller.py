# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from xero.exceptions.a_failed_request_due_to_validation_error_exception import AFailedRequestDueToValidationErrorException


class InvoicesController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(InvoicesController, self).__init__(config)

    def allows_you_to_retrieve_any_sales_invoices_or_purchase_bills(self,
                                                                    where,
                                                                    order,
                                                                    i_ds,
                                                                    invoice_numbers,
                                                                    contact_i_ds,
                                                                    statuses,
                                                                    page,
                                                                    include_archived,
                                                                    created_by_my_app,
                                                                    unitdp,
                                                                    if_modified_since,
                                                                    xero_tenant_id):
        """Does a GET request to /Invoices.

        Args:
            where (str): Filter by an any element
            order (str): Order by an any element
            i_ds (str): Filter by a comma-separated list of InvoicesIDs.
            invoice_numbers (str): Filter by a comma-separated list of
                InvoiceNumbers.
            contact_i_ds (str): Filter by a comma-separated list of ContactIDs.
            statuses (str): Filter by a comma-separated list Statuses. For
                faster response times we recommend using these explicit
                parameters instead of passing OR conditions into the Where
                filter.
            page (str): e.g. page=1 – Up to 100 invoices will be returned in a
                single API call with line items shown for each invoice
            include_archived (str): e.g. includeArchived=true - Contacts with
                a status of ARCHIVED will be included in the response
            created_by_my_app (str): When set to true you'll only retrieve
                Invoices created by your app
            unitdp (str): e.g. unitdp=4 – (Unit Decimal Places) You can opt in
                to use four decimal places for unit amounts
            if_modified_since (str): Only records created or modified since
                this timestamp will be returned
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('where')
                         .value(where))
            .query_param(Parameter()
                         .key('order')
                         .value(order))
            .query_param(Parameter()
                         .key('IDs')
                         .value(i_ds))
            .query_param(Parameter()
                         .key('InvoiceNumbers')
                         .value(invoice_numbers))
            .query_param(Parameter()
                         .key('ContactIDs')
                         .value(contact_i_ds))
            .query_param(Parameter()
                         .key('Statuses')
                         .value(statuses))
            .query_param(Parameter()
                         .key('page')
                         .value(page))
            .query_param(Parameter()
                         .key('includeArchived')
                         .value(include_archived))
            .query_param(Parameter()
                         .key('createdByMyApp')
                         .value(created_by_my_app))
            .query_param(Parameter()
                         .key('unitdp')
                         .value(unitdp))
            .header_param(Parameter()
                          .key('If-Modified-Since')
                          .value(if_modified_since))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_create_one_or_more_sales_invoices_or_purchase_bills(self,
                                                                          summarize_errors,
                                                                          unitdp,
                                                                          xero_tenant_id,
                                                                          body):
        """Does a PUT request to /Invoices.

        Args:
            summarize_errors (bool): If false return 200 OK and mix of
                successfully created objects and any with validation errors
            unitdp (str): e.g. unitdp=4 – (Unit Decimal Places) You can opt in
                to use four decimal places for unit amounts
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToCreateOneOrMoreSalesInvoicesOrPurchaseBillsRequest
                ): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('summarizeErrors')
                         .value(summarize_errors))
            .query_param(Parameter()
                         .key('unitdp')
                         .value(unitdp))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_update_or_create_one_or_more_sales_invoices_or_purchase_bills(self,
                                                                                    summarize_errors,
                                                                                    unitdp,
                                                                                    xero_tenant_id,
                                                                                    body):
        """Does a POST request to /Invoices.

        Args:
            summarize_errors (bool): If false return 200 OK and mix of
                successfully created objects and any with validation errors
            unitdp (str): e.g. unitdp=4 – (Unit Decimal Places) You can opt in
                to use four decimal places for unit amounts
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToUpdateORCreateOneOrMoreSalesInvoicesOrPurchaseBill
                sRequest): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices')
            .http_method(HttpMethodEnum.POST)
            .query_param(Parameter()
                         .key('summarizeErrors')
                         .value(summarize_errors))
            .query_param(Parameter()
                         .key('unitdp')
                         .value(unitdp))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()
