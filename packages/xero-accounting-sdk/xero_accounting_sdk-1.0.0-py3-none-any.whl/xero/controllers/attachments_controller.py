# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single


class AttachmentsController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(AttachmentsController, self).__init__(config)

    def allows_you_to_retrieve_attachments_for_accounts(self,
                                                        account_id,
                                                        xero_tenant_id):
        """Does a GET request to /Accounts/{AccountID}/Attachments.

        Args:
            account_id (str): (Required) Unique identifier for Account object
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Accounts/{AccountID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AccountID')
                            .value(account_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_specific_attachment_on_account(self,
                                                              account_id,
                                                              attachment_id,
                                                              content_type,
                                                              xero_tenant_id):
        """Does a GET request to /Accounts/{AccountID}/Attachments/{AttachmentID}.

        Args:
            account_id (str): (Required) Unique identifier for Account object
            attachment_id (str): (Required) Unique identifier for Attachment
                object
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Accounts/{AccountID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AccountID')
                            .value(account_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_any_attachments_to_bank_transactions(self,
                                                                    bank_transaction_id,
                                                                    xero_tenant_id):
        """Does a GET request to /BankTransactions/{BankTransactionID}/Attachments.

        Args:
            bank_transaction_id (str): (Required) Xero generated unique
                identifier for a bank transaction
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransactions/{BankTransactionID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransactionID')
                            .value(bank_transaction_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_a_specific_bank_transaction(self,
                                                                          bank_transaction_id,
                                                                          attachment_id,
                                                                          content_type,
                                                                          xero_tenant_id):
        """Does a GET request to /BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}.

        Args:
            bank_transaction_id (str): (Required) Xero generated unique
                identifier for a bank transaction
            attachment_id (str): (Required) Xero generated unique identifier
                for an attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransactionID')
                            .value(bank_transaction_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_from_bank_transfers(self,
                                                               bank_transfer_id,
                                                               xero_tenant_id):
        """Does a GET request to /BankTransfers/{BankTransferID}/Attachments.

        Args:
            bank_transfer_id (str): (Required) Xero generated unique
                identifier for a bank transfer
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransfers/{BankTransferID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransferID')
                            .value(bank_transfer_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_bank_transfer(self,
                                                            bank_transfer_id,
                                                            attachment_id,
                                                            content_type,
                                                            xero_tenant_id):
        """Does a GET request to /BankTransfers/{BankTransferID}/Attachments/{AttachmentID}.

        Args:
            bank_transfer_id (str): (Required) Xero generated unique
                identifier for a bank transfer
            attachment_id (str): (Required) Xero generated unique identifier
                for an Attachment to a bank transfer
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransfers/{BankTransferID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransferID')
                            .value(bank_transfer_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_add_and_update_contacts_in_a_xero_organisation(self,
                                                                              contact_id,
                                                                              xero_tenant_id):
        """Does a GET request to /Contacts/{ContactID}/Attachments.

        Args:
            contact_id (str): (Required) Unique identifier for a Contact
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts/{ContactID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ContactID')
                            .value(contact_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_contacts(self,
                                                       contact_id,
                                                       attachment_id,
                                                       content_type,
                                                       xero_tenant_id):
        """Does a GET request to /Contacts/{ContactID}/Attachments/{AttachmentID}.

        Args:
            contact_id (str): (Required) Unique identifier for a Contact
            attachment_id (str): (Required) Unique identifier for a Attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts/{ContactID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ContactID')
                            .value(contact_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_for_credit_notes(self,
                                                            credit_note_id,
                                                            xero_tenant_id):
        """Does a GET request to /CreditNotes/{CreditNoteID}/Attachments.

        Args:
            credit_note_id (str): (Required) Unique identifier for a Credit
                Note
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/CreditNotes/{CreditNoteID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('CreditNoteID')
                            .value(credit_note_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_credit_note(self,
                                                          credit_note_id,
                                                          attachment_id,
                                                          content_type,
                                                          xero_tenant_id):
        """Does a GET request to /CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}.

        Args:
            credit_note_id (str): (Required) Unique identifier for a Credit
                Note
            attachment_id (str): (Required) Unique identifier for a Attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('CreditNoteID')
                            .value(credit_note_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_invoices_or_purchase_bills(self,
                                                                         invoice_id,
                                                                         xero_tenant_id):
        """Does a GET request to /Invoices/{InvoiceID}/Attachments.

        Args:
            invoice_id (str): (Required) Unique identifier for an Invoice
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices/{InvoiceID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('InvoiceID')
                            .value(invoice_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_a_specified_attachment_on_invoices_or_purchase_bills_by_it_s_id(self,
                                                                                               invoice_id,
                                                                                               attachment_id,
                                                                                               content_type,
                                                                                               xero_tenant_id):
        """Does a GET request to /Invoices/{InvoiceID}/Attachments/{AttachmentID}.

        Args:
            invoice_id (str): (Required) Unique identifier for an Invoice
            attachment_id (str): (Required) Unique identifier for an Attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices/{InvoiceID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('InvoiceID')
                            .value(invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachment_for_manual_journals(self,
                                                              manual_journal_id,
                                                              xero_tenant_id):
        """Does a GET request to /ManualJournals/{ManualJournalID}/Attachments.

        Args:
            manual_journal_id (str): (Required) Unique identifier for a
                ManualJournal
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ManualJournals/{ManualJournalID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ManualJournalID')
                            .value(manual_journal_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_specified_attachment_on_manual_journals(self,
                                                                       manual_journal_id,
                                                                       attachment_id,
                                                                       content_type,
                                                                       xero_tenant_id):
        """Does a GET request to /ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}.

        Args:
            manual_journal_id (str): (Required) Unique identifier for a
                ManualJournal
            attachment_id (str): (Required) Unique identifier for a Attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ManualJournalID')
                            .value(manual_journal_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_for_purchase_orders(self,
                                                               purchase_order_id,
                                                               xero_tenant_id):
        """Does a GET request to /PurchaseOrders/{PurchaseOrderID}/Attachments.

        Args:
            purchase_order_id (str): (Required) Unique identifier for Purchase
                Orders object
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/PurchaseOrders/{PurchaseOrderID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('PurchaseOrderID')
                            .value(purchase_order_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_specific_attachment_on_purchase_order(self,
                                                                     purchase_order_id,
                                                                     attachment_id,
                                                                     content_type,
                                                                     xero_tenant_id):
        """Does a GET request to /PurchaseOrders/{PurchaseOrderID}/Attachments/{AttachmentID}.

        Args:
            purchase_order_id (str): (Required) Unique identifier for Purchase
                Order object
            attachment_id (str): (Required) Unique identifier for Attachment
                object
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/PurchaseOrders/{PurchaseOrderID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('PurchaseOrderID')
                            .value(purchase_order_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_for_quotes(self,
                                                      quote_id,
                                                      xero_tenant_id):
        """Does a GET request to /Quotes/{QuoteID}/Attachments.

        Args:
            quote_id (str): (Required) Unique identifier for Quote object
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes/{QuoteID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('QuoteID')
                            .value(quote_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_specific_attachment_on_quote(self,
                                                            quote_id,
                                                            attachment_id,
                                                            content_type,
                                                            xero_tenant_id):
        """Does a GET request to /Quotes/{QuoteID}/Attachments/{AttachmentID}.

        Args:
            quote_id (str): (Required) Unique identifier for Quote object
            attachment_id (str): (Required) Unique identifier for Attachment
                object
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes/{QuoteID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('QuoteID')
                            .value(quote_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_for_expense_claim_receipts(self,
                                                                      receipt_id,
                                                                      xero_tenant_id):
        """Does a GET request to /Receipts/{ReceiptID}/Attachments.

        Args:
            receipt_id (str): (Required) Unique identifier for a Receipt
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Receipts/{ReceiptID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ReceiptID')
                            .value(receipt_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_expense_claim_receipts_by_id(self,
                                                                           receipt_id,
                                                                           attachment_id,
                                                                           content_type,
                                                                           xero_tenant_id):
        """Does a GET request to /Receipts/{ReceiptID}/Attachments/{AttachmentID}.

        Args:
            receipt_id (str): (Required) Unique identifier for a Receipt
            attachment_id (str): (Required) Unique identifier for a Attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Receipts/{ReceiptID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ReceiptID')
                            .value(receipt_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_attachments_on_repeating_invoice(self,
                                                                repeating_invoice_id,
                                                                xero_tenant_id):
        """Does a GET request to /RepeatingInvoices/{RepeatingInvoiceID}/Attachments.

        Args:
            repeating_invoice_id (str): (Required) Unique identifier for a
                Repeating Invoice
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/RepeatingInvoices/{RepeatingInvoiceID}/Attachments')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('RepeatingInvoiceID')
                            .value(repeating_invoice_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_retrieve_a_specified_attachments_on_repeating_invoices(self,
                                                                             repeating_invoice_id,
                                                                             attachment_id,
                                                                             content_type,
                                                                             xero_tenant_id):
        """Does a GET request to /RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}.

        Args:
            repeating_invoice_id (str): (Required) Unique identifier for a
                Repeating Invoice
            attachment_id (str): (Required) Unique identifier for a Attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('RepeatingInvoiceID')
                            .value(repeating_invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('AttachmentID')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()
