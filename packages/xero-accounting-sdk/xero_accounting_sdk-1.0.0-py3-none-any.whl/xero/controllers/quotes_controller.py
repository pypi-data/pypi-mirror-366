# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from xero.exceptions.a_failed_request_due_to_validation_error_exception import AFailedRequestDueToValidationErrorException


class QuotesController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(QuotesController, self).__init__(config)

    def allows_you_to_retrieve_any_sales_quotes(self,
                                                date_from,
                                                date_to,
                                                expiry_date_from,
                                                expiry_date_to,
                                                contact_id,
                                                status,
                                                page,
                                                order,
                                                quote_number,
                                                if_modified_since,
                                                xero_tenant_id):
        """Does a GET request to /Quotes.

        Args:
            date_from (str): Filter for quotes after a particular date
            date_to (str): Filter for quotes before a particular date
            expiry_date_from (str): Filter for quotes expiring after a
                particular date
            expiry_date_to (str): Filter for quotes before a particular date
            contact_id (str): Filter for quotes belonging to a particular
                contact
            status (str): Filter for quotes of a particular Status
            page (str): e.g. page=1 â€“ Up to 100 Quotes will be returned in a
                single API call with line items shown for each quote
            order (str): Order by an any element
            quote_number (str): Filter by quote number (e.g. GET
                https://.../Quotes?QuoteNumber=QU-0001)
            if_modified_since (str): Only records created or modified since
                this timestamp will be returned
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('DateFrom')
                         .value(date_from))
            .query_param(Parameter()
                         .key('DateTo')
                         .value(date_to))
            .query_param(Parameter()
                         .key('ExpiryDateFrom')
                         .value(expiry_date_from))
            .query_param(Parameter()
                         .key('ExpiryDateTo')
                         .value(expiry_date_to))
            .query_param(Parameter()
                         .key('ContactID')
                         .value(contact_id))
            .query_param(Parameter()
                         .key('Status')
                         .value(status))
            .query_param(Parameter()
                         .key('page')
                         .value(page))
            .query_param(Parameter()
                         .key('order')
                         .value(order))
            .query_param(Parameter()
                         .key('QuoteNumber')
                         .value(quote_number))
            .header_param(Parameter()
                          .key('If-Modified-Since')
                          .value(if_modified_since))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_create_one_or_more_quotes(self,
                                                summarize_errors,
                                                xero_tenant_id,
                                                body):
        """Does a PUT request to /Quotes.

        Args:
            summarize_errors (bool): If false return 200 OK and mix of
                successfully created objects and any with validation errors
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToCreateOneOrMoreQuotesRequest): The request body
                parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('summarizeErrors')
                         .value(summarize_errors))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_update_or_create_one_or_more_quotes(self,
                                                          summarize_errors,
                                                          xero_tenant_id,
                                                          body):
        """Does a POST request to /Quotes.

        Args:
            summarize_errors (bool): If false return 200 OK and mix of
                successfully created objects and any with validation errors
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToUpdateORCreateOneOrMoreQuotesRequest): The
                request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes')
            .http_method(HttpMethodEnum.POST)
            .query_param(Parameter()
                         .key('summarizeErrors')
                         .value(summarize_errors))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()
