# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single


class BankTransferIDController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(BankTransferIDController, self).__init__(config)

    def allows_you_to_retrieve_any_bank_transfers(self,
                                                  bank_transfer_id,
                                                  xero_tenant_id):
        """Does a GET request to /BankTransfers/{BankTransferID}.

        Args:
            bank_transfer_id (str): (Required) Xero generated unique
                identifier for a bank transfer
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransfers/{BankTransferID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransferID')
                            .value(bank_transfer_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()
