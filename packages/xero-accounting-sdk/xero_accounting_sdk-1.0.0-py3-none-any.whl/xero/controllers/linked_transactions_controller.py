# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from xero.exceptions.a_failed_request_due_to_validation_error_exception import AFailedRequestDueToValidationErrorException


class LinkedTransactionsController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(LinkedTransactionsController, self).__init__(config)

    def retrieve_linked_transactions_billable_expenses(self,
                                                       page,
                                                       linked_transaction_id,
                                                       source_transaction_id,
                                                       contact_id,
                                                       status,
                                                       target_transaction_id,
                                                       xero_tenant_id):
        """Does a GET request to /LinkedTransactions.

        Args:
            page (str): Up to 100 linked transactions will be returned in a
                single API call. Use the page parameter to specify the page to
                be returned e.g. page=1.
            linked_transaction_id (str): The Xero identifier for an Linked
                Transaction
            source_transaction_id (str): Filter by the SourceTransactionID.
                Get the linked transactions created from a particular ACCPAY
                invoice
            contact_id (str): Filter by the ContactID. Get all the linked
                transactions that have been assigned to a particular customer.
            status (str): Filter by the combination of ContactID and Status.
                Get  the linked transactions associaed to a  customer and with
                a status
            target_transaction_id (str): Filter by the TargetTransactionID.
                Get all the linked transactions allocated to a particular
                ACCREC invoice
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/LinkedTransactions')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('page')
                         .value(page))
            .query_param(Parameter()
                         .key('LinkedTransactionID')
                         .value(linked_transaction_id))
            .query_param(Parameter()
                         .key('SourceTransactionID')
                         .value(source_transaction_id))
            .query_param(Parameter()
                         .key('ContactID')
                         .value(contact_id))
            .query_param(Parameter()
                         .key('Status')
                         .value(status))
            .query_param(Parameter()
                         .key('TargetTransactionID')
                         .value(target_transaction_id))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_create_linked_transactions_billable_expenses(self,
                                                                   xero_tenant_id,
                                                                   body):
        """Does a PUT request to /LinkedTransactions.

        Args:
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToCreateLinkedTransactionsBillableExpensesRequest):
                The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/LinkedTransactions')
            .http_method(HttpMethodEnum.PUT)
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()
