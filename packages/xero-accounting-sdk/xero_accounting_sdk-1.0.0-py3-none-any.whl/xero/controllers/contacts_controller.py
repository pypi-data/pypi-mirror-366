# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from xero.exceptions.api_exception import APIException
from xero.exceptions.a_failed_request_due_to_validation_error_exception import AFailedRequestDueToValidationErrorException


class ContactsController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(ContactsController, self).__init__(config)

    def allows_you_to_retrieve_all_contacts_in_a_xero_organisation(self,
                                                                   where,
                                                                   order,
                                                                   i_ds,
                                                                   page,
                                                                   include_archived,
                                                                   if_modified_since,
                                                                   xero_tenant_id):
        """Does a GET request to /Contacts.

        Args:
            where (str): Filter by an any element
            order (str): Order by an any element
            i_ds (str): Filter by a comma separated list of ContactIDs. Allows
                you to retrieve a specific set of contacts in a single call.
            page (str): e.g. page=1 - Up to 100 contacts will be returned in a
                single API call.
            include_archived (str): e.g. includeArchived=true - Contacts with
                a status of ARCHIVED will be included in the response
            if_modified_since (str): Only records created or modified since
                this timestamp will be returned
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('where')
                         .value(where))
            .query_param(Parameter()
                         .key('order')
                         .value(order))
            .query_param(Parameter()
                         .key('IDs')
                         .value(i_ds))
            .query_param(Parameter()
                         .key('page')
                         .value(page))
            .query_param(Parameter()
                         .key('includeArchived')
                         .value(include_archived))
            .header_param(Parameter()
                          .key('If-Modified-Since')
                          .value(if_modified_since))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_create_a_multiple_contacts_bulk_in_a_xero_organisation(self,
                                                                             summarize_errors,
                                                                             xero_tenant_id,
                                                                             body):
        """Does a PUT request to /Contacts.

        Args:
            summarize_errors (bool): If false return 200 OK and mix of
                successfully created objects and any with validation errors
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToCreateAMultipleContactsBulkInAXeroOrganisationRequ
                est): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('summarizeErrors')
                         .value(summarize_errors))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', APIException)
        ).execute()

    def allows_you_to_update_or_create_one_or_more_contacts_in_a_xero_organisation(self,
                                                                                   summarize_errors,
                                                                                   xero_tenant_id,
                                                                                   body):
        """Does a POST request to /Contacts.

        Args:
            summarize_errors (bool): If false return 200 OK and mix of
                successfully created objects and any with validation errors
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToUpdateORCreateOneOrMoreContactsInAXeroOrganisation
                Request): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts')
            .http_method(HttpMethodEnum.POST)
            .query_param(Parameter()
                         .key('summarizeErrors')
                         .value(summarize_errors))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', APIException)
        ).execute()

    def allows_you_to_retrieve_a_single_contact_by_contact_number_in_a_xero_organisation(self,
                                                                                         contact_number,
                                                                                         xero_tenant_id):
        """Does a GET request to /Contacts/{ContactNumber}.

        Args:
            contact_number (str): (Required) This field is read only on the
                Xero contact screen, used to identify contacts in external
                systems (max length = 50).
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts/{ContactNumber}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ContactNumber')
                            .value(contact_number)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_add_contacts_to_a_contact_group(self,
                                                      contact_group_id,
                                                      xero_tenant_id,
                                                      body):
        """Does a PUT request to /ContactGroups/{ContactGroupID}/Contacts.

        Args:
            contact_group_id (str): (Required) Unique identifier for a Contact
                Group
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (AllowsYouToAddContactsToAContactGroupRequest): The request
                body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ContactGroups/{ContactGroupID}/Contacts')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('ContactGroupID')
                            .value(contact_group_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_delete_all_contacts_from_a_contact_group(self,
                                                               contact_group_id,
                                                               xero_tenant_id):
        """Does a DELETE request to /ContactGroups/{ContactGroupID}/Contacts.

        Args:
            contact_group_id (str): (Required) Unique identifier for a Contact
                Group
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ContactGroups/{ContactGroupID}/Contacts')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ContactGroupID')
                            .value(contact_group_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def allows_you_to_delete_a_specific_contact_from_a_contact_group(self,
                                                                     contact_group_id,
                                                                     contact_id,
                                                                     xero_tenant_id):
        """Does a DELETE request to /ContactGroups/{ContactGroupID}/Contacts/{ContactID}.

        Args:
            contact_group_id (str): (Required) Unique identifier for a Contact
                Group
            contact_id (str): (Required) Unique identifier for a Contact
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ContactGroups/{ContactGroupID}/Contacts/{ContactID}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ContactGroupID')
                            .value(contact_group_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ContactID')
                            .value(contact_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()
