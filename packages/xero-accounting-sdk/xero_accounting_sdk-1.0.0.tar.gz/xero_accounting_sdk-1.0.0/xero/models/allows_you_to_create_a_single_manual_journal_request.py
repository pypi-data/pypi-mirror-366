# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from xero.models.manual_journal import ManualJournal


class AllowsYouToCreateASingleManualJournalRequest(object):

    """Implementation of the 'Allows you to create a single manual journal Request' model.

    Attributes:
        manual_journals (List[ManualJournal]): The model property of type
            List[ManualJournal].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "manual_journals": 'ManualJournals'
    }

    def __init__(self,
                 manual_journals=None):
        """Constructor for the AllowsYouToCreateASingleManualJournalRequest class"""

        # Initialize members of the class
        self.manual_journals = manual_journals 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        manual_journals = None
        if dictionary.get('ManualJournals') is not None:
            manual_journals = [ManualJournal.from_dictionary(x) for x in dictionary.get('ManualJournals')]
        # Return an object of this model
        return cls(manual_journals)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'manual_journals={self.manual_journals!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'manual_journals={self.manual_journals!s})')
