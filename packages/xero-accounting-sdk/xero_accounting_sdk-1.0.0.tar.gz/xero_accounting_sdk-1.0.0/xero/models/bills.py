# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from xero.models.day import Day
from xero.models.mtype import Type


class Bills(object):

    """Implementation of the 'Bills' model.

    Attributes:
        day (Day): The model property of type Day.
        mtype (Type): The model property of type Type.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "day": 'Day',
        "mtype": 'Type'
    }

    def __init__(self,
                 day=None,
                 mtype=None):
        """Constructor for the Bills class"""

        # Initialize members of the class
        self.day = day 
        self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        day = Day.from_dictionary(dictionary.get('Day')) if dictionary.get('Day') else None
        mtype = Type.from_dictionary(dictionary.get('Type')) if dictionary.get('Type') else None
        # Return an object of this model
        return cls(day,
                   mtype)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'day={self.day!r}, '
                f'mtype={self.mtype!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'day={self.day!s}, '
                f'mtype={self.mtype!s})')
