# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from xero.models.cis_setting import CISSetting


class SuccessReturnResponseOfTypeCISSettingsForASpecificContact(object):

    """Implementation of the 'Success - return response of type CISSettings for a specific Contact' model.

    Attributes:
        cis_settings (List[CISSetting]): The model property of type
            List[CISSetting].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cis_settings": 'CISSettings'
    }

    def __init__(self,
                 cis_settings=None):
        """Constructor for the SuccessReturnResponseOfTypeCISSettingsForASpecificContact class"""

        # Initialize members of the class
        self.cis_settings = cis_settings 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        cis_settings = None
        if dictionary.get('CISSettings') is not None:
            cis_settings = [CISSetting.from_dictionary(x) for x in dictionary.get('CISSettings')]
        # Return an object of this model
        return cls(cis_settings)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'cis_settings={self.cis_settings!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'cis_settings={self.cis_settings!s})')
