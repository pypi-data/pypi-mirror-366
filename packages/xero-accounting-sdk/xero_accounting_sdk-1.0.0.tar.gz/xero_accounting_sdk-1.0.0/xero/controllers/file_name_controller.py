# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from xero.exceptions.validation_error_some_data_was_incorrect_returns_response_of_type_error_exception import ValidationErrorSomeDataWasIncorrectReturnsResponseOfTypeErrorException
from xero.exceptions.a_failed_request_due_to_validation_error_exception import AFailedRequestDueToValidationErrorException


class FileNameController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(FileNameController, self).__init__(config)

    def allows_you_to_retrieve_attachment_on_account_by_filename(self,
                                                                 account_id,
                                                                 file_name,
                                                                 content_type,
                                                                 xero_tenant_id):
        """Does a GET request to /Accounts/{AccountID}/Attachments/{FileName}.

        Args:
            account_id (str): (Required) Unique identifier for Account object
            file_name (str): (Required) Name of the attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Accounts/{AccountID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AccountID')
                            .value(account_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_attachment_on_account_by_filename(self,
                                                               account_id,
                                                               file_name,
                                                               xero_tenant_id,
                                                               body):
        """Does a POST request to /Accounts/{AccountID}/Attachments/{FileName}.

        Args:
            account_id (str): (Required) Unique identifier for Account object
            file_name (str): (Required) Name of the attachment
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Accounts/{AccountID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AccountID')
                            .value(account_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', ValidationErrorSomeDataWasIncorrectReturnsResponseOfTypeErrorException)
        ).execute()

    def allows_you_to_create_attachment_on_account(self,
                                                   account_id,
                                                   file_name,
                                                   xero_tenant_id,
                                                   body):
        """Does a PUT request to /Accounts/{AccountID}/Attachments/{FileName}.

        Args:
            account_id (str): (Required) Unique identifier for Account object
            file_name (str): (Required) Name of the attachment
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Accounts/{AccountID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('AccountID')
                            .value(account_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachments_on_bank_transaction_by_filename(self,
                                                                           bank_transaction_id,
                                                                           file_name,
                                                                           content_type,
                                                                           xero_tenant_id):
        """Does a GET request to /BankTransactions/{BankTransactionID}/Attachments/{FileName}.

        Args:
            bank_transaction_id (str): (Required) Xero generated unique
                identifier for a bank transaction
            file_name (str): (Required) The name of the file being attached
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransactions/{BankTransactionID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransactionID')
                            .value(bank_transaction_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_an_attachment_on_bank_transaction_by_filename(self,
                                                                           bank_transaction_id,
                                                                           file_name,
                                                                           xero_tenant_id,
                                                                           body):
        """Does a POST request to /BankTransactions/{BankTransactionID}/Attachments/{FileName}.

        Args:
            bank_transaction_id (str): (Required) Xero generated unique
                identifier for a bank transaction
            file_name (str): (Required) The name of the file being attached
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransactions/{BankTransactionID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('BankTransactionID')
                            .value(bank_transaction_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_create_an_attachment_on_bank_transaction_by_filename(self,
                                                                           bank_transaction_id,
                                                                           file_name,
                                                                           xero_tenant_id,
                                                                           body):
        """Does a PUT request to /BankTransactions/{BankTransactionID}/Attachments/{FileName}.

        Args:
            bank_transaction_id (str): (Required) Xero generated unique
                identifier for a bank transaction
            file_name (str): (Required) The name of the file being attached
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransactions/{BankTransactionID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('BankTransactionID')
                            .value(bank_transaction_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachments_on_bank_transfer_by_file_name(self,
                                                                         bank_transfer_id,
                                                                         file_name,
                                                                         content_type,
                                                                         xero_tenant_id):
        """Does a GET request to /BankTransfers/{BankTransferID}/Attachments/{FileName}.

        Args:
            bank_transfer_id (str): (Required) Xero generated unique
                identifier for a bank transfer
            file_name (str): (Required) The name of the file being attached to
                a Bank Transfer
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransfers/{BankTransferID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('BankTransferID')
                            .value(bank_transfer_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def update_bank_transfer_attachment_by_file_name(self,
                                                     bank_transfer_id,
                                                     file_name,
                                                     xero_tenant_id,
                                                     body):
        """Does a POST request to /BankTransfers/{BankTransferID}/Attachments/{FileName}.

        Args:
            bank_transfer_id (str): (Required) Xero generated unique
                identifier for a bank transfer
            file_name (str): (Required) The name of the file being attached to
                a Bank Transfer
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransfers/{BankTransferID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('BankTransferID')
                            .value(bank_transfer_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def create_bank_transfer_attachment_by_file_name(self,
                                                     bank_transfer_id,
                                                     file_name,
                                                     xero_tenant_id,
                                                     body):
        """Does a PUT request to /BankTransfers/{BankTransferID}/Attachments/{FileName}.

        Args:
            bank_transfer_id (str): (Required) Xero generated unique
                identifier for a bank transfer
            file_name (str): (Required) The name of the file being attached to
                a Bank Transfer
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/BankTransfers/{BankTransferID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('BankTransferID')
                            .value(bank_transfer_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachments_on_contacts_by_file_name(self,
                                                                    contact_id,
                                                                    file_name,
                                                                    content_type,
                                                                    xero_tenant_id):
        """Does a GET request to /Contacts/{ContactID}/Attachments/{FileName}.

        Args:
            contact_id (str): (Required) Unique identifier for a Contact
            file_name (str): (Required) Name for the file you are attaching
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts/{ContactID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ContactID')
                            .value(contact_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def update_contact_attachment_by_file_name(self,
                                               contact_id,
                                               file_name,
                                               xero_tenant_id,
                                               body):
        """Does a POST request to /Contacts/{ContactID}/Attachments/{FileName}.

        Args:
            contact_id (str): (Required) Unique identifier for a Contact
            file_name (str): (Required) Name for the file you are attaching
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts/{ContactID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ContactID')
                            .value(contact_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def create_contact_attachment_by_file_name(self,
                                               contact_id,
                                               file_name,
                                               xero_tenant_id,
                                               body):
        """Does a PUT request to /Contacts/{ContactID}/Attachments/{FileName}.

        Args:
            contact_id (str): (Required) Unique identifier for a Contact
            file_name (str): (Required) Name for the file you are attaching
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Contacts/{ContactID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('ContactID')
                            .value(contact_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachments_on_credit_note_by_file_name(self,
                                                                       credit_note_id,
                                                                       file_name,
                                                                       content_type,
                                                                       xero_tenant_id):
        """Does a GET request to /CreditNotes/{CreditNoteID}/Attachments/{FileName}.

        Args:
            credit_note_id (str): (Required) Unique identifier for a Credit
                Note
            file_name (str): (Required) Name of the file you are attaching to
                Credit Note
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/CreditNotes/{CreditNoteID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('CreditNoteID')
                            .value(credit_note_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_attachments_on_credit_note_by_file_name(self,
                                                                     credit_note_id,
                                                                     file_name,
                                                                     xero_tenant_id,
                                                                     body):
        """Does a POST request to /CreditNotes/{CreditNoteID}/Attachments/{FileName}.

        Args:
            credit_note_id (str): (Required) Unique identifier for a Credit
                Note
            file_name (str): (Required) Name of the file you are attaching to
                Credit Note
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/CreditNotes/{CreditNoteID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('CreditNoteID')
                            .value(credit_note_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_create_attachments_on_credit_note_by_file_name(self,
                                                                     include_online,
                                                                     credit_note_id,
                                                                     file_name,
                                                                     xero_tenant_id,
                                                                     body):
        """Does a PUT request to /CreditNotes/{CreditNoteID}/Attachments/{FileName}.

        Args:
            include_online (bool): Allows an attachment to be seen by the end
                customer within their online invoice
            credit_note_id (str): (Required) Unique identifier for a Credit
                Note
            file_name (str): (Required) Name of the file you are attaching to
                Credit Note
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/CreditNotes/{CreditNoteID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('IncludeOnline')
                         .value(include_online))
            .template_param(Parameter()
                            .key('CreditNoteID')
                            .value(credit_note_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachment_on_invoices_or_purchase_bills_by_it_s_filename(self,
                                                                                         invoice_id,
                                                                                         file_name,
                                                                                         content_type,
                                                                                         xero_tenant_id):
        """Does a GET request to /Invoices/{InvoiceID}/Attachments/{FileName}.

        Args:
            invoice_id (str): (Required) Unique identifier for an Invoice
            file_name (str): (Required) Name of the file you are attaching
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices/{InvoiceID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('InvoiceID')
                            .value(invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_attachment_on_invoices_or_purchase_bills_by_it_s_filename(self,
                                                                                       invoice_id,
                                                                                       file_name,
                                                                                       xero_tenant_id,
                                                                                       body):
        """Does a POST request to /Invoices/{InvoiceID}/Attachments/{FileName}.

        Args:
            invoice_id (str): (Required) Unique identifier for an Invoice
            file_name (str): (Required) Name of the file you are attaching
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices/{InvoiceID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('InvoiceID')
                            .value(invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_create_an_attachment_on_invoices_or_purchase_bills_by_it_s_filename(self,
                                                                                          include_online,
                                                                                          invoice_id,
                                                                                          file_name,
                                                                                          xero_tenant_id,
                                                                                          body):
        """Does a PUT request to /Invoices/{InvoiceID}/Attachments/{FileName}.

        Args:
            include_online (bool): Allows an attachment to be seen by the end
                customer within their online invoice
            invoice_id (str): (Required) Unique identifier for an Invoice
            file_name (str): (Required) Name of the file you are attaching
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Invoices/{InvoiceID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('IncludeOnline')
                         .value(include_online))
            .template_param(Parameter()
                            .key('InvoiceID')
                            .value(invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_specified_attachment_on_manual_journal_by_file_name(self,
                                                                                   manual_journal_id,
                                                                                   file_name,
                                                                                   content_type,
                                                                                   xero_tenant_id):
        """Does a GET request to /ManualJournals/{ManualJournalID}/Attachments/{FileName}.

        Args:
            manual_journal_id (str): (Required) Unique identifier for a
                ManualJournal
            file_name (str): (Required) The name of the file being attached to
                a ManualJournal
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ManualJournals/{ManualJournalID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ManualJournalID')
                            .value(manual_journal_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_a_specified_attachment_on_manual_journal_by_file_name(self,
                                                                                   manual_journal_id,
                                                                                   file_name,
                                                                                   xero_tenant_id,
                                                                                   body):
        """Does a POST request to /ManualJournals/{ManualJournalID}/Attachments/{FileName}.

        Args:
            manual_journal_id (str): (Required) Unique identifier for a
                ManualJournal
            file_name (str): (Required) The name of the file being attached to
                a ManualJournal
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ManualJournals/{ManualJournalID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ManualJournalID')
                            .value(manual_journal_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_create_a_specified_attachment_on_manual_journal_by_file_name(self,
                                                                                   manual_journal_id,
                                                                                   file_name,
                                                                                   xero_tenant_id,
                                                                                   body):
        """Does a PUT request to /ManualJournals/{ManualJournalID}/Attachments/{FileName}.

        Args:
            manual_journal_id (str): (Required) Unique identifier for a
                ManualJournal
            file_name (str): (Required) The name of the file being attached to
                a ManualJournal
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/ManualJournals/{ManualJournalID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('ManualJournalID')
                            .value(manual_journal_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachment_on_a_purchase_order_by_filename(self,
                                                                          purchase_order_id,
                                                                          file_name,
                                                                          content_type,
                                                                          xero_tenant_id):
        """Does a GET request to /PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}.

        Args:
            purchase_order_id (str): (Required) Unique identifier for Purchase
                Order object
            file_name (str): (Required) Name of the attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('PurchaseOrderID')
                            .value(purchase_order_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_attachment_on_purchase_order_by_filename(self,
                                                                      purchase_order_id,
                                                                      file_name,
                                                                      xero_tenant_id,
                                                                      body):
        """Does a POST request to /PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}.

        Args:
            purchase_order_id (str): (Required) Unique identifier for Purchase
                Order object
            file_name (str): (Required) Name of the attachment
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('PurchaseOrderID')
                            .value(purchase_order_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', ValidationErrorSomeDataWasIncorrectReturnsResponseOfTypeErrorException)
        ).execute()

    def allows_you_to_create_attachment_on_purchase_order(self,
                                                          purchase_order_id,
                                                          file_name,
                                                          xero_tenant_id,
                                                          body):
        """Does a PUT request to /PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}.

        Args:
            purchase_order_id (str): (Required) Unique identifier for Purchase
                Order object
            file_name (str): (Required) Name of the attachment
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('PurchaseOrderID')
                            .value(purchase_order_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachment_on_quote_by_filename(self,
                                                               quote_id,
                                                               file_name,
                                                               content_type,
                                                               xero_tenant_id):
        """Does a GET request to /Quotes/{QuoteID}/Attachments/{FileName}.

        Args:
            quote_id (str): (Required) Unique identifier for Quote object
            file_name (str): (Required) Name of the attachment
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes/{QuoteID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('QuoteID')
                            .value(quote_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_attachment_on_quote_by_filename(self,
                                                             quote_id,
                                                             file_name,
                                                             xero_tenant_id,
                                                             body):
        """Does a POST request to /Quotes/{QuoteID}/Attachments/{FileName}.

        Args:
            quote_id (str): (Required) Unique identifier for Quote object
            file_name (str): (Required) Name of the attachment
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes/{QuoteID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('QuoteID')
                            .value(quote_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', ValidationErrorSomeDataWasIncorrectReturnsResponseOfTypeErrorException)
        ).execute()

    def allows_you_to_create_attachment_on_quote(self,
                                                 quote_id,
                                                 file_name,
                                                 xero_tenant_id,
                                                 body):
        """Does a PUT request to /Quotes/{QuoteID}/Attachments/{FileName}.

        Args:
            quote_id (str): (Required) Unique identifier for Quote object
            file_name (str): (Required) Name of the attachment
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Quotes/{QuoteID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('QuoteID')
                            .value(quote_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_attachments_on_expense_claim_receipts_by_file_name(self,
                                                                                  receipt_id,
                                                                                  file_name,
                                                                                  content_type,
                                                                                  xero_tenant_id):
        """Does a GET request to /Receipts/{ReceiptID}/Attachments/{FileName}.

        Args:
            receipt_id (str): (Required) Unique identifier for a Receipt
            file_name (str): (Required) The name of the file being attached to
                the Receipt
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Receipts/{ReceiptID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ReceiptID')
                            .value(receipt_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_attachment_on_expense_claim_receipts_by_file_name(self,
                                                                               receipt_id,
                                                                               file_name,
                                                                               xero_tenant_id,
                                                                               body):
        """Does a POST request to /Receipts/{ReceiptID}/Attachments/{FileName}.

        Args:
            receipt_id (str): (Required) Unique identifier for a Receipt
            file_name (str): (Required) The name of the file being attached to
                the Receipt
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Receipts/{ReceiptID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ReceiptID')
                            .value(receipt_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_create_attachment_on_expense_claim_receipts_by_file_name(self,
                                                                               receipt_id,
                                                                               file_name,
                                                                               xero_tenant_id,
                                                                               body):
        """Does a PUT request to /Receipts/{ReceiptID}/Attachments/{FileName}.

        Args:
            receipt_id (str): (Required) Unique identifier for a Receipt
            file_name (str): (Required) The name of the file being attached to
                the Receipt
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Receipts/{ReceiptID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('ReceiptID')
                            .value(receipt_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_retrieve_specified_attachment_on_repeating_invoices_by_file_name(self,
                                                                                       repeating_invoice_id,
                                                                                       file_name,
                                                                                       content_type,
                                                                                       xero_tenant_id):
        """Does a GET request to /RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}.

        Args:
            repeating_invoice_id (str): (Required) Unique identifier for a
                Repeating Invoice
            file_name (str): (Required) The name of the file being attached to
                a Repeating Invoice
            content_type (str): (Required) The mime type of the attachment
                file you are retrieving i.e image/jpg, application/pdf
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('RepeatingInvoiceID')
                            .value(repeating_invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('contentType')
                          .value(content_type))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_update_specified_attachment_on_repeating_invoices_by_file_name(self,
                                                                                     repeating_invoice_id,
                                                                                     file_name,
                                                                                     xero_tenant_id,
                                                                                     body):
        """Does a POST request to /RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}.

        Args:
            repeating_invoice_id (str): (Required) Unique identifier for a
                Repeating Invoice
            file_name (str): (Required) The name of the file being attached to
                a Repeating Invoice
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('RepeatingInvoiceID')
                            .value(repeating_invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()

    def allows_you_to_create_attachment_on_repeating_invoices_by_file_name(self,
                                                                           repeating_invoice_id,
                                                                           file_name,
                                                                           xero_tenant_id,
                                                                           body):
        """Does a PUT request to /RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}.

        Args:
            repeating_invoice_id (str): (Required) Unique identifier for a
                Repeating Invoice
            file_name (str): (Required) The name of the file being attached to
                a Repeating Invoice
            xero_tenant_id (str): (Required) Xero identifier for Tenant
            body (str): The request body parameter.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('RepeatingInvoiceID')
                            .value(repeating_invoice_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FileName')
                            .value(file_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/octet-stream'))
            .body_param(Parameter()
                        .value(body))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', AFailedRequestDueToValidationErrorException)
        ).execute()
