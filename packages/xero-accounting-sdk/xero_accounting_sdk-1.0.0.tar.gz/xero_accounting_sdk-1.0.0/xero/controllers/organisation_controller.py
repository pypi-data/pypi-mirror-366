# -*- coding: utf-8 -*-

"""
xero

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from xero.api_helper import APIHelper
from xero.configuration import Server
from xero.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from xero.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from xero.models.success_return_response_of_type_organisation_array_with_specified_organisation import SuccessReturnResponseOfTypeOrganisationArrayWithSpecifiedOrganisation


class OrganisationController(BaseController):

    """A Controller to access Endpoints in the xero API."""
    def __init__(self, config):
        super(OrganisationController, self).__init__(config)

    def allows_you_to_retrieve_organisation_details(self):
        """Does a GET request to /Organisation.

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Organisation')
            .http_method(HttpMethodEnum.GET)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def retrieve_a_list_of_the_key_actions_your_app_has_permission_to_perform_in_the_connected_organisation(self,
                                                                                                            xero_tenant_id):
        """Does a GET request to /Organisation/Actions.

        Args:
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            str: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Organisation/Actions')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def allows_you_to_verify_if_an_organisation_is_using_contruction_industry_scheme_you_can_retrieve_the_cis_settings_for_the_organistaion(self,
                                                                                                                                            organisation_id,
                                                                                                                                            xero_tenant_id):
        """Does a GET request to /Organisation/{OrganisationID}/CISSettings.

        Args:
            organisation_id (str): (Required) The unique Xero identifier for
                an organisation
            xero_tenant_id (str): (Required) Xero identifier for Tenant

        Returns:
            SuccessReturnResponseOfTypeOrganisationArrayWithSpecifiedOrganisati
                on: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Organisation/{OrganisationID}/CISSettings')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('OrganisationID')
                            .value(organisation_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('xero-tenant-id')
                          .value(xero_tenant_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('oauth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SuccessReturnResponseOfTypeOrganisationArrayWithSpecifiedOrganisation.from_dictionary)
        ).execute()
