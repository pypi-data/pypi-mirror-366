[build-system]
requires = [
    "setuptools>=42.0.0",
    "setuptools_scm[toml]>=3.4"
]

build-backend = "setuptools.build_meta"

[project]
name = "legend-daq2lh5"
description = "Convert digitizer data to LH5"
authors = [
    { name = "Jason Detwiler", email = "jasondet@uw.edu"},
]
maintainers = [
    { name = "The LEGEND collaboration" },
]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.9"
dependencies = [
    "dspeed>=1.3",
    "fcio>=0.7.9",
    "h5py>=3.2.0",
    "hdf5plugin",
    "legend-pydataobj>=1.6",
    "numpy>=1.21",
    "pyyaml",
    "tqdm>=4.27",
    "xmltodict"
]
dynamic = [
    "version",
]

[project.urls]
Homepage = "https://github.com/legend-exp/legend-daq2lh5"
"Bug Tracker" = "https://github.com/legend-exp/legend-daq2lh5/issues"
Discussions = "https://github.com/legend-exp/legend-daq2lh5/discussions"
Changelog = "https://github.com/legend-exp/legend-daq2lh5/releases"

[tool.setuptools_scm]
write_to = "src/daq2lh5/_version.py"

[project.optional-dependencies]
all = [
    "legend-daq2lh5[docs,test]",
]
docs = [
    "furo",
    "jupyter",
    "myst-parser",
    "nbsphinx",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-inline-tabs",
]
test = [
    "pre-commit",
    "pylegendtestdata",
    "pytest>=6.0",
    "pytest-cov",
]

[project.scripts]
legend-daq2lh5 = "daq2lh5.cli:daq2lh5_cli"
skim-orca-file = "daq2lh5.orca.skim_orca_file:skim_orca_file"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = [
    "LICENSE",
]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = [
    "src",
]
namespaces = false

[tool.setuptools.package-data]
"*" = [
    "*.json",
]

[tool.coverage]
run.source = ["daq2lh5"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.flake8]
extend-ignore = "E203, E501, D10"

[tool.codespell]
ignore-words-list = "nd,unparseable,compiletime,puls"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = "tests"

[tool.isort]
profile = "black"
multi_line_output = 3
