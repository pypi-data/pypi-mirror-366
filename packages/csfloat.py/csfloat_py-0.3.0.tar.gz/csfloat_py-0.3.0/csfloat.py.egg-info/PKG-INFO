Metadata-Version: 2.4
Name: csfloat.py
Version: 0.3.0
Summary: A Python wrapper for the csfloat API
Author: PaxxPatriot
License-Expression: MIT
Project-URL: Repository, https://github.com/PaxxPatriot/csfloat.py.git
Project-URL: Issues, https://github.com/PaxxPatriot/csfloat.py/issues
Keywords: csfloat,Counter-Strike 2
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Framework :: aiohttp
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp
Dynamic: license-file

# csfloat.py
An API wrapper for the CSFloat API written in Python.

Installing
----------

**Python 3.10 or higher is required**

To install the library, you can just run the following command:

```bash
# Linux/macOS
$ python3 -m pip install -U csfloat.py

# Windows
> py -3 -m pip install -U csfloat.py
```

To install the development version, do the following:
```bash
$ git clone https://github.com/PaxxPatriot/csfloat.py.git
$ cd csfloat.py
$ python3 -m pip install -U .
```

Quick Example
--------------

```Python
import asyncio

import csfloat

async def main():
  client = csfloat.Client()
  # Set your personal API key, which you can get from https://csfloat.com/profile -> Developers -> + New Key
  client.set_api_key(api_key="YOUR API KEY HERE")

  # Get all listed CS2 items on csfloat.com and print the name to the console
  listings = await client.fetch_all_listings()
  async for listing in listings:
    print(listing.item.name)

if __name__ == "__main__":
    asyncio.run(main())
```
