Metadata-Version: 2.4
Name: deepctl-cmd-mcp
Version: 0.1.10
Summary: MCP server command for deepctl to interact with Deepgram's AI assistant service
Author-email: Deepgram <devrel@deepgram.com>
License-Expression: MIT
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: deepctl-core>=0.1.10
Requires-Dist: mcp>=1.0.0
Requires-Dist: rich>=13.9.4
Requires-Dist: click>=8.1.7
Requires-Dist: pydantic>=2.10.1
Requires-Dist: httpx>=0.28.1
Provides-Extra: dev
Requires-Dist: pytest>=8.3.3; extra == "dev"
Requires-Dist: pytest-asyncio>=0.24.0; extra == "dev"
Requires-Dist: pytest-cov>=6.0.0; extra == "dev"
Requires-Dist: pytest-mock>=3.14.0; extra == "dev"
Requires-Dist: mypy>=1.13.0; extra == "dev"
Requires-Dist: ruff>=0.8.1; extra == "dev"

# deepctl-cmd-mcp

MCP (Model Context Protocol) server command for deepctl, enabling LLM clients to interact with Deepgram's AI assistant service.

## Features

- 🤖 Connect to Deepgram's Gnosis AI service via MCP
- 🔧 Multiple transport modes (stdio, SSE, streamable-http)
- 🔍 Intelligent question answering about Deepgram
- 📚 API specification lookup
- 💻 Code example generation
- 📖 Documentation search

## Installation

This package is installed as part of the deepctl CLI:

```bash
pip install deepgram-cli
```

Or install directly:

```bash
pip install deepctl-cmd-mcp
```

## Usage

Run the MCP server:

```bash
deepctl mcp
```

With options:

```bash
# Use SSE transport on custom port
deepctl mcp --transport sse --port 8080

# Enable debug logging
deepctl mcp --debug

# Use custom API key
deepctl mcp --api-key YOUR_API_KEY
```

## Known Limitations

### Signal Handling in STDIO Mode

When running in STDIO mode (default), you may need to press Ctrl+C twice to stop the server. This is a known limitation of the FastMCP framework. For production deployments, consider using SSE or HTTP transport modes which handle signals more gracefully.

## Transport Modes
