[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "deprecated-checker"
version = "1.0.6"
description = "Tool for checking deprecated dependencies in Python projects and suggesting alternatives"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Iulian Pavlov", email = "iulianpavlov@icloud.com"}
]
maintainers = [
    {name = "Iulian Pavlov", email = "iulianpavlov@icloud.com"}
]
keywords = ["dependencies", "deprecated", "security", "python", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "packaging>=23.0",
    "toml>=0.10.0",
    "schedule>=1.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
deprecated-checker = "utils.cli:app"

[project.urls]
Homepage = "https://github.com/julicq/is-deprecated-or-not"
Documentation = "https://github.com/julicq/is-deprecated-or-not#readme"
Repository = "https://github.com/julicq/is-deprecated-or-not"
Issues = "https://github.com/julicq/is-deprecated-or-not/issues"
Changelog = "https://github.com/julicq/is-deprecated-or-not/releases"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "utils*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["test_*.py"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short" 