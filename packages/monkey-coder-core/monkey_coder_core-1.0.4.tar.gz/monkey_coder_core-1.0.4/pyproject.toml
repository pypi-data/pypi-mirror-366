[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "monkey-coder-core"
version = "1.0.4"
authors = [{name = "GaryOcean428", email = "gary@ocean428.dev"}]
description = "Python orchestration core for Monkey Coder"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "openai>=1.3.0",
    "anthropic>=0.8.0",
    "google-genai>=0.3.0",
    "groq>=0.4.0",
    "aiohttp>=3.9.0",
    "qwen-agent>=0.0.10",
    # "dashscope>=1.24.0", # Removed - use qwen-agent instead
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "asyncio-mqtt>=0.13.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "anyio>=4.0.0",
    "psutil>=5.9.0",
    "pyotp>=2.8.0",
    "PyJWT[crypto]>=2.6.0",
    "sentry-sdk[fastapi]>=1.40.0",
    "PyYAML>=6.0.0",
    "asyncpg>=0.29.0",
    "aiomysql>=0.2.0",
    "aiosqlite>=0.19.0",
    "beautifulsoup4>=4.12.0",
    "html2text>=2020.1.16",
    "prometheus-client>=0.19.0",
    "stripe>=7.0.0",
    # Quantum routing dependencies
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "matplotlib>=3.5.0",
    # Security enhancements for httpOnly cookies
    "python-multipart>=0.0.6",
    "itsdangerous>=2.1.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "pre-commit>=3.4.0",
    "coverage>=7.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "httpx>=0.25.0",
    "coverage>=7.3.0",
    "anyio>=4.0.0",
]

[project.scripts]
monkey-coder = "monkey_coder.cli:main"

[project.urls]
Homepage = "https://github.com/GaryOcean428/monkey-coder"
Repository = "https://github.com/GaryOcean428/monkey-coder"
Documentation = "https://github.com/GaryOcean428/monkey-coder/docs"
"Bug Tracker" = "https://github.com/GaryOcean428/monkey-coder/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["monkey_coder*"]
exclude = ["tests*"]
namespaces = false

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["monkey_coder"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
