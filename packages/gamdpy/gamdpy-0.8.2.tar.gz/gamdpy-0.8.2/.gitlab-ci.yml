# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
# image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - env/

default:
  image: nvidia/cuda:12.2.2-devel-ubuntu22.04

.test_environment: &test_environment
    - apt update
    - apt -y install wget

    - mkdir -p ~/miniconda3
    - wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
    - bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
    - source ~/miniconda3/bin/activate

    - conda create -y --name "$PYTHON_VERSION" python=="$PYTHON_VERSION"
    - conda install -y -q --name "$PYTHON_VERSION" -c conda-forge --file requirements.txt
    - conda activate "$PYTHON_VERSION"

    - python3 -V

.test_runs: &test_runs
    # CPU tests need to be run independently because of some issue with gpu emulation
    - python3 -m pytest -m "not rumdpy_cpu" --doctest-modules --cov-report term --cov-report html --cov=rumdpy
    #- python3 tests/test_LJ_cpu.py
  # https://forum.gitlab.com/t/is-there-a-way-to-not-run-pipeline-when-merge-request-is-created/63039
  # https://stackoverflow.com/questions/70654510/how-to-run-pipeline-after-merge-request-approved-in-gitlab-ci

.test_config:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH
  artifacts:
    paths:
      - .coverage
  coverage: '/^TOTAL.+?(\d+\%)$/'

test:3.10:
  extends: .test_config
  variables:
    PYTHON_VERSION: "3.10"
  script:
    - *test_environment
    - *test_runs

test:3.11:
  extends: .test_config
  variables:
    PYTHON_VERSION: "3.11"
  script:
    - *test_environment
    - *test_runs

test:3.12:
  extends: .test_config
  variables:
    PYTHON_VERSION: "3.12"
  script:
    - *test_environment
    - *test_runs

