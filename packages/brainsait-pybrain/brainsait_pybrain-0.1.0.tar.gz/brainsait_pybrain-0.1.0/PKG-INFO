Metadata-Version: 2.4
Name: brainsait-pybrain
Version: 0.1.0
Summary: Unified Healthcare Intelligence Platform - AI-powered healthcare data harmonization and decision support
Author-email: "Dr. Fadil" <fadil@brainsait.com>, BrainSAIT Team <team@brainsait.com>
Maintainer-email: BrainSAIT Healthcare Innovation Lab <healthcare@brainsait.com>
License: Apache-2.0
Project-URL: Homepage, https://github.com/brainsait/pybrain
Project-URL: Documentation, https://pybrain.readthedocs.io
Project-URL: Repository, https://github.com/brainsait/pybrain
Project-URL: Issues, https://github.com/brainsait/pybrain/issues
Project-URL: Changelog, https://github.com/brainsait/pybrain/blob/main/CHANGELOG.md
Keywords: healthcare,ai,fhir,clinical-nlp,medical-ai,health-informatics,interoperability,decision-support,federated-learning,healthcare-analytics
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Healthcare Industry
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Classifier: Framework :: FastAPI
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: fhir.resources>=6.5.0
Requires-Dist: pandas>=1.5.0
Requires-Dist: numpy>=1.23.0
Requires-Dist: scikit-learn>=1.2.0
Requires-Dist: torch>=2.0.0
Requires-Dist: transformers>=4.30.0
Requires-Dist: spacy>=3.5.0
Requires-Dist: networkx>=3.0
Requires-Dist: pydantic>=2.0
Requires-Dist: httpx>=0.24.0
Requires-Dist: fastapi>=0.100.0
Requires-Dist: uvicorn>=0.22.0
Requires-Dist: redis>=4.5.0
Requires-Dist: sqlalchemy>=2.0
Requires-Dist: alembic>=1.11.0
Requires-Dist: cryptography>=41.0.0
Requires-Dist: python-jose[cryptography]>=3.3.0
Requires-Dist: prometheus-client>=0.17.0
Requires-Dist: opentelemetry-api>=1.18.0
Requires-Dist: opentelemetry-sdk>=1.18.0
Requires-Dist: python-multipart>=0.0.6
Requires-Dist: aiofiles>=23.1.0
Requires-Dist: orjson>=3.9.0
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: pytz>=2023.3
Requires-Dist: langchain>=0.0.200
Requires-Dist: chromadb>=0.4.0
Requires-Dist: sentence-transformers>=2.2.2
Provides-Extra: dev
Requires-Dist: pytest>=7.3.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: black>=23.3.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.3.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: pre-commit>=3.3.0; extra == "dev"
Requires-Dist: pytest-mock>=3.11.0; extra == "dev"
Requires-Dist: factory-boy>=3.2.1; extra == "dev"
Requires-Dist: faker>=18.11.0; extra == "dev"
Requires-Dist: responses>=0.23.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=7.0.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.2.0; extra == "docs"
Requires-Dist: sphinx-autodoc-typehints>=1.23.0; extra == "docs"
Requires-Dist: myst-parser>=2.0.0; extra == "docs"
Provides-Extra: ml
Requires-Dist: tensorflow>=2.13.0; extra == "ml"
Requires-Dist: xgboost>=1.7.0; extra == "ml"
Requires-Dist: lightgbm>=3.3.0; extra == "ml"
Requires-Dist: optuna>=3.2.0; extra == "ml"
Requires-Dist: mlflow>=2.4.0; extra == "ml"
Provides-Extra: nlp
Requires-Dist: scispacy>=0.5.2; extra == "nlp"
Requires-Dist: medspacy>=1.0.0; extra == "nlp"
Requires-Dist: nltk>=3.8.0; extra == "nlp"
Requires-Dist: gensim>=4.3.0; extra == "nlp"
Provides-Extra: cloud
Requires-Dist: boto3>=1.26.0; extra == "cloud"
Requires-Dist: azure-storage-blob>=12.16.0; extra == "cloud"
Requires-Dist: google-cloud-storage>=2.9.0; extra == "cloud"

# 🧠 PyBrain - Unified Healthcare Intelligence Platform

[![Python](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)
[![License](https://img.shields.io/badge/license-Apache%202.0-green.svg)](LICENSE)
[![PyPI](https://img.shields.io/pypi/v/pybrain.svg)](https://pypi.org/project/pybrain/)

PyBrain is the intelligence layer of the BrainSAIT Healthcare Unification Platform, providing AI-powered data harmonization, clinical NLP, and decision support for building next-generation healthcare systems.

## 🚀 Features

- **AI-Powered Data Harmonization**: Automatically maps and transforms data across different healthcare standards
- **Clinical NLP Engine**: Extracts structured data from unstructured clinical notes with medical language understanding
- **Federated Learning Framework**: Enables privacy-preserving AI model training across healthcare institutions
- **Real-time Decision Support**: Provides evidence-based recommendations using ensemble AI models
- **Predictive Analytics**: Forecasts patient outcomes, resource needs, and population health trends

## 📦 Installation

```bash
pip install pybrain
```

For development:
```bash
pip install pybrain[dev]
```

For all ML features:
```bash
pip install pybrain[ml,nlp]
```

## 🔧 Quick Start

### Basic Usage

```python
from pybrain import AIEngine, DataHarmonizer

# Initialize AI engine
ai = AIEngine()

# Extract entities from clinical text
clinical_note = "Patient presents with type 2 diabetes, prescribed metformin 500mg twice daily"
entities = ai.extract_clinical_entities(clinical_note)
print(entities)
# {'conditions': ['Diabetes'], 'medications': ['Metformin'], ...}

# Harmonize HL7v2 data to FHIR
harmonizer = DataHarmonizer()
hl7_data = {
    "PID": {
        "5": {"1": "Smith", "2": "John"},
        "7": "19800415",
        "8": "M"
    }
}
fhir_patient = harmonizer.harmonize_to_fhir(hl7_data, "hl7v2", "Patient")
```

### AI-Powered Risk Assessment

```python
from pybrain import AIEngine, DecisionEngine

ai = AIEngine()
decision_engine = DecisionEngine()

# Patient data
patient_data = {
    "age": 65,
    "conditions": ["diabetes", "hypertension"],
    "medications": ["metformin", "lisinopril"],
    "bmi": 28.5
}

# Predict clinical risks
risk_score = ai.predict_risk_score(patient_data)
print(f"Overall risk score: {risk_score:.2f}")

# Get clinical recommendations
recommendations = decision_engine.evaluate_patient(patient_data)
print("Clinical alerts:", recommendations["alerts"])
```

### Population Health Analytics

```python
from pybrain import AnalyticsEngine

analytics = AnalyticsEngine()

# Analyze population trends
population_data = [
    {"patient": {"id": "1", "birthDate": "1960-01-01"}, "observations": [...]},
    {"patient": {"id": "2", "birthDate": "1975-05-15"}, "observations": [...]}
]

metrics = analytics.calculate_population_metrics(population_data)
print(f"High-risk patients: {metrics['risk_distribution']['high']}")
print(f"Recommendations: {metrics['recommendations']}")
```

### CLI Usage

```bash
# Analyze clinical text
pybrain analyze -t "Patient has hypertension and diabetes"

# Harmonize data files
pybrain harmonize -i patient.json -f hl7v2 -r Patient -o patient_fhir.json

# Start API server
pybrain serve --port 8000
```

## 🏗️ Architecture

PyBrain is designed as a modular, scalable platform:

```
pybrain/
├── core/
│   ├── ai/          # AI models and engines
│   ├── harmonizer/  # Data harmonization
│   ├── analytics/   # Analytics engine
│   ├── decision/    # Decision support
│   └── knowledge/   # Knowledge graphs
├── connectors/      # External system connectors
├── models/          # Pre-trained models
└── utils/          # Utilities
```

## 🤝 Integration with PyHeart

PyBrain works seamlessly with PyHeart for complete healthcare system unification:

```python
from pybrain import AIEngine
from pyheart import FHIRClient

# Use PyHeart for data access
client = FHIRClient("https://fhir.example.com")
patient_data = client.get_patient("12345")

# Use PyBrain for intelligence
ai = AIEngine()
risk_score = ai.predict_risk_score(patient_data)

if risk_score > 0.8:
    print("High-risk patient - immediate intervention required")
```

## 🧪 Key Capabilities

### Clinical NLP
- Medical entity extraction
- Clinical concept normalization
- FHIR-compliant text processing
- Multi-language support

### AI-Powered Analytics
- Risk stratification
- Readmission prediction
- Fall risk assessment
- Medication adherence prediction

### Data Harmonization
- HL7v2 to FHIR transformation
- Custom EHR format mapping
- Terminology services integration
- Quality validation

### Decision Support
- Clinical rule engine
- Evidence-based recommendations
- Drug interaction checking
- Population health insights

## 📚 Documentation

Full documentation available at: https://pybrain.readthedocs.io

## 🧪 Testing

```bash
# Run tests
pytest

# With coverage
pytest --cov=pybrain
```

## 🤝 Contributing

We welcome contributions! Please see our Contributing Guide for details.

## 📄 License

PyBrain is licensed under the Apache License 2.0. See LICENSE for details.

## 🌟 Acknowledgments

Built with ❤️ by the BrainSAIT Healthcare Innovation Lab

Special thanks to the open-source healthcare community and all contributors.

---

**Together with PyHeart, PyBrain is building the future of intelligent healthcare.**
