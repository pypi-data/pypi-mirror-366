[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pocketflow-agui"
version = "0.1.0"
description = "PocketFlow的AGUI扩展版本 - 支持前端事件回调的轻量级工作流编排框架"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AGUI Team", email = "agui@example.com"}
]
keywords = ["workflow", "orchestration", "agui", "frontend", "events"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]

[project.urls]
Homepage = "https://github.com/yourusername/pocketflow-agui"
Repository = "https://github.com/yourusername/pocketflow-agui"
Issues = "https://github.com/yourusername/pocketflow-agui/issues"
Documentation = "https://github.com/yourusername/pocketflow-agui/blob/main/README.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["pocketflow*"]

[tool.setuptools.package-data]
pocketflow = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=pocketflow --cov-report=html --cov-report=term-missing"
asyncio_mode = "auto"
