name: MX-RMQ 测试

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.12]
        
    services:
      redis:
        image: redis:8
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: 安装uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: 设置Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
      
    - name: 安装依赖
      run: |
        uv sync
        
    - name: 运行代码风格检查
      run: |
        uv run ruff check src/ tests/
        
    - name: 运行类型检查
      run: |
        uv run mypy src/ --ignore-missing-imports
        
    - name: 运行P0核心功能测试
      run: |
        uv run pytest tests/unit/test_config.py tests/unit/test_message.py tests/unit/test_queue.py tests/unit/test_storage.py tests/unit/test_lifecycle.py tests/unit/test_shutdown.py -v --junitxml=p0-results.xml
        
    - name: 运行P1重要功能测试
      run: |
        uv run pytest tests/unit/test_monitoring.py tests/unit/test_consumer.py -v --junitxml=p1-results.xml
        
    - name: 运行完整单元测试 (带覆盖率)
      run: |
        uv run pytest tests/unit/ --cov=src/mx_rmq --cov-report=xml --cov-report=term --junitxml=unit-results.xml
        
    - name: 运行集成测试 (如果Redis可用)
      run: |
        uv run pytest tests/integration/test_basic_redis.py -v --junitxml=integration-results.xml
      continue-on-error: true
      
    - name: 上传覆盖率报告到Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: 发布测试结果
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: 测试结果
        path: '*-results.xml'
        reporter: java-junit
        
    - name: 发版前检查
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      run: |
        ./run_tests.sh --release
        
  # 安全检查作业
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 安装uv
      uses: astral-sh/setup-uv@v3
      
    - name: 安装依赖
      run: uv sync
      
    - name: 运行安全检查
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true
      
    - name: 上传安全检查结果
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: bandit-report.json
        
  # 构建检查作业  
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: 安装uv
      uses: astral-sh/setup-uv@v3
      
    - name: 构建包
      run: |
        uv build
        
    - name: 检查包完整性
      run: |
        uv run twine check dist/*
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/