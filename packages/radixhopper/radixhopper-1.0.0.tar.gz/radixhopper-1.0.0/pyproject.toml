[project]
name = "radixhopper"
dynamic = ["version"]
description = 'A Python library for efficient radix-based number system conversions, specializing in cyclic fractions handling, for bases 2 through 36.'
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
keywords = ["radix", "number system", "conversion", "cyclic fractions", "bases", "math", "mathematics"]
authors = [
  { name = "aarmn", email = "aarmn80@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "typeguard>=4.4.0",
  "typer>=0.15.2",
]

[project.urls]
Documentation = "https://github.com/aarmn/radixhopper#readme"
Issues = "https://github.com/aarmn/radixhopper/issues"
Source = "https://github.com/aarmn/radixhopper"

[project.scripts]
radixhopper = "radixhopper.cli:app"
# radixhopper-gui = "radixhopper.gui_runner:run_streamlit_app"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "ruff",
    "uv",
    "hatch",
]
cli = [
    "rich",
    "fire>=0.4.0",
]
# gui = [
#     "flet[all]>=0.27.0",
# ]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/radixhopper/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/radixhopper tests}"

[tool.coverage.run]
source_pkgs = ["radixhopper", "tests"]
branch = true
parallel = true
omit = [
  "src/radixhopper/__about__.py",
  "src/radixhopper/tooling.py",
]

[tool.coverage.paths]
radixhopper = ["src/radixhopper", "*/radixhopper/src/radixhopper"]
tests = ["tests", "*/radixhopper/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "pip>=25.0.1",
]

[tool.ruff]
# Match Black’s default line length
line-length = 90

# Select the rule codes you want; here we pick all Ruff’s defaults:
# E,G (pycodestyle + pydocstyle), F (pyflakes), B (flake8-bugbear),
# I (isort), Q (comprehension), etc.
select = ["E", "F", "W", "C90", "B", "I", "Q"]

# Enable auto-fix for supported rules (ruff --fix)
fix = true
