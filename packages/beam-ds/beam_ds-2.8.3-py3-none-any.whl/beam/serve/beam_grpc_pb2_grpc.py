# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from .beam_grpc_pb2 import *


class BeamServiceStub(object):
    """The Beam service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetVariable = channel.unary_unary(
                '/beam.BeamService/SetVariable',
                request_serializer=SetVariableRequest.SerializeToString,
                response_deserializer=SetVariableResponse.FromString,
                )
        self.GetVariable = channel.unary_unary(
                '/beam.BeamService/GetVariable',
                request_serializer=GetVariableRequest.SerializeToString,
                response_deserializer=GetVariableResponse.FromString,
                )
        self.QueryAlgorithm = channel.unary_unary(
                '/beam.BeamService/QueryAlgorithm',
                request_serializer=QueryAlgorithmRequest.SerializeToString,
                response_deserializer=QueryAlgorithmResponse.FromString,
                )
        self.GetInfo = channel.unary_unary(
                '/beam.BeamService/GetInfo',
                request_serializer=GetInfoRequest.SerializeToString,
                response_deserializer=GetInfoResponse.FromString,
                )


class BeamServiceServicer(object):
    """The Beam service definition.
    """

    def SetVariable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVariable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryAlgorithm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BeamServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVariable,
                    request_deserializer=SetVariableRequest.FromString,
                    response_serializer=SetVariableResponse.SerializeToString,
            ),
            'GetVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVariable,
                    request_deserializer=GetVariableRequest.FromString,
                    response_serializer=GetVariableResponse.SerializeToString,
            ),
            'QueryAlgorithm': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryAlgorithm,
                    request_deserializer=QueryAlgorithmRequest.FromString,
                    response_serializer=QueryAlgorithmResponse.SerializeToString,
            ),
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=GetInfoRequest.FromString,
                    response_serializer=GetInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'beam.BeamService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BeamService(object):
    """The Beam service definition.
    """

    @staticmethod
    def SetVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.BeamService/SetVariable',
            SetVariableRequest.SerializeToString,
            SetVariableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.BeamService/GetVariable',
            GetVariableRequest.SerializeToString,
            GetVariableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryAlgorithm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.BeamService/QueryAlgorithm',
            QueryAlgorithmRequest.SerializeToString,
            QueryAlgorithmResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.BeamService/GetInfo',
            GetInfoRequest.SerializeToString,
            GetInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
