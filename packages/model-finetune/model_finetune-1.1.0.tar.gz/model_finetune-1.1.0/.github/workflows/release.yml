name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的Git历史，确保标签可见
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine setuptools-scm
    
    - name: Verify version
      run: |
        echo "Git tag: ${{ github.ref_name }}"
        python -c "from setuptools_scm import get_version; print(f'Package version: {get_version()}')"
    
    - name: Build package
      run: python -m build
    
    - name: Check distribution
      run: python -m twine check dist/*
    
    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## 更新内容
          
          请查看 [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md) 了解详细更新内容。
          
          ## 安装
          
          ```bash
          pip install model-finetune==${{ github.ref_name }}
          ```
          
          ## 使用方法
          
          通过固定接口调用：
          
          ```bash
          echo '{"file_url": "data.zip", "measure_data": "measure.csv"}' | python interface.py
          ```
          
          或使用包内功能：
          
          ```python
          from model_finetune import process_interface_config
          
          config = {
              "file_url": "your_data.zip", 
              "measure_data": "your_measure.csv"
          }
          result = process_interface_config(config)
          ```
        draft: false
        prerelease: false