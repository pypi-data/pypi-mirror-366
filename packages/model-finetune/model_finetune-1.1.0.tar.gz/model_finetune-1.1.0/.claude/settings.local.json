{
  "permissions": {
    "allow": [
      "Bash(python test_header_filename.py:*)",
      "Bash(python3:*)",
      "Bash(rm:*)",
      "Bash(python test:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(uv pip install:*)",
      "Bash(find:*)",
      "Bash(python:*)",
      "Bash(uv pip:*)",
      "Bash(chmod:*)",
      "Bash(./activate_env.sh:*)",
      "Bash(uv init:*)",
      "Bash(uv sync:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(uv build)",
      "Bash(waterquality-processor:*)",
      "Bash(uv run:*)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_WATERQUALITY_PROCESSOR=1.0.0 uv run python run_tests.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_WATERQUALITY_PROCESSOR=1.0.0 python3 simple_test.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_WATERQUALITY_PROCESSOR=1.0.0 python3 demo.py)",
      "Bash(mv:*)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 python3 test_structure.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 python3 simple_test.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python test_structure.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run mft-interface --help)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv sync)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python test_java_interface.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 python3 test_interface_direct.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 python3 test_java_file_mode.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python test_java_file_mode.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python demo_java_simulation.py)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python -c \"from src.model_finetune.main import process_data; print(''process_data function found:'', callable(process_data))\")",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv pip install -e .)",
      "Bash(export UV_CACHE_DIR=/root/.cache/uv)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python -c \"from src.model_finetune import process_interface_config, __version__; print(f''包版本: {__version__}''); print(''核心功能导入正常'')\")",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python -m pytest tests/test_basic.py::TestCoreImports::test_author_info -v)",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python -c \"from model_finetune import __author__, __email__, __license__; print(f''作者: {__author__}''); print(f''邮箱: {__email__}''); print(f''许可: {__license__}'')\")",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git config:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(git commit:*)",
      "Bash(echo:*)",
      "Bash(ssh-keygen:*)",
      "Bash(cat:*)",
      "Bash(ssh:*)",
      "Bash(diff:*)",
      "Bash(touch:*)",
      "Bash(PYTHONPATH=src python3 -c \"from model_finetune.main import _get_debug_config; print(''导入成功'')\")",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python -c \"from model_finetune.main import _get_debug_config; print(''✅ Optional导入修复成功'')\")",
      "Bash(SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MODEL_FINETUNE=1.0.0 uv run python -c \"from model_finetune import process_interface_config; print('✅ 包导入成功')\")",
      "Bash(./model-finetune/.venv/bin/python -c \"import os; print(''Python工作目录:'', os.getcwd())\")",
      "Bash(.venv/bin/python:*)",
      "Bash(rg:*)",
      "Bash(git rm:*)",
      "Bash(uv add:*)",
      "Bash(git tag:*)",
      "Bash(git clean:*)",
      "Bash(gh release create:*)",
      "mcp__sequential-thinking__sequentialthinking"
    ],
    "deny": []
  }
}