from __future__ import annotations

__doc__: str
__version__: str

class ECTempInfo(dict[str, int | str]):
    sensor_name: str
    sensor_type: int
    temp: int
    temp_fan_off: int
    temp_fan_max: int

class ECChargeStateInfo(dict[str, int]):
    ac: int
    chg_voltage: int
    chg_current: int
    chg_input_current: int
    batt_state_of_charge: int

class ECController:
    def __init__(self) -> None: ...
    def hello(self) -> None: ...
    def is_on_ac(self) -> bool: ...
    def get_charge_state(self) -> ECChargeStateInfo: ...
    def get_num_fans(self) -> int: ...
    def enable_fan_auto_ctrl(self, fan_idx: int) -> None: ...
    def enable_all_fans_auto_ctrl(self) -> None: ...
    def set_fan_duty(self, percent: int, fan_idx: int) -> None: ...
    def set_all_fans_duty(self, percent: int) -> None: ...
    def set_fan_rpm(self, target_rpm: int, fan_idx: int) -> None: ...
    def set_all_fans_rpm(self, target_rpm: int) -> None: ...
    def get_fan_rpm(self, fan_idx: int) -> int: ...
    def get_all_fans_rpm(self) -> list[int]: ...
    def get_num_temp_sensors(self) -> int: ...
    def get_temp(self, sensor_idx: int) -> int: ...
    def get_all_temps(self) -> list[int]: ...
    def get_max_temp(self) -> int: ...
    def get_max_non_battery_temp(self) -> int: ...
    def get_temp_info(self, sensor_idx: int) -> ECTempInfo: ...
