[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cortex-memory-sdk"
version = "2.0.1"
description = "ðŸ§  The Smart Context Layer for Prompt Chains in LLMs - Enterprise-grade context-aware AI system with semantic understanding and self-evolving memory. Built by Vaishakh Vipin (https://github.com/VaishakhVipin) - Advanced context management for LLMs with Redis-backed semantic search, self-evolving patterns, and multi-provider support (Gemini, Claude, OpenAI)."
readme = "README.md"
license = "MIT"
authors = [
    {name = "Cortex Team", email = "obeliskacquisitions@gmail.com"}
]
maintainers = [
    {name = "Cortex Team", email = "vaishakh.vipin@gmail.com"}
]
keywords = [
    "ai", "memory", "context", "semantic", "embeddings", "llm", "prompt-chains",
    "machine-learning", "nlp", "artificial-intelligence", "context-aware"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "redis>=4.0.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "fastapi>=0.68.0",
    "uvicorn[standard]>=0.15.0",
    "pydantic>=1.8.0",
    "numpy>=1.21.0",
    "sentence-transformers>=2.2.0",
    "urllib3>=1.26.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=2.12.0",
    "black>=21.0.0",
    "isort>=5.9.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
]
api = [
    "fastapi>=0.68.0",
    "uvicorn[standard]>=0.15.0",
    "python-multipart>=0.0.5",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "sqlalchemy>=1.4.0",
    "alembic>=1.7.0",
    "psycopg2-binary>=2.9.0",
]
monitoring = [
    "prometheus-client>=0.12.0",
    "structlog>=21.1.0",
    "sentry-sdk[fastapi]>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/VaishakhVipin/cortex-memory"
Documentation = "https://github.com/VaishakhVipin/cortex-memory/tree/main/backend/docs/README.md"
Repository = "https://github.com/VaishakhVipin/cortex-memory"
"Bug Tracker" = "https://github.com/VaishakhVipin/cortex-memory/issues"
"Source Code" = "https://github.com/VaishakhVipin/cortex-memory"
"Download" = "https://pypi.org/project/cortex-memory/#files"
"Changelog" = "https://github.com/VaishakhVipin/cortex-memory/commits/main/"

[project.scripts]
cortex-memory = "cortex_memory.cli:main"

[project.entry-points."cortex_memory.plugins"]
default = "cortex_memory.core:DefaultPlugin"

[tool.setuptools.packages.find]
where = ["."]
include = ["cortex_memory*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
cortex_memory = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cortex_memory"]
known_third_party = ["redis", "requests", "fastapi", "numpy", "sentence_transformers"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "requests.*",
    "fastapi.*",
    "uvicorn.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["cortex_memory"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
policy = "strict" 