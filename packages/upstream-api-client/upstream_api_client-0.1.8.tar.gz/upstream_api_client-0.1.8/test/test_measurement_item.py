# coding: utf-8

"""
    Upstream Sensor Storage

    Sensor Storage for Upstream data

    The version of the OpenAPI document: 0.0.1
    Contact: wmobley@tacc.utexas.edu
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from upstream_client.models.measurement_item import MeasurementItem

class TestMeasurementItem(unittest.TestCase):
    """MeasurementItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeasurementItem:
        """Test MeasurementItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeasurementItem`
        """
        model = MeasurementItem()
        if include_optional:
            return MeasurementItem(
                id = 56,
                value = 1.337,
                geometry = upstream_client.models.point.Point(
                    bbox = null, 
                    type = 'Point', 
                    coordinates = null, ),
                collectiontime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sensorid = 56,
                variablename = '',
                variabletype = '',
                description = ''
            )
        else:
            return MeasurementItem(
                id = 56,
                value = 1.337,
                geometry = upstream_client.models.point.Point(
                    bbox = null, 
                    type = 'Point', 
                    coordinates = null, ),
                collectiontime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testMeasurementItem(self):
        """Test MeasurementItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
