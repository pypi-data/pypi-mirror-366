# coding: utf-8

"""
    Upstream Sensor Storage

    Sensor Storage for Upstream data

    The version of the OpenAPI document: 0.0.1
    Contact: wmobley@tacc.utexas.edu
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from upstream_client.models.py_tas_allocation import PyTASAllocation

class TestPyTASAllocation(unittest.TestCase):
    """PyTASAllocation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PyTASAllocation:
        """Test PyTASAllocation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PyTASAllocation`
        """
        model = PyTASAllocation()
        if include_optional:
            return PyTASAllocation(
                id = 56,
                start = '',
                end = '',
                status = '',
                justification = '',
                decision_summary = '',
                date_requested = '',
                date_reviewed = '',
                compute_requested = 56,
                compute_allocated = 56,
                storage_requested = 56,
                storage_allocated = 56,
                memory_requested = 56,
                memory_allocated = 56,
                resource_id = 56,
                resource = '',
                project_id = 56,
                project = '',
                requestor_id = 56,
                requestor = '',
                reviewer_id = 56,
                reviewer = None,
                compute_used = 1.337
            )
        else:
            return PyTASAllocation(
                id = 56,
                start = '',
                end = '',
                status = '',
                justification = '',
                decision_summary = '',
                date_requested = '',
                date_reviewed = '',
                compute_requested = 56,
                compute_allocated = 56,
                storage_requested = 56,
                storage_allocated = 56,
                memory_requested = 56,
                memory_allocated = 56,
                resource_id = 56,
                resource = '',
                project_id = 56,
                project = '',
                requestor_id = 56,
                requestor = '',
                reviewer_id = 56,
                reviewer = None,
                compute_used = 1.337,
        )
        """

    def testPyTASAllocation(self):
        """Test PyTASAllocation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
