# coding: utf-8

"""
    Upstream Sensor Storage

    Sensor Storage for Upstream data

    The version of the OpenAPI document: 0.0.1
    Contact: wmobley@tacc.utexas.edu
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from upstream_client.models.list_stations_response_pagination import ListStationsResponsePagination

class TestListStationsResponsePagination(unittest.TestCase):
    """ListStationsResponsePagination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListStationsResponsePagination:
        """Test ListStationsResponsePagination
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListStationsResponsePagination`
        """
        model = ListStationsResponsePagination()
        if include_optional:
            return ListStationsResponsePagination(
                items = [
                    upstream_client.models.station_item_with_summary.StationItemWithSummary(
                        id = 56, 
                        name = '', 
                        description = '', 
                        contact_name = '', 
                        contact_email = '', 
                        active = True, 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        geometry = null, 
                        sensor_count = 56, 
                        sensor_types = [
                            ''
                            ], 
                        sensor_variables = [
                            ''
                            ], )
                    ],
                total = 56,
                page = 56,
                size = 56,
                pages = 56
            )
        else:
            return ListStationsResponsePagination(
                items = [
                    upstream_client.models.station_item_with_summary.StationItemWithSummary(
                        id = 56, 
                        name = '', 
                        description = '', 
                        contact_name = '', 
                        contact_email = '', 
                        active = True, 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        geometry = null, 
                        sensor_count = 56, 
                        sensor_types = [
                            ''
                            ], 
                        sensor_variables = [
                            ''
                            ], )
                    ],
                total = 56,
                page = 56,
                size = 56,
                pages = 56,
        )
        """

    def testListStationsResponsePagination(self):
        """Test ListStationsResponsePagination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
