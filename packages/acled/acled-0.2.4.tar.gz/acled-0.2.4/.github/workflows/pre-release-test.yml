name: Pre-release Test

on:
  pull_request:
    branches: [main]
    paths:
      - 'acled/**'
      - 'pyproject.toml'
      - 'setup.py'
      - '.github/workflows/pre-release-test.yml'

jobs:
  test-build:
    name: Build and Test Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools_scm

      - name: Build package
        run: |
          python -m build
          echo "Built packages:"
          ls -la dist/

      - name: Check package with twine
        run: twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/

  test-local-installation:
    name: Test Local Installation
    needs: test-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10', '3.12']
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist/

      - name: Install from local wheel
        run: |
          python -m pip install --upgrade pip
          # Install the wheel file
          pip install dist/*.whl

      - name: Test import
        run: |
          python -c "import acled; print(f'Successfully imported acled version {acled.__version__}')"
          python -c "from acled import AcledClient; print('Successfully imported AcledClient')"

      - name: Run basic functionality test
        run: |
          python -c "
          import os
          from acled import AcledClient
          
          # Test that client can be instantiated (won't make actual API calls without credentials)
          try:
              client = AcledClient()
              print('AcledClient instantiation: PASSED')
          except Exception as e:
              if 'API key' in str(e) or 'ACLED_EMAIL' in str(e):
                  print('AcledClient instantiation with expected auth error: PASSED')
              else:
                  raise
          "

      - name: Test CLI installation
        run: |
          # Check if CLI is installed
          which acled || echo "CLI not found in PATH"
          acled --help || echo "CLI help command failed (expected without credentials)"

  # Only run TestPyPI publishing from main branch or tags, not PRs
  publish-testpypi:
    name: Publish to TestPyPI (Skipped on PRs)
    needs: test-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: testpypi
    permissions:
      id-token: write  # mandatory for trusted publishing

    steps:
      - name: Note about TestPyPI
        run: |
          echo "‚ÑπÔ∏è TestPyPI publishing is skipped for pull requests."
          echo "It only runs on pushes to the main branch."
          echo "This PR's changes will be tested locally only."

  status-check:
    name: Pre-release Test Status
    needs: [test-build, test-local-installation]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.test-build.result }}" != "success" ]]; then
            echo "‚ùå Build test failed"
            exit 1
          fi
          
          if [[ "${{ needs.test-local-installation.result }}" != "success" ]]; then
            echo "‚ùå Local installation test failed"
            exit 1
          fi
          
          echo "‚úÖ All pre-release tests passed!"
          echo ""
          echo "üìù Note: TestPyPI publishing is only done on the main branch."
          echo "    Once this PR is merged, the package will be published to TestPyPI."