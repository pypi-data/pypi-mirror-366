Metadata-Version: 2.4
Name: edc-adverse-event
Version: 1.1.2
Summary: Adverse event and death classes for clinicedc/edc projects
Keywords: django,clinicedc,edc,clinical trials,research,data management,esource,DIADS,adverse events
Author: Erik van Widenfelt, Jonathan Willitts
Author-email: Erik van Widenfelt <ew2789@gmail.com>, Jonathan Willitts <j.willitts@ucl.ac.uk>
License-Expression: GPL-3.0-or-later
License-File: LICENSE
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 5.2
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Maintainer: Erik van Widenfelt
Maintainer-email: Erik van Widenfelt <ew2789@gmail.com>
Requires-Python: >=3.12
Project-URL: Changelog, https://github.com/clinicedc/edc-adverse-event/blob/main/CHANGES
Project-URL: Documentation, https://github.com/clinicedc/edc-adverse-event/blob/main/README.rst
Project-URL: Homepage, https://github.com/clinicedc/edc-adverse-event
Project-URL: Repository, https://github.com/clinicedc/edc-adverse-event.git
Description-Content-Type: text/x-rst

|pypi| |actions| |codecov| |downloads|

edc-adverse-event
-----------------

Create an AE application
------------------------

Create an AE app that will house your AE concrete models, admin site, list data, and action items.

Adverse events models
---------------------

Model mixins exist for you to create the following concrete models in your AE app:

* AE Initial: The initial report of a adverse event
* AE Followup: 1 or more follow-ups to the initial AE report
* AE Special Interest
* AE SUSAR
* AE External Reviewer
* Death Report
* Death Report External Reviewer

TMG: Trial Management Group forms

* AE Tmg:

Settings
--------

These are the ``settings`` attributes you need to define for ``edc_adverse_event``:

.. code-block:: python

    # settings.py

    ...

    ADVERSE_EVENT_APP_LABEL="edc_adverse_event"  # replace with your AE app label
    ADVERSE_EVENT_ADMIN_SITE="edc_adverse_event_admin"  # replave with your AE app admin site name

    ...

Define a list_data.py
---------------------

There are a few FK fields on the AE models. You need to define a ``list_data.py`` that will be read to populate the FK list models.

The list model tables are:
* ``edc_adverse_event.aeclassification`` (See AeInitial)
* ``edc_adverse_event.saereason`` (See AeInitial)

.. code-block:: python

    # list_data.py

    list_data = {
        "edc_adverse_event.aeclassification": [
            (ANAEMIA, "Anaemia"),
            ("diarrhoea", "Diarrhoea"),
            (RENAL_IMPAIRMENT, "Renal impairment"),
            (OTHER, "Other"),
        ],
        "edc_adverse_event.saereason": [
            (NOT_APPLICABLE, "Not applicable"),
            (DEAD, "Death"),
            ("life_threatening", "Life-threatening"),
            ("significant_disability", "Significant disability"),
            (
                "in-patient_hospitalization",
                (
                    "In-patient hospitalization or prolongation "
                    "(17 or more days from study inclusion)"
                ),
            ),
            (
                "medically_important_event",
                "Medically important event (e.g. recurrence of symptoms not requiring admission, "
                "Hospital acquired pneumonia)",
            ),
        ],
    }

    preload_data = PreloadData(
        list_data=list_data, model_data={}, unique_field_data=None)


Register AE Action Items
------------------------

The AE action items are not registered by default. To register, in the root of your AE app add an ``action_items.py``:

.. code-block:: python

    # action_items.py

    from edc_adverse_event.action_items import AeInitialAction
    from edc_adverse_event.action_items import AeFollowupAction
    from edc_adverse_event.action_items import AeSusarAction
    from edc_adverse_event.action_items import AeTmgAction

    site_action_items.register(AeInitialAction)
    site_action_items.register(AeFollowupAction)
    site_action_items.register(AeTmgAction)
    site_action_items.register(AeSusarAction)



.. |pypi| image:: https://img.shields.io/pypi/v/edc-adverse-event.svg
    :target: https://pypi.python.org/pypi/edc-adverse-event

.. |actions| image:: https://github.com/clinicedc/edc-adverse-event/actions/workflows/build.yml/badge.svg
  :target: https://github.com/clinicedc/edc-adverse-event/actions/workflows/build.yml

.. |codecov| image:: https://codecov.io/gh/clinicedc/edc-adverse-event/branch/develop/graph/badge.svg
  :target: https://codecov.io/gh/clinicedc/edc-adverse-event

.. |downloads| image:: https://pepy.tech/badge/edc-adverse-event
   :target: https://pepy.tech/project/edc-adverse-event
