[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hashub-vector"
version = "1.0.0"
authors = [
    {name = "Hashub Team", email = "support@hashub.dev"},
]
description = "Python SDK for Hashub Vector API - High-quality multilingual text embeddings"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
keywords = [
    "embeddings", 
    "vector", 
    "nlp", 
    "ai", 
    "machine-learning", 
    "text-processing",
    "multilingual",
    "turkish",
    "semantic-search",
    "rag",
    "retrieval"
]
dependencies = [
    "httpx>=0.24.0",
    "typing-extensions>=4.0.0; python_version<'3.10'"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0"
]
examples = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "langchain>=0.1.0",
    "llama-index>=0.9.0"
]

[project.urls]
Homepage = "https://github.com/hasanbahadir/hashub-vector-sdk"
Documentation = "https://github.com/hasanbahadir/hashub-vector-sdk#readme"  
Repository = "https://github.com/hasanbahadir/hashub-vector-sdk"
Issues = "https://github.com/hasanbahadir/hashub-vector-sdk/issues"
Changelog = "https://github.com/hasanbahadir/hashub-vector-sdk/blob/master/CHANGELOG.md"

[tool.setuptools.packages.find]
include = ["hashub_vector*"]

[tool.setuptools.package-data]
hashub_vector = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["hashub_vector"]
known_third_party = ["httpx", "pytest"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["httpx.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov=hashub_vector --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["hashub_vector"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
