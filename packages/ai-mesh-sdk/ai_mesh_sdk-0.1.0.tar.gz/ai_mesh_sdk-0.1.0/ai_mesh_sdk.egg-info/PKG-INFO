Metadata-Version: 2.4
Name: ai-mesh-sdk
Version: 0.1.0
Summary: Python SDK for interacting with AI Mesh platform
Home-page: https://github.com/yourusername/ai-mesh-sdk
Author: Your Name
Author-email: your@email.com
Keywords: ai,agents,mesh,langchain,tools
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.25.0
Requires-Dist: langchain>=0.1.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


# AI Mesh SDK

A lightweight Python SDK for discovering and calling agents on the AI Mesh platform.

## Features
- List available agents on the mesh
- Call any agent by ID with custom inputs
- Convert all Mesh agents into LangChain-compatible tools
- Simple authentication with API tokens

## Installation

```bash
pip install ai-mesh-sdk
```

## Quick Start

```python
from mesh_sdk import MeshSDK

# Initialize with your API token
sdk = MeshSDK(token="your-api-token")

# List all available agents
agents = sdk.list_agents()
print(f"Found {len(agents)} agents")

# Call a specific agent
result = sdk.call_agent(
    agent_id="agent-123",
    inputs={"prompt": "Hello, world!"}
)
print(result)

# Use with LangChain
from langchain.agents import initialize_agent, AgentType

tools = sdk.to_langchain_tools()
agent = initialize_agent(
    tools=tools,
    llm=your_llm,
    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION
)
```

## API Reference

### MeshSDK(token)
Initialize the SDK with your API token.

**Parameters:**
- `token` (str): Your AI Mesh API token

### list_agents()
Returns a list of all available agents on the mesh.

**Returns:** List[Dict] - Agent metadata including ID, name, and description

### call_agent(agent_id, inputs)
Call a specific agent with provided inputs.

**Parameters:**
- `agent_id` (str): The unique identifier of the agent
- `inputs` (Dict): Input parameters for the agent

**Returns:** Dict - The agent's response

### to_langchain_tools()
Convert all mesh agents into LangChain Tool objects.

**Returns:** List[Tool] - LangChain-compatible tools

## License

MIT License
