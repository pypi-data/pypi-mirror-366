{%- from  'map.jinja' import env with context %}

{%- set family = grains['os_family'] |lower %}

{%- set scap = {} %}

{%- if family == 'windows' %}

    {#- Determine the scap guide to apply to the OS #}
    {%- set role_path_map = {
        '2' : '-ms',
        '3' : '-ms',
        '4' : '-dc',
        '5' : '-dc'
    } %}

    {%- set role = salt['cmd.shell'](
        'wmic ComputerSystem get DomainRole /format:list').split('=')[1] %}

    {%- set guide_map = salt.grains.filter_by({
        '2022Server' : {
            'os' : 'ws2022',
            'role' : ''
        },
        '2019Server' : {
            'os' : 'ws2019',
            'role' : ''
        },
        '2016Server' : {
            'os' : 'ws2016',
            'role' : ''
        },
        '2012ServerR2' : {
            'os' : 'ws2012',
            'role' : role_path_map[role]
        },
        '2008ServerR2' : {
            'os' : 'ws2008r2',
            'role' : role_path_map[role]
        },
        '8.1' : {
            'os' : 'win8',
            'role' : ''
        },
        '10' : {
            'os' : 'win10',
            'role' : ''
        },
        '11' : {
            'os' : 'win11',
            'role' : ''
        }
    }, grain='osrelease') %}

    {%- do scap.update({
        'output_dir': env.systemdrive ~ '\\Watchmaker\\SCAP',
        'local_dir': env.systemdrive ~ '\\Watchmaker\\SCAP\\Content',
        'guide_patterns': [
            'disa/stig-dotnet4',
            'disa/stig-ie' ~ env.ie_ver,
            'disa/stig-' ~ guide_map.os ~ guide_map.role
        ]
    }) %}

{%- elif family == 'redhat' %}

    {%- set content_matcher = salt.grains.filter_by({
        8: salt.grains.filter_by({
            'AlmaLinux': 'centos8',
            'CentOS': 'centos8',
            'CentOS Stream': 'centos8',
            'OEL': 'ol8',
            'RedHat': 'rhel8',
            'Rocky': 'rl8',
        }, grain='os'),
        9: salt.grains.filter_by({
            'AlmaLinux': 'almalinux9',
            'CentOS Stream': 'cs9',
            'OEL': 'ol9',
            'RedHat': 'rhel9',
            'Rocky': 'rl9',
        }, grain='os'),
        10: salt.grains.filter_by({
            'AlmaLinux': 'almalinux10',
            'CentOS Stream': 'cs10',
            'OEL': 'ol10',
            'RedHat': 'rhel10',
            'Rocky': 'rl10',
        }, grain='os'),
        2023: salt.grains.filter_by({
            'Amazon Linux': 'al2023',
        }, grain='os'),
    }, grain='osmajorrelease')%}

    {%- do scap.update(salt.grains.filter_by({
        '8': {
            'guide_patterns': [
                'disa/stig-el' ~ grains['osmajorrelease'] ~ '-scap_1-2'
            ],
            'oscap': {
                'xccdf': 'openscap/ssg-' ~ content_matcher ~ '-xccdf.xml',
                'cpe': 'openscap/ssg-rhel8-cpe-dictionary.xml',
                'profile': 'xccdf_org.ssgproject.content_profile_stig'
            },
            'scc_source': 'https://watchmaker.cloudarmor.io/repo/spawar/scc/scc-5.9.rhel8.x86_64.rpm'
        },
        '9': {
            'guide_patterns': [
                'disa/stig-el' ~ grains['osmajorrelease'] ~ '-scap_1-3'
            ],
            'oscap': {
                'xccdf': 'openscap/ssg-' ~ content_matcher ~ '-xccdf.xml',
                'cpe': 'openscap/ssg-rhel9-cpe-dictionary.xml',
                'profile': 'xccdf_org.ssgproject.content_profile_stig'
            },
            'scc_source': 'https://watchmaker.cloudarmor.io/repo/spawar/scc/scc-5.9.rhel9.x86_64.rpm'
        }
    }, grain='osmajorrelease')) %}

{%- endif %}
