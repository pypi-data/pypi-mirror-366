[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dora-utils"
version = "0.1.1"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    {name = "Preston Culbertson", email = "pdc79@cornell.edu"},
    {name = "Albert Li", email = "alberthli@caltech.edu"},
]

requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

dependencies = [
    "dacite",
    "dora-rs-cli",
    "hydra-core",
    "numpy",
    "pyarrow",
]

[tool.setuptools.packages.find]
include = ["dora_utils*"]

[project.optional-dependencies]
dev = [
  "pre-commit>=4.1.0",
]

[tool.ruff]
line-length = 120
lint.select = [
    "E",  # pycodestyle errors.
    "F",  # Pyflakes rules.
    "PLC",  # Pylint convention warnings.
    "PLE",  # Pylint errors.
    "PLR",  # Pylint refactor recommendations.
    "PLW",  # Pylint warnings.
    "I",  # Import sorting.
]
lint.ignore = [
    "E741",  # Ambiguous variable name. (l, O, or I)
    "E501",  # Line too long.
    "E721",  # Do not compare types, use `isinstance()`.
    "F722",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "F821",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "PLR2004",  # Magic value used in comparison.
    "PLR0915",  # Too many statements.
    "PLR0913",  # Too many arguments.
    "PLC0414",  # Import alias does not rename variable. (this is used for exporting names)
    "PLC1901",  # Use falsey strings.
    "PLR5501",  # Use `elif` instead of `else if`.
    "PLR0911",  # Too many return statements.
    "PLR0912",  # Too many branches.
    "PLW0603",  # Globa statement updates are discouraged.
    "PLW2901",  # For loop variable overwritten.
    "PLW0642",  # Reassigned self in instance method.
]
