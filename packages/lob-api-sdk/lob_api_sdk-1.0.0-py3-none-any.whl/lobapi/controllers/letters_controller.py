# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lobapi.api_helper import APIHelper
from lobapi.configuration import Server
from lobapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lobapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from lobapi.models.returns_a_letter_object import ReturnsALetterObject
from lobapi.models.a_dictionary_with_a_data_property_that_contains_an_array_of_up_to_limit_letters_each_entry_in_the_array_is_a_separate_letter_the_previous_and_next_page_of_letters_can_be_retrieved_by_calling_the_endpoint_contained_in_the_previous_url_and_next_url import ADictionaryWithADataPropertyThatContainsAnArrayOfUpToLimitLettersEachEntryInTheArrayIsASeparateLetterThePreviousAndNextPageOfLettersCanBeRetrievedByCallingTheEndpointContainedInThePreviousUrlAndNextUrl
from lobapi.models.returns_true_if_the_delete_was_successful import ReturnsTrueIfTheDeleteWasSuccessful
from lobapi.exceptions.error_exception import ErrorException


class LettersController(BaseController):

    """A Controller to access Endpoints in the lobapi API."""
    def __init__(self, config):
        super(LettersController, self).__init__(config)

    def creates_a_new_letter_object(self,
                                    idempotency_key,
                                    to,
                                    mfrom,
                                    color,
                                    file):
        """Does a POST request to /letters.

        Creates a new letter given information

        Args:
            idempotency_key (int): A string of no longer than 256 characters
                that uniquely identifies this resource. For more help
                integrating idempotency keys, refer to our [implementation
                guide](https://www.lob.com/guides#idempotent_request).
            to (str): (required) Must either be an address ID or an inline
                object with correct address parameters. If an object is used,
                an address will be created, corrected, and standardized for
                free whenever possible using our US Address Verification
                engine (if it is a US address), and returned back with an ID.
                Depending on your Print & Mail Edition, US addresses may also
                be run additionally through National Change of Address (NCOA).
                Non-US addresses will be standardized into uppercase only. If
                a US address used does not meet your accountâ€™s US Mail
                Strictness Setting, the request will fail. Read more here.
            mfrom (str): (required) Must either be an address ID or an inline
                object with correct address parameters. Must be a US address
                unless using a custom_envelope. All addresses will be
                standardized into uppercase without being modified by
                verification.
            color (bool): (required) Set this key to true if you would like to
                print in color. Set to false if you would like to print in
                black and white.
            file (str): (required) Accepts an HTML string of under 10,000
                characters, the ID of a saved HTML template, or a remote URL
                or a local upload of an HTML or PDF file. Remote URLs have a
                20 MB file size limit and must be downloaded within 40
                seconds. HTML files passed as remote URLs or local file upload
                have no character limit. HTML merge variables should not
                include delimiting whitespace. All pages of a supplied PDF
                file must be sized at 8.5"x11", while supplied HTML will be
                rendered and trimmed to as many 8.5"x11" pages as necessary.
                For design specifications, please see our PDF and HTML
                templates. If a custom_envelope is used, follow this template.
                For domestic destinations, the file limit is 60 pages
                single-sided or 120 pages double-sided. For international
                destinations, the file limit is 6 pages single-sided or 12
                pages double-sided. PDFs that surpass the file limit will
                error, while HTML that renders more pages than the file limit
                will be trimmed. See pricing for extra costs incurred. Any
                letters over 6 pages single-sided or 12 pages double-sided
                will be placed in a flat envelope instead of the standard
                double window envelope.

        Returns:
            ReturnsALetterObject: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/letters')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Idempotency-Key')
                          .value(idempotency_key))
            .form_param(Parameter()
                        .key('to')
                        .value(to))
            .form_param(Parameter()
                        .key('from')
                        .value(mfrom))
            .form_param(Parameter()
                        .key('color')
                        .value(color))
            .form_param(Parameter()
                        .key('file')
                        .value(file))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ReturnsALetterObject.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()

    def list_all_letters(self):
        """Does a GET request to /letters.

        Returns a list of your letters. The letters are returned sorted by
        creation date, with the most recently created letters appearing first.

        Returns:
            ADictionaryWithADataPropertyThatContainsAnArrayOfUpToLimitLettersEa
                chEntryInTheArrayIsASeparateLetterThePreviousAndNextPageOfLette
                rsCanBeRetrievedByCallingTheEndpointContainedInThePreviousUrlAn
                dNextUrl: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/letters')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ADictionaryWithADataPropertyThatContainsAnArrayOfUpToLimitLettersEachEntryInTheArrayIsASeparateLetterThePreviousAndNextPageOfLettersCanBeRetrievedByCallingTheEndpointContainedInThePreviousUrlAndNextUrl.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()

    def retrieve_letter_with_given_id(self,
                                      ltr_id):
        """Does a GET request to /letters/{ltr_id}.

        Retrieves the details of an existing letter. You need only supply the
        unique letter identifier that was returned upon letter creation.

        Args:
            ltr_id (str): (Required) id of the letter

        Returns:
            ReturnsALetterObject: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/letters/{ltr_id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ltr_id')
                            .value(ltr_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ReturnsALetterObject.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()

    def cancel_a_letter(self,
                        ltr_id):
        """Does a DELETE request to /letters/{ltr_id}.

        Completely removes a letter from production. This can only be done if
        the letter has a `send_date` and the `send_date` has not yet passed.
        If the letter is successfully canceled, you will not be charged for
        it. Read more on [cancellation
        windows](https://docs.lob.com/#cancellation) and
        [scheduling](https://docs.lob.com/#scheduled). Scheduling and
        cancellation is a premium feature. Upgrade to the appropriate Print &
        Mail Edition to gain access.

        Args:
            ltr_id (str): (Required) id of the letter

        Returns:
            ReturnsTrueIfTheDeleteWasSuccessful: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/letters/{ltr_id}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ltr_id')
                            .value(ltr_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ReturnsTrueIfTheDeleteWasSuccessful.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()
