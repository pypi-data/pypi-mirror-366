# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lobapi.api_helper import APIHelper
from lobapi.configuration import Server
from lobapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lobapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single


class ReverseGeocodeController(BaseController):

    """A Controller to access Endpoints in the lobapi API."""
    def __init__(self, config):
        super(ReverseGeocodeController, self).__init__(config)

    def lookup(self,
               size,
               latitude,
               longitude):
        """Does a POST request to /us_reverse_geocode_lookups.

        Args:
            size (int): Determines the number of locations returned. Possible
                values are between 1 and 50 and any number higher will be
                rounded down to 50. Default size is a list of 5 reverse
                geocoded locations.
            latitude (float): A positive or negative decimal indicating the
                geographic latitude of the address, specifying the
                north-to-south position of a location. This should be input
                with longitude to pinpoint locations on a map.
            longitude (float): A positive or negative decimal indicating the
                geographic longitude of the address, specifying the
                north-to-south position of a location. This should be input
                with latitude to pinpoint locations on a map.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/us_reverse_geocode_lookups')
            .http_method(HttpMethodEnum.POST)
            .query_param(Parameter()
                         .key('size')
                         .value(size))
            .form_param(Parameter()
                        .key('latitude')
                        .value(latitude))
            .form_param(Parameter()
                        .key('longitude')
                        .value(longitude))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).execute()
