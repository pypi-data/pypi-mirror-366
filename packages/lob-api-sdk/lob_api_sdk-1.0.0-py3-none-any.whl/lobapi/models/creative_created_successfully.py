# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CreativeCreatedSuccessfully(object):

    """Implementation of the 'Creative created successfully' model.

    Attributes:
        id (str): The model property of type str.
        account_id (str): The model property of type str.
        description (str): The model property of type str.
        mfrom (str): The model property of type str.
        resource_type (str): The model property of type str.
        details (Any): The model property of type Any.
        metadata (Any): The model property of type Any.
        template_preview_urls (Any): The model property of type Any.
        template_previews (List[str]): The model property of type List[str].
        campaigns (List[str]): The model property of type List[str].
        date_created (str): The model property of type str.
        date_modified (str): The model property of type str.
        object (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "account_id": 'account_id',
        "description": 'description',
        "mfrom": 'from',
        "resource_type": 'resource_type',
        "details": 'details',
        "metadata": 'metadata',
        "template_preview_urls": 'template_preview_urls',
        "template_previews": 'template_previews',
        "campaigns": 'campaigns',
        "date_created": 'date_created',
        "date_modified": 'date_modified',
        "object": 'object'
    }

    def __init__(self,
                 id=None,
                 account_id=None,
                 description=None,
                 mfrom=None,
                 resource_type=None,
                 details=None,
                 metadata=None,
                 template_preview_urls=None,
                 template_previews=None,
                 campaigns=None,
                 date_created=None,
                 date_modified=None,
                 object=None):
        """Constructor for the CreativeCreatedSuccessfully class"""

        # Initialize members of the class
        self.id = id 
        self.account_id = account_id 
        self.description = description 
        self.mfrom = mfrom 
        self.resource_type = resource_type 
        self.details = details 
        self.metadata = metadata 
        self.template_preview_urls = template_preview_urls 
        self.template_previews = template_previews 
        self.campaigns = campaigns 
        self.date_created = date_created 
        self.date_modified = date_modified 
        self.object = object 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        account_id = dictionary.get("account_id") if dictionary.get("account_id") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        mfrom = dictionary.get("from") if dictionary.get("from") else None
        resource_type = dictionary.get("resource_type") if dictionary.get("resource_type") else None
        details = dictionary.get("details") if dictionary.get("details") else None
        metadata = dictionary.get("metadata") if dictionary.get("metadata") else None
        template_preview_urls = dictionary.get("template_preview_urls") if dictionary.get("template_preview_urls") else None
        template_previews = dictionary.get("template_previews") if dictionary.get("template_previews") else None
        campaigns = dictionary.get("campaigns") if dictionary.get("campaigns") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_modified = dictionary.get("date_modified") if dictionary.get("date_modified") else None
        object = dictionary.get("object") if dictionary.get("object") else None
        # Return an object of this model
        return cls(id,
                   account_id,
                   description,
                   mfrom,
                   resource_type,
                   details,
                   metadata,
                   template_preview_urls,
                   template_previews,
                   campaigns,
                   date_created,
                   date_modified,
                   object)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'account_id={self.account_id!r}, '
                f'description={self.description!r}, '
                f'mfrom={self.mfrom!r}, '
                f'resource_type={self.resource_type!r}, '
                f'details={self.details!r}, '
                f'metadata={self.metadata!r}, '
                f'template_preview_urls={self.template_preview_urls!r}, '
                f'template_previews={self.template_previews!r}, '
                f'campaigns={self.campaigns!r}, '
                f'date_created={self.date_created!r}, '
                f'date_modified={self.date_modified!r}, '
                f'object={self.object!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'account_id={self.account_id!s}, '
                f'description={self.description!s}, '
                f'mfrom={self.mfrom!s}, '
                f'resource_type={self.resource_type!s}, '
                f'details={self.details!s}, '
                f'metadata={self.metadata!s}, '
                f'template_preview_urls={self.template_preview_urls!s}, '
                f'template_previews={self.template_previews!s}, '
                f'campaigns={self.campaigns!s}, '
                f'date_created={self.date_created!s}, '
                f'date_modified={self.date_modified!s}, '
                f'object={self.object!s})')
