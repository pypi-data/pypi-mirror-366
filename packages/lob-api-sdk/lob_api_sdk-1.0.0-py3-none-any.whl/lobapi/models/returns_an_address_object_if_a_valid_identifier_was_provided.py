# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ReturnsAnAddressObjectIfAValidIdentifierWasProvided(object):

    """Implementation of the 'Returns an address object if a valid identifier was provided.' model.

    Attributes:
        address_city (str): The model property of type str.
        address_country (str): The model property of type str.
        address_line_1 (str): The model property of type str.
        address_state (str): The model property of type str.
        address_zip (str): The model property of type str.
        date_created (str): The model property of type str.
        date_modified (str): The model property of type str.
        id (str): The model property of type str.
        object (str): The model property of type str.
        address_line_2 (str): The model property of type str.
        deleted (bool): The model property of type bool.
        recipient_moved (bool): The model property of type bool.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "address_city": 'address_city',
        "address_country": 'address_country',
        "address_line_1": 'address_line1',
        "address_state": 'address_state',
        "address_zip": 'address_zip',
        "date_created": 'date_created',
        "date_modified": 'date_modified',
        "id": 'id',
        "object": 'object',
        "address_line_2": 'address_line2',
        "deleted": 'deleted',
        "recipient_moved": 'recipient_moved'
    }

    def __init__(self,
                 address_city=None,
                 address_country=None,
                 address_line_1=None,
                 address_state=None,
                 address_zip=None,
                 date_created=None,
                 date_modified=None,
                 id=None,
                 object=None,
                 address_line_2=None,
                 deleted=None,
                 recipient_moved=None):
        """Constructor for the ReturnsAnAddressObjectIfAValidIdentifierWasProvided class"""

        # Initialize members of the class
        self.address_city = address_city 
        self.address_country = address_country 
        self.address_line_1 = address_line_1 
        self.address_state = address_state 
        self.address_zip = address_zip 
        self.date_created = date_created 
        self.date_modified = date_modified 
        self.id = id 
        self.object = object 
        self.address_line_2 = address_line_2 
        self.deleted = deleted 
        self.recipient_moved = recipient_moved 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        address_city = dictionary.get("address_city") if dictionary.get("address_city") else None
        address_country = dictionary.get("address_country") if dictionary.get("address_country") else None
        address_line_1 = dictionary.get("address_line1") if dictionary.get("address_line1") else None
        address_state = dictionary.get("address_state") if dictionary.get("address_state") else None
        address_zip = dictionary.get("address_zip") if dictionary.get("address_zip") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_modified = dictionary.get("date_modified") if dictionary.get("date_modified") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        object = dictionary.get("object") if dictionary.get("object") else None
        address_line_2 = dictionary.get("address_line2") if dictionary.get("address_line2") else None
        deleted = dictionary.get("deleted") if "deleted" in dictionary.keys() else None
        recipient_moved = dictionary.get("recipient_moved") if "recipient_moved" in dictionary.keys() else None
        # Return an object of this model
        return cls(address_city,
                   address_country,
                   address_line_1,
                   address_state,
                   address_zip,
                   date_created,
                   date_modified,
                   id,
                   object,
                   address_line_2,
                   deleted,
                   recipient_moved)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'address_city={self.address_city!r}, '
                f'address_country={self.address_country!r}, '
                f'address_line_1={self.address_line_1!r}, '
                f'address_state={self.address_state!r}, '
                f'address_zip={self.address_zip!r}, '
                f'date_created={self.date_created!r}, '
                f'date_modified={self.date_modified!r}, '
                f'id={self.id!r}, '
                f'object={self.object!r}, '
                f'address_line_2={self.address_line_2!r}, '
                f'deleted={self.deleted!r}, '
                f'recipient_moved={self.recipient_moved!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'address_city={self.address_city!s}, '
                f'address_country={self.address_country!s}, '
                f'address_line_1={self.address_line_1!s}, '
                f'address_state={self.address_state!s}, '
                f'address_zip={self.address_zip!s}, '
                f'date_created={self.date_created!s}, '
                f'date_modified={self.date_modified!s}, '
                f'id={self.id!s}, '
                f'object={self.object!s}, '
                f'address_line_2={self.address_line_2!s}, '
                f'deleted={self.deleted!s}, '
                f'recipient_moved={self.recipient_moved!s})')
