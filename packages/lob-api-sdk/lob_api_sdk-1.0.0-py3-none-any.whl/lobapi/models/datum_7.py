# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lobapi.models.merge_variables_4 import MergeVariables4
from lobapi.models.thumbnail import Thumbnail
from lobapi.models.to_3 import To3


class Datum7(object):

    """Implementation of the 'Datum7' model.

    Attributes:
        id (str): The model property of type str.
        description (str): The model property of type str.
        metadata (Any): The model property of type Any.
        to (To3): The model property of type To3.
        url (str): The model property of type str.
        outside_template_id (str): The model property of type str.
        inside_template_id (str): The model property of type str.
        inside_template_version_id (str): The model property of type str.
        outside_template_version_id (str): The model property of type str.
        carrier (str): The model property of type str.
        tracking_events (List[str]): The model property of type List[str].
        thumbnails (List[Thumbnail]): The model property of type
            List[Thumbnail].
        merge_variables (MergeVariables4): The model property of type
            MergeVariables4.
        size (str): The model property of type str.
        mail_type (str): The model property of type str.
        expected_delivery_date (str): The model property of type str.
        date_created (str): The model property of type str.
        date_modified (str): The model property of type str.
        send_date (str): The model property of type str.
        deleted (bool): The model property of type bool.
        billing_group_id (str): The model property of type str.
        object (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "description": 'description',
        "metadata": 'metadata',
        "to": 'to',
        "url": 'url',
        "outside_template_id": 'outside_template_id',
        "inside_template_id": 'inside_template_id',
        "inside_template_version_id": 'inside_template_version_id',
        "outside_template_version_id": 'outside_template_version_id',
        "carrier": 'carrier',
        "tracking_events": 'tracking_events',
        "thumbnails": 'thumbnails',
        "merge_variables": 'merge_variables',
        "size": 'size',
        "mail_type": 'mail_type',
        "expected_delivery_date": 'expected_delivery_date',
        "date_created": 'date_created',
        "date_modified": 'date_modified',
        "send_date": 'send_date',
        "deleted": 'deleted',
        "billing_group_id": 'billing_group_id',
        "object": 'object'
    }

    def __init__(self,
                 id=None,
                 description=None,
                 metadata=None,
                 to=None,
                 url=None,
                 outside_template_id=None,
                 inside_template_id=None,
                 inside_template_version_id=None,
                 outside_template_version_id=None,
                 carrier=None,
                 tracking_events=None,
                 thumbnails=None,
                 merge_variables=None,
                 size=None,
                 mail_type=None,
                 expected_delivery_date=None,
                 date_created=None,
                 date_modified=None,
                 send_date=None,
                 deleted=None,
                 billing_group_id=None,
                 object=None):
        """Constructor for the Datum7 class"""

        # Initialize members of the class
        self.id = id 
        self.description = description 
        self.metadata = metadata 
        self.to = to 
        self.url = url 
        self.outside_template_id = outside_template_id 
        self.inside_template_id = inside_template_id 
        self.inside_template_version_id = inside_template_version_id 
        self.outside_template_version_id = outside_template_version_id 
        self.carrier = carrier 
        self.tracking_events = tracking_events 
        self.thumbnails = thumbnails 
        self.merge_variables = merge_variables 
        self.size = size 
        self.mail_type = mail_type 
        self.expected_delivery_date = expected_delivery_date 
        self.date_created = date_created 
        self.date_modified = date_modified 
        self.send_date = send_date 
        self.deleted = deleted 
        self.billing_group_id = billing_group_id 
        self.object = object 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        metadata = dictionary.get("metadata") if dictionary.get("metadata") else None
        to = To3.from_dictionary(dictionary.get('to')) if dictionary.get('to') else None
        url = dictionary.get("url") if dictionary.get("url") else None
        outside_template_id = dictionary.get("outside_template_id") if dictionary.get("outside_template_id") else None
        inside_template_id = dictionary.get("inside_template_id") if dictionary.get("inside_template_id") else None
        inside_template_version_id = dictionary.get("inside_template_version_id") if dictionary.get("inside_template_version_id") else None
        outside_template_version_id = dictionary.get("outside_template_version_id") if dictionary.get("outside_template_version_id") else None
        carrier = dictionary.get("carrier") if dictionary.get("carrier") else None
        tracking_events = dictionary.get("tracking_events") if dictionary.get("tracking_events") else None
        thumbnails = None
        if dictionary.get('thumbnails') is not None:
            thumbnails = [Thumbnail.from_dictionary(x) for x in dictionary.get('thumbnails')]
        merge_variables = MergeVariables4.from_dictionary(dictionary.get('merge_variables')) if dictionary.get('merge_variables') else None
        size = dictionary.get("size") if dictionary.get("size") else None
        mail_type = dictionary.get("mail_type") if dictionary.get("mail_type") else None
        expected_delivery_date = dictionary.get("expected_delivery_date") if dictionary.get("expected_delivery_date") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_modified = dictionary.get("date_modified") if dictionary.get("date_modified") else None
        send_date = dictionary.get("send_date") if dictionary.get("send_date") else None
        deleted = dictionary.get("deleted") if "deleted" in dictionary.keys() else None
        billing_group_id = dictionary.get("billing_group_id") if dictionary.get("billing_group_id") else None
        object = dictionary.get("object") if dictionary.get("object") else None
        # Return an object of this model
        return cls(id,
                   description,
                   metadata,
                   to,
                   url,
                   outside_template_id,
                   inside_template_id,
                   inside_template_version_id,
                   outside_template_version_id,
                   carrier,
                   tracking_events,
                   thumbnails,
                   merge_variables,
                   size,
                   mail_type,
                   expected_delivery_date,
                   date_created,
                   date_modified,
                   send_date,
                   deleted,
                   billing_group_id,
                   object)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'description={self.description!r}, '
                f'metadata={self.metadata!r}, '
                f'to={self.to!r}, '
                f'url={self.url!r}, '
                f'outside_template_id={self.outside_template_id!r}, '
                f'inside_template_id={self.inside_template_id!r}, '
                f'inside_template_version_id={self.inside_template_version_id!r}, '
                f'outside_template_version_id={self.outside_template_version_id!r}, '
                f'carrier={self.carrier!r}, '
                f'tracking_events={self.tracking_events!r}, '
                f'thumbnails={self.thumbnails!r}, '
                f'merge_variables={self.merge_variables!r}, '
                f'size={self.size!r}, '
                f'mail_type={self.mail_type!r}, '
                f'expected_delivery_date={self.expected_delivery_date!r}, '
                f'date_created={self.date_created!r}, '
                f'date_modified={self.date_modified!r}, '
                f'send_date={self.send_date!r}, '
                f'deleted={self.deleted!r}, '
                f'billing_group_id={self.billing_group_id!r}, '
                f'object={self.object!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'description={self.description!s}, '
                f'metadata={self.metadata!s}, '
                f'to={self.to!s}, '
                f'url={self.url!s}, '
                f'outside_template_id={self.outside_template_id!s}, '
                f'inside_template_id={self.inside_template_id!s}, '
                f'inside_template_version_id={self.inside_template_version_id!s}, '
                f'outside_template_version_id={self.outside_template_version_id!s}, '
                f'carrier={self.carrier!s}, '
                f'tracking_events={self.tracking_events!s}, '
                f'thumbnails={self.thumbnails!s}, '
                f'merge_variables={self.merge_variables!s}, '
                f'size={self.size!s}, '
                f'mail_type={self.mail_type!s}, '
                f'expected_delivery_date={self.expected_delivery_date!s}, '
                f'date_created={self.date_created!s}, '
                f'date_modified={self.date_modified!s}, '
                f'send_date={self.send_date!s}, '
                f'deleted={self.deleted!s}, '
                f'billing_group_id={self.billing_group_id!s}, '
                f'object={self.object!s})')
