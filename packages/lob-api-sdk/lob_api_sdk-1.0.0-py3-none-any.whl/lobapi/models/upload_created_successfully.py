# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class UploadCreatedSuccessfully(object):

    """Implementation of the 'Upload created successfully' model.

    Attributes:
        id (str): The model property of type str.
        account_id (str): The model property of type str.
        campaign_id (str): The model property of type str.
        column_mapping (Any): The model property of type Any.
        mode (str): The model property of type str.
        failures_url (str): The model property of type str.
        original_filename (str): The model property of type str.
        state (str): The model property of type str.
        total_mailpieces (int): The model property of type int.
        failed_mailpieces (int): The model property of type int.
        validated_mailpieces (int): The model property of type int.
        bytes_processed (int): The model property of type int.
        date_created (str): The model property of type str.
        date_modified (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "account_id": 'accountId',
        "campaign_id": 'campaignId',
        "column_mapping": 'columnMapping',
        "mode": 'mode',
        "failures_url": 'failuresUrl',
        "original_filename": 'originalFilename',
        "state": 'state',
        "total_mailpieces": 'totalMailpieces',
        "failed_mailpieces": 'failedMailpieces',
        "validated_mailpieces": 'validatedMailpieces',
        "bytes_processed": 'bytesProcessed',
        "date_created": 'dateCreated',
        "date_modified": 'dateModified'
    }

    def __init__(self,
                 id=None,
                 account_id=None,
                 campaign_id=None,
                 column_mapping=None,
                 mode=None,
                 failures_url=None,
                 original_filename=None,
                 state=None,
                 total_mailpieces=None,
                 failed_mailpieces=None,
                 validated_mailpieces=None,
                 bytes_processed=None,
                 date_created=None,
                 date_modified=None):
        """Constructor for the UploadCreatedSuccessfully class"""

        # Initialize members of the class
        self.id = id 
        self.account_id = account_id 
        self.campaign_id = campaign_id 
        self.column_mapping = column_mapping 
        self.mode = mode 
        self.failures_url = failures_url 
        self.original_filename = original_filename 
        self.state = state 
        self.total_mailpieces = total_mailpieces 
        self.failed_mailpieces = failed_mailpieces 
        self.validated_mailpieces = validated_mailpieces 
        self.bytes_processed = bytes_processed 
        self.date_created = date_created 
        self.date_modified = date_modified 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        account_id = dictionary.get("accountId") if dictionary.get("accountId") else None
        campaign_id = dictionary.get("campaignId") if dictionary.get("campaignId") else None
        column_mapping = dictionary.get("columnMapping") if dictionary.get("columnMapping") else None
        mode = dictionary.get("mode") if dictionary.get("mode") else None
        failures_url = dictionary.get("failuresUrl") if dictionary.get("failuresUrl") else None
        original_filename = dictionary.get("originalFilename") if dictionary.get("originalFilename") else None
        state = dictionary.get("state") if dictionary.get("state") else None
        total_mailpieces = dictionary.get("totalMailpieces") if dictionary.get("totalMailpieces") else None
        failed_mailpieces = dictionary.get("failedMailpieces") if dictionary.get("failedMailpieces") else None
        validated_mailpieces = dictionary.get("validatedMailpieces") if dictionary.get("validatedMailpieces") else None
        bytes_processed = dictionary.get("bytesProcessed") if dictionary.get("bytesProcessed") else None
        date_created = dictionary.get("dateCreated") if dictionary.get("dateCreated") else None
        date_modified = dictionary.get("dateModified") if dictionary.get("dateModified") else None
        # Return an object of this model
        return cls(id,
                   account_id,
                   campaign_id,
                   column_mapping,
                   mode,
                   failures_url,
                   original_filename,
                   state,
                   total_mailpieces,
                   failed_mailpieces,
                   validated_mailpieces,
                   bytes_processed,
                   date_created,
                   date_modified)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'account_id={self.account_id!r}, '
                f'campaign_id={self.campaign_id!r}, '
                f'column_mapping={self.column_mapping!r}, '
                f'mode={self.mode!r}, '
                f'failures_url={self.failures_url!r}, '
                f'original_filename={self.original_filename!r}, '
                f'state={self.state!r}, '
                f'total_mailpieces={self.total_mailpieces!r}, '
                f'failed_mailpieces={self.failed_mailpieces!r}, '
                f'validated_mailpieces={self.validated_mailpieces!r}, '
                f'bytes_processed={self.bytes_processed!r}, '
                f'date_created={self.date_created!r}, '
                f'date_modified={self.date_modified!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'account_id={self.account_id!s}, '
                f'campaign_id={self.campaign_id!s}, '
                f'column_mapping={self.column_mapping!s}, '
                f'mode={self.mode!s}, '
                f'failures_url={self.failures_url!s}, '
                f'original_filename={self.original_filename!s}, '
                f'state={self.state!s}, '
                f'total_mailpieces={self.total_mailpieces!s}, '
                f'failed_mailpieces={self.failed_mailpieces!s}, '
                f'validated_mailpieces={self.validated_mailpieces!s}, '
                f'bytes_processed={self.bytes_processed!s}, '
                f'date_created={self.date_created!s}, '
                f'date_modified={self.date_modified!s})')
