# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lobapi.models.components import Components


class ReturnsAnInternationalVerificationObject(object):

    """Implementation of the 'Returns an international verification object.' model.

    Attributes:
        id (str): The model property of type str.
        recipient (str): The model property of type str.
        primary_line (str): The model property of type str.
        secondary_line (str): The model property of type str.
        last_line (str): The model property of type str.
        country (str): The model property of type str.
        coverage (str): The model property of type str.
        deliverability (str): The model property of type str.
        status (str): The model property of type str.
        components (Components): The model property of type Components.
        object (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "recipient": 'recipient',
        "primary_line": 'primary_line',
        "secondary_line": 'secondary_line',
        "last_line": 'last_line',
        "country": 'country',
        "coverage": 'coverage',
        "deliverability": 'deliverability',
        "status": 'status',
        "components": 'components',
        "object": 'object'
    }

    _nullables = [
        'recipient',
    ]

    def __init__(self,
                 id=None,
                 recipient=None,
                 primary_line=None,
                 secondary_line=None,
                 last_line=None,
                 country=None,
                 coverage=None,
                 deliverability=None,
                 status=None,
                 components=None,
                 object=None):
        """Constructor for the ReturnsAnInternationalVerificationObject class"""

        # Initialize members of the class
        self.id = id 
        self.recipient = recipient 
        self.primary_line = primary_line 
        self.secondary_line = secondary_line 
        self.last_line = last_line 
        self.country = country 
        self.coverage = coverage 
        self.deliverability = deliverability 
        self.status = status 
        self.components = components 
        self.object = object 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        recipient = dictionary.get("recipient") if dictionary.get("recipient") else None
        primary_line = dictionary.get("primary_line") if dictionary.get("primary_line") else None
        secondary_line = dictionary.get("secondary_line") if dictionary.get("secondary_line") else None
        last_line = dictionary.get("last_line") if dictionary.get("last_line") else None
        country = dictionary.get("country") if dictionary.get("country") else None
        coverage = dictionary.get("coverage") if dictionary.get("coverage") else None
        deliverability = dictionary.get("deliverability") if dictionary.get("deliverability") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        components = Components.from_dictionary(dictionary.get('components')) if dictionary.get('components') else None
        object = dictionary.get("object") if dictionary.get("object") else None
        # Return an object of this model
        return cls(id,
                   recipient,
                   primary_line,
                   secondary_line,
                   last_line,
                   country,
                   coverage,
                   deliverability,
                   status,
                   components,
                   object)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'recipient={self.recipient!r}, '
                f'primary_line={self.primary_line!r}, '
                f'secondary_line={self.secondary_line!r}, '
                f'last_line={self.last_line!r}, '
                f'country={self.country!r}, '
                f'coverage={self.coverage!r}, '
                f'deliverability={self.deliverability!r}, '
                f'status={self.status!r}, '
                f'components={self.components!r}, '
                f'object={self.object!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'recipient={self.recipient!s}, '
                f'primary_line={self.primary_line!s}, '
                f'secondary_line={self.secondary_line!s}, '
                f'last_line={self.last_line!s}, '
                f'country={self.country!s}, '
                f'coverage={self.coverage!s}, '
                f'deliverability={self.deliverability!s}, '
                f'status={self.status!s}, '
                f'components={self.components!s}, '
                f'object={self.object!s})')
