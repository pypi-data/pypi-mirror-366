# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class DeliverabilityAnalysis(object):

    """Implementation of the 'DeliverabilityAnalysis' model.

    Attributes:
        dpv_confirmation (str): The model property of type str.
        dpv_cmra (str): The model property of type str.
        dpv_vacant (str): The model property of type str.
        dpv_active (str): The model property of type str.
        dpv_footnotes (List[str]): The model property of type List[str].
        ews_match (bool): The model property of type bool.
        lacs_indicator (str): The model property of type str.
        lacs_return_code (str): The model property of type str.
        suite_return_code (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dpv_confirmation": 'dpv_confirmation',
        "dpv_cmra": 'dpv_cmra',
        "dpv_vacant": 'dpv_vacant',
        "dpv_active": 'dpv_active',
        "dpv_footnotes": 'dpv_footnotes',
        "ews_match": 'ews_match',
        "lacs_indicator": 'lacs_indicator',
        "lacs_return_code": 'lacs_return_code',
        "suite_return_code": 'suite_return_code'
    }

    def __init__(self,
                 dpv_confirmation=None,
                 dpv_cmra=None,
                 dpv_vacant=None,
                 dpv_active=None,
                 dpv_footnotes=None,
                 ews_match=None,
                 lacs_indicator=None,
                 lacs_return_code=None,
                 suite_return_code=None):
        """Constructor for the DeliverabilityAnalysis class"""

        # Initialize members of the class
        self.dpv_confirmation = dpv_confirmation 
        self.dpv_cmra = dpv_cmra 
        self.dpv_vacant = dpv_vacant 
        self.dpv_active = dpv_active 
        self.dpv_footnotes = dpv_footnotes 
        self.ews_match = ews_match 
        self.lacs_indicator = lacs_indicator 
        self.lacs_return_code = lacs_return_code 
        self.suite_return_code = suite_return_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        dpv_confirmation = dictionary.get("dpv_confirmation") if dictionary.get("dpv_confirmation") else None
        dpv_cmra = dictionary.get("dpv_cmra") if dictionary.get("dpv_cmra") else None
        dpv_vacant = dictionary.get("dpv_vacant") if dictionary.get("dpv_vacant") else None
        dpv_active = dictionary.get("dpv_active") if dictionary.get("dpv_active") else None
        dpv_footnotes = dictionary.get("dpv_footnotes") if dictionary.get("dpv_footnotes") else None
        ews_match = dictionary.get("ews_match") if "ews_match" in dictionary.keys() else None
        lacs_indicator = dictionary.get("lacs_indicator") if dictionary.get("lacs_indicator") else None
        lacs_return_code = dictionary.get("lacs_return_code") if dictionary.get("lacs_return_code") else None
        suite_return_code = dictionary.get("suite_return_code") if dictionary.get("suite_return_code") else None
        # Return an object of this model
        return cls(dpv_confirmation,
                   dpv_cmra,
                   dpv_vacant,
                   dpv_active,
                   dpv_footnotes,
                   ews_match,
                   lacs_indicator,
                   lacs_return_code,
                   suite_return_code)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'dpv_confirmation={self.dpv_confirmation!r}, '
                f'dpv_cmra={self.dpv_cmra!r}, '
                f'dpv_vacant={self.dpv_vacant!r}, '
                f'dpv_active={self.dpv_active!r}, '
                f'dpv_footnotes={self.dpv_footnotes!r}, '
                f'ews_match={self.ews_match!r}, '
                f'lacs_indicator={self.lacs_indicator!r}, '
                f'lacs_return_code={self.lacs_return_code!r}, '
                f'suite_return_code={self.suite_return_code!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'dpv_confirmation={self.dpv_confirmation!s}, '
                f'dpv_cmra={self.dpv_cmra!s}, '
                f'dpv_vacant={self.dpv_vacant!s}, '
                f'dpv_active={self.dpv_active!s}, '
                f'dpv_footnotes={self.dpv_footnotes!s}, '
                f'ews_match={self.ews_match!s}, '
                f'lacs_indicator={self.lacs_indicator!s}, '
                f'lacs_return_code={self.lacs_return_code!s}, '
                f'suite_return_code={self.suite_return_code!s})')
