# -*- coding: utf-8 -*-

"""
lobapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lobapi.api_helper import APIHelper
from lobapi.configuration import Server
from lobapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lobapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from lobapi.models.echos_the_writable_fields_of_a_newly_created_address_object import EchosTheWritableFieldsOfANewlyCreatedAddressObject
from lobapi.models.a_dictionary_with_a_data_property_that_contains_an_array_of_up_to_limit_addresses_each_entry_in_the_array_is_a_separate_address_object_the_previous_and_next_page_of_address_entries_can_be_retrieved_by_calling_the_endpoint_contained_in_the_previous_ur import ADictionaryWithADataPropertyThatContainsAnArrayOfUpToLimitAddressesEachEntryInTheArrayIsASeparateAddressObjectThePreviousAndNextPageOfAddressEntriesCanBeRetrievedByCallingTheEndpointContainedInThePreviousUr
from lobapi.models.returns_an_address_object_if_a_valid_identifier_was_provided import ReturnsAnAddressObjectIfAValidIdentifierWasProvided
from lobapi.models.returns_true_if_the_delete_was_successful import ReturnsTrueIfTheDeleteWasSuccessful
from lobapi.exceptions.error_exception import ErrorException


class AddressesController(BaseController):

    """A Controller to access Endpoints in the lobapi API."""
    def __init__(self, config):
        super(AddressesController, self).__init__(config)

    def creates_a_new_address_object(self,
                                     name,
                                     address_line_1,
                                     address_city,
                                     address_state,
                                     address_zip):
        """Does a POST request to /addresses.

        Creates a new address given information

        Args:
            name (str): (optional) Either name or company is required, you may
                also add both. Must be no longer than 40 characters. If both
                name and company are provided, they will be printed on two
                separate lines above the rest of the address.
            address_line_1 (str): (required) Must be no longer than 64
                characters for US addresses or 200 characters for
                international addresses.
            address_city (str): (optiona) Required if address_country is US,
                otherwise optional. Must be no longer than 200 characters.
            address_state (str): (optional) Required and must be a 2 letter
                state short-name code or a valid full state name if
                address_country is US, otherwise optional and not any longer
                than 200 characters.
            address_zip (int): (optional) Required and must follow the ZIP
                format of 12345 or ZIP+4 format of 12345-1234 if
                address_country is US, otherwise optional and not any longer
                than 40 characters.

        Returns:
            EchosTheWritableFieldsOfANewlyCreatedAddressObject: Response from
                the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/addresses')
            .http_method(HttpMethodEnum.POST)
            .form_param(Parameter()
                        .key('name')
                        .value(name))
            .form_param(Parameter()
                        .key('address_line1')
                        .value(address_line_1))
            .form_param(Parameter()
                        .key('address_city')
                        .value(address_city))
            .form_param(Parameter()
                        .key('address_state')
                        .value(address_state))
            .form_param(Parameter()
                        .key('address_zip')
                        .value(address_zip))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(EchosTheWritableFieldsOfANewlyCreatedAddressObject.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()

    def list_all_addresses(self):
        """Does a GET request to /addresses.

        Returns a list of your addresses. The addresses are returned sorted by
        creation date, with the most recently created addresses appearing
        first.

        Returns:
            ADictionaryWithADataPropertyThatContainsAnArrayOfUpToLimitAddresses
                EachEntryInTheArrayIsASeparateAddressObjectThePreviousAndNextPa
                geOfAddressEntriesCanBeRetrievedByCallingTheEndpointContainedIn
                ThePreviousUr: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/addresses')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ADictionaryWithADataPropertyThatContainsAnArrayOfUpToLimitAddressesEachEntryInTheArrayIsASeparateAddressObjectThePreviousAndNextPageOfAddressEntriesCanBeRetrievedByCallingTheEndpointContainedInThePreviousUr.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()

    def retrieve_address_with_given_id(self,
                                       adr_id):
        """Does a GET request to /addresses/{adr_id}.

        Retrieves the details of an existing address. You need only supply the
        unique customer identifier that was returned upon address creation.

        Args:
            adr_id (str): (Required) id of the address

        Returns:
            ReturnsAnAddressObjectIfAValidIdentifierWasProvided: Response from
                the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/addresses/{adr_id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('adr_id')
                            .value(adr_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ReturnsAnAddressObjectIfAValidIdentifierWasProvided.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()

    def deletes_address_with_given_id(self,
                                      adr_id):
        """Does a DELETE request to /addresses/{adr_id}.

        Deletes the details of an existing address. You need only supply the
        unique customer identifier that was returned upon address creation.

        Args:
            adr_id (str): (Required) id of the address

        Returns:
            ReturnsTrueIfTheDeleteWasSuccessful: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/addresses/{adr_id}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('adr_id')
                            .value(adr_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ReturnsTrueIfTheDeleteWasSuccessful.from_dictionary)
            .local_error('500', 'Internal Server Error', ErrorException)
        ).execute()
