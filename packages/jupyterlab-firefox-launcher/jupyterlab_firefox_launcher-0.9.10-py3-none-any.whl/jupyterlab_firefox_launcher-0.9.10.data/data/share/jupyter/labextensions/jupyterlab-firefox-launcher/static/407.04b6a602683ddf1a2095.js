"use strict";(self.webpackChunkjupyterlab_firefox_launcher=self.webpackChunkjupyterlab_firefox_launcher||[]).push([[407],{56:(e,o,n)=>{e.exports=function(e){var o=n.nc;o&&e.setAttribute("nonce",o)}},72:e=>{var o=[];function n(e){for(var n=-1,r=0;r<o.length;r++)if(o[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},s=[],a=0;a<e.length;a++){var l=e[a],c=r.base?l[0]+r.base:l[0],p=i[c]||0,d="".concat(c," ").concat(p);i[c]=p+1;var u=n(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)o[u].references++,o[u].updater(f);else{var h=t(f,r);r.byIndex=a,o.splice(a,0,{identifier:d,updater:h,references:1})}s.push(d)}return s}function t(e,o){var n=o.domAPI(o);return n.update(e),function(o){if(o){if(o.css===e.css&&o.media===e.media&&o.sourceMap===e.sourceMap&&o.supports===e.supports&&o.layer===e.layer)return;n.update(e=o)}else n.remove()}}e.exports=function(e,t){var i=r(e=e||[],t=t||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var a=n(i[s]);o[a].references--}for(var l=r(e,t),c=0;c<i.length;c++){var p=n(i[c]);0===o[p].references&&(o[p].updater(),o.splice(p,1))}i=l}}},113:e=>{e.exports=function(e,o){if(o.styleSheet)o.styleSheet.cssText=e;else{for(;o.firstChild;)o.removeChild(o.firstChild);o.appendChild(document.createTextNode(e))}}},314:e=>{e.exports=function(e){var o=[];return o.toString=function(){return this.map(function(o){var n="",r=void 0!==o[5];return o[4]&&(n+="@supports (".concat(o[4],") {")),o[2]&&(n+="@media ".concat(o[2]," {")),r&&(n+="@layer".concat(o[5].length>0?" ".concat(o[5]):""," {")),n+=e(o),r&&(n+="}"),o[2]&&(n+="}"),o[4]&&(n+="}"),n}).join("")},o.i=function(e,n,r,t,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var p=[].concat(e[c]);r&&s[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),t&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=t):p[4]="".concat(t)),o.push(p))}},o}},407:(e,o,n)=>{n.r(o),n.d(o,{default:()=>C});var r=n(213),t=n(607),i=n(256),s=n(907),a=n(748);async function l(e="",o={}){const n=a.ServerConnection.makeSettings(),r=s.URLExt.join(n.baseUrl,"firefox-launcher","api",e);let t;try{t=await a.ServerConnection.makeRequest(r,o,n)}catch(e){throw new a.ServerConnection.NetworkError(e)}let i=await t.text();if(i.length>0)try{i=JSON.parse(i)}catch(e){console.log("Not a JSON response body.",t)}if(!t.ok)throw new a.ServerConnection.ResponseError(t,i.message||i);return i}var c,p=n(72),d=n.n(p),u=n(825),f=n.n(u),h=n(659),g=n.n(h),y=n(56),m=n.n(y),x=n(540),v=n.n(x),w=n(113),b=n.n(w),_=n(646),F={};F.styleTagTransform=b(),F.setAttributes=m(),F.insert=g().bind(null,"head"),F.domAPI=f(),F.insertStyleElement=v(),d()(_.A,F),_.A&&_.A.locals&&_.A.locals;class I extends i.Widget{constructor(){super(),this._xpraPort=null,this._processId=null,this._isFullyInitialized=!1,this.addClass("jp-FirefoxWidget"),this.title.label="Firefox Browser",this.title.closable=!0,this.title.iconClass="jp-LauncherIcon jp-FirefoxIcon",this._loadingDiv=document.createElement("div"),this._loadingDiv.className="jp-firefox-loading",this._loadingDiv.innerHTML='\n      <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; padding: 20px;">\n        <div style="margin-bottom: 20px;">\n          <svg width="50" height="50" viewBox="0 0 50 50">\n            <circle cx="25" cy="25" r="20" fill="none" stroke="#ff6611" stroke-width="4" stroke-linecap="round" stroke-dasharray="31.416" stroke-dashoffset="31.416">\n              <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/>\n              <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416" repeatCount="indefinite"/>\n            </svg>\n          </div>\n        <h3 style="color: #ff6611; margin: 10px 0;">Starting Firefox</h3>\n        <p style="color: #666; text-align: center;">Please wait while Firefox is starting up through Xpra...</p>\n      </div>\n    ',this._iframe=document.createElement("iframe"),this._iframe.style.width="100%",this._iframe.style.height="100%",this._iframe.style.border="none",this._iframe.style.display="none",this._iframe.title="Firefox Browser",this.node.appendChild(this._loadingDiv),this.node.appendChild(this._iframe),this._beforeUnloadHandler=()=>{if(console.log("🚨 Window beforeunload - emergency cleanup"),this._processId&&this._isFullyInitialized){const e=JSON.stringify({process_id:this._processId,port:this._xpraPort});navigator.sendBeacon("/firefox-launcher/api/cleanup",e)}},window.addEventListener("beforeunload",this._beforeUnloadHandler)}onBeforeHide(e){console.log("🔄 Firefox Widget: onBeforeHide called - NOT performing cleanup (this is normal during widget creation)"),super.onBeforeHide(e)}onCloseRequest(e){console.log("🔄 Firefox Widget: onCloseRequest called - performing cleanup for tab close"),this._performImmediateCleanup().catch(e=>{console.error("❌ onCloseRequest cleanup failed:",e)}),super.onCloseRequest(e)}async _performImmediateCleanup(){if(console.log("🔥 Performing immediate cleanup..."),this._isFullyInitialized)if(this._processId){console.log(`🧹 Cleaning up Firefox session: process=${this._processId}, port=${this._xpraPort}`);try{const e=await l("cleanup",{method:"POST",body:JSON.stringify({process_id:this._processId,port:this._xpraPort})});console.log("✅ Immediate cleanup result:",e)}catch(e){console.error("❌ Immediate cleanup failed:",e)}}else console.log("⚠️ No process ID for immediate cleanup");else console.log("⏭️ Widget not fully initialized yet, skipping cleanup")}setPortAndRefresh(e){this._xpraPort=e,this._iframe.src=`/proxy/${e}/`,this._loadingDiv.style.display="none",this._iframe.style.display="block"}setProxyPathAndRefresh(e){this._iframe.src=e,this._loadingDiv.style.display="none",this._iframe.style.display="block"}refresh(){this._xpraPort?this.setPortAndRefresh(this._xpraPort):(this._iframe.src="/firefox-launcher/firefox",this._loadingDiv.style.display="none",this._iframe.style.display="block")}setProcessId(e){this._processId=e,this._isFullyInitialized=!0,console.log(`✅ Firefox widget fully initialized with process ID: ${e}`)}dispose(){if(console.log("🧹 FirefoxWidget.dispose() called"),console.log(`   Process ID: ${this._processId}`),console.log(`   Port: ${this._xpraPort}`),this._beforeUnloadHandler&&(window.removeEventListener("beforeunload",this._beforeUnloadHandler),console.log("🗑️ Removed beforeunload listener")),this._processId&&this._isFullyInitialized){console.log(`🔥 Calling cleanup for process ${this._processId}...`),this._cleanupXpraProcess().catch(e=>{console.error("Async cleanup failed, trying synchronous fallback:",e)});try{const e=JSON.stringify({process_id:this._processId,port:this._xpraPort});navigator.sendBeacon("/firefox-launcher/api/cleanup",e),console.log("🔄 Synchronous cleanup request sent via sendBeacon")}catch(e){console.error("Synchronous cleanup also failed:",e)}}else this._processId?console.log("⚠️ Widget not fully initialized, skipping cleanup"):console.log("⚠️ No process ID to cleanup");super.dispose(),console.log("✅ FirefoxWidget.dispose() completed")}async _cleanupXpraProcess(){try{console.log(`🌐 Sending cleanup request to backend for process ${this._processId}`);const e=await l("cleanup",{method:"POST",body:JSON.stringify({process_id:this._processId,port:this._xpraPort})});console.log("✅ Cleanup response:",e),console.log(`✅ Successfully cleaned up Xpra process ${this._processId}`)}catch(e){console.error(`❌ Failed to cleanup Xpra process ${this._processId}:`,e),console.error("   Error details:",e)}}}!function(e){e.launch="firefox-launcher:launch"}(c||(c={}));const C={id:"jupyterlab-firefox-launcher:plugin",description:"Firefox browser launcher for JupyterLab",autoStart:!0,requires:[r.ILauncher,t.ILayoutRestorer],activate:(e,o,n)=>{console.log("JupyterLab extension jupyterlab-firefox-launcher is activated!");let r=0;const t="firefox-launcher:open";e.commands.addCommand(t,{label:"Firefox Browser",iconClass:"jp-LauncherIcon jp-FirefoxIcon",execute:async()=>{try{const o=new I,t="firefox-browser-"+ ++r;o.id=t,e.shell.add(o,"main"),e.shell.activateById(t),n.add(o,t),await async function(e){try{console.log("Starting Firefox process...");const o=await l("firefox",{method:"POST"});if("error"===o.status)throw new Error(o.message||"Failed to start Firefox");const n=o.port,r=o.proxy_path,t=o.process_id;console.log(`Firefox process started on port ${n}, proxy path: ${r}, process ID: ${t}, waiting for Xpra proxy...`),t&&e.setProcessId(t);for(let o=1;o<=30;o++){try{let t;t=r||(n?`/proxy/${n}/`:"/firefox-launcher/firefox");const i=await fetch(t,{method:"HEAD",cache:"no-cache"});if(i.ok||302===i.status)return console.log(`Xpra proxy is available after ${o} attempts`),void(r?e.setProxyPathAndRefresh(r):n?e.setPortAndRefresh(n):e.refresh());503===i.status?console.log(`Attempt ${o}/30: Xpra proxy not ready (503)`):console.log(`Attempt ${o}/30: Unexpected response status ${i.status}`)}catch(e){const n=e instanceof Error?e.message:"Xpra proxy not yet available";console.log(`Attempt ${o}/30: Network error - ${n}`)}await new Promise(e=>setTimeout(e,2e3))}throw new Error("Xpra proxy did not become available within 60 seconds")}catch(o){console.error("Failed to start Firefox with Xpra proxy:",o);const n=document.createElement("div");throw n.className="jp-firefox-error",n.innerHTML=`\n          <div style="padding: 20px; text-align: center; color: #f44336;">\n            <h3>Firefox Launch Failed</h3>\n            <p>${o instanceof Error?o.message:"Unknown error occurred"}</p>\n            <button onclick="location.reload()">Retry</button>\n          </div>\n        `,e.node.innerHTML="",e.node.appendChild(n),o}}(o)}catch(e){console.error("Error launching Firefox:",e),alert("Failed to start Firefox browser. Check console for details.")}}}),o.add({command:t,category:"Tools",rank:1}),window.cleanupFirefox=async()=>{console.log("🔧 Manual Firefox cleanup triggered (conservative)");try{const e=await l("cleanup",{method:"POST",body:JSON.stringify({process_id:"all",port:null})});return console.log("🧹 Conservative cleanup result:",e),e}catch(e){return console.error("❌ Conservative cleanup failed:",e),e}},window.cleanupFirefoxWithDirs=async()=>{console.log("🔧 Manual Firefox cleanup with directory removal triggered"),console.warn("⚠️ This will remove session directories for terminated sessions");try{const e=await l("cleanup?cleanup_dirs=true",{method:"POST",body:JSON.stringify({process_id:"all",port:null})});return console.log("🧹 Cleanup with directories result:",e),e}catch(e){return console.error("❌ Cleanup with directories failed:",e),e}},window.nuclearCleanupFirefox=async()=>{if(console.error("💥 NUCLEAR CLEANUP REQUESTED - THIS IS DANGEROUS!"),console.warn("⚠️ This will kill ALL Firefox and Xpra processes on the system, not just managed ones"),console.warn("⚠️ This may affect other users or applications using Firefox/Xpra"),console.warn("⚠️ Use only as a last resort for debugging"),!confirm("NUCLEAR CLEANUP WARNING!\n\nThis will kill ALL Firefox and Xpra processes on the system.\nThis may affect other users and applications.\n\nAre you sure you want to proceed?"))return console.log("Nuclear cleanup cancelled by user"),{status:"cancelled",message:"User cancelled nuclear cleanup"};try{const e=await l("cleanup?nuclear=true&confirm_nuclear=true&cleanup_dirs=true",{method:"POST",body:JSON.stringify({process_id:"all",port:null})});return console.log("💀 Nuclear cleanup result:",e),e}catch(e){return console.error("❌ Nuclear cleanup failed:",e),e}},console.log("💡 Manual cleanup options available:"),console.log("   window.cleanupFirefox() - Conservative cleanup (managed sessions only)"),console.log("   window.cleanupFirefoxWithDirs() - Cleanup + remove session directories"),console.log("   window.nuclearCleanupFirefox() - Nuclear cleanup (ALL processes - DANGEROUS!)")}}},417:e=>{e.exports=function(e,o){return o||(o={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),o.hash&&(e+=o.hash),/["'() \t\n]|(%20)/.test(e)||o.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},508:(e,o,n)=>{e.exports=n.p+"3c09952b57aec9ff2c33.svg"},540:e=>{e.exports=function(e){var o=document.createElement("style");return e.setAttributes(o,e.attributes),e.insert(o,e.options),o}},601:e=>{e.exports=function(e){return e[1]}},646:(e,o,n)=>{n.d(o,{A:()=>u});var r=n(601),t=n.n(r),i=n(314),s=n.n(i),a=n(417),l=n.n(a),c=new URL(n(508),n.b),p=s()(t()),d=l()(c);p.push([e.id,`/* Copyright (c) 2025 Vantage Compute Corporation. */\n\n/* Firefox icon styling - only apply to launcher button, not category */\n.jp-LauncherCard .jp-LauncherIcon.jp-FirefoxIcon {\n  background-image: url(${d});\n  background-size: 40px;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n/* Firefox widget styling */\n.jp-FirefoxWidget {\n  min-width: 800px;\n  min-height: 600px;\n}\n\n.jp-FirefoxWidget iframe {\n  width: 100%;\n  height: 100%;\n  border: none;\n}\n\n/* Loading state styling */\n.jp-firefox-loading {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fafafa;\n  font-family: var(--jp-ui-font-family);\n}\n\n.jp-firefox-loading h3 {\n  margin: 10px 0;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.jp-firefox-loading p {\n  margin: 5px 0;\n  font-size: 14px;\n  max-width: 400px;\n  line-height: 1.4;\n}\n\n/* Error state styling */\n.jp-firefox-error {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fafafa;\n  font-family: var(--jp-ui-font-family);\n}\n\n.jp-firefox-error h3 {\n  margin: 10px 0;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.jp-firefox-error p {\n  margin: 15px 0;\n  font-size: 14px;\n  max-width: 500px;\n  line-height: 1.4;\n}\n\n.jp-firefox-error button {\n  padding: 8px 16px;\n  background-color: #ff6611;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  margin-top: 10px;\n}\n\n.jp-firefox-error button:hover {\n  background-color: #e55a0f;\n}`,""]);const u=p},659:e=>{var o={};e.exports=function(e,n){var r=function(e){if(void 0===o[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}o[e]=n}return o[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var o=e.insertStyleElement(e);return{update:function(n){!function(e,o,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var t=void 0!==n.layer;t&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,t&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),o.styleTagTransform(r,e,o.options)}(o,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(o)}}}}}]);