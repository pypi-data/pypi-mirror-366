stages:
  - validate
  - test
  - deploy

pep8_check_style:
  tags:
    - docker
  image: python:3.11
  stage: validate
  before_script:
    - pip install -r requirements-dev.txt
  script:
    - pycodestyle --show-source --show-pep8 --exclude=".eggs,venv,cli/_version.py,docs" .

check_dependency_licenses:
  tags:
    - docker
  image: python:3.11
  stage: validate
  before_script:
    - pip install --upgrade pip
    - pip install -r requirements.txt -r requirements-dev.txt
  script:
    - liccheck -s liccheck.ini -r requirements.txt

unit_tests_3.11:
  tags:
    - docker
  image: python:3.11
  stage: test
  before_script:
    - pip install -r requirements.txt -r requirements-dev.txt
    - python -m build
  script:
    - python -m unittest -v

unit_tests_3.12:
  tags:
    - docker
  image: python:3.12
  stage: test
  before_script:
    - pip install -r requirements.txt -r requirements-dev.txt
    - python -m build
  script:
    - python -m unittest -v

pages:
  tags:
    - docker
  image: python:3.11
  stage: deploy
  before_script:
    - pip install -r requirements.txt -r requirements-doc.txt build
    - python -m build
  script:
    - sphinx-build -M simplepdf docs public
  artifacts:
    paths:
      - public
  only:
    - tags

release:
  tags:
    - docker
  image: python:3.11
  stage: deploy
  before_script:
    - pip install -r requirements-dev.txt
    - pip install -r requirements.txt -r requirements-dev.txt
    - BUILD_VERSION=$CI_COMMIT_TAG python -m build
  script:
    - pip install dist/deltatwin_cli-$CI_COMMIT_TAG.tar.gz
    - python -m twine upload dist/*
  only:
    - tags
