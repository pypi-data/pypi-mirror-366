name: CI with uv
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.ipynb"
      - "**.cff"
      - "examples/**"

  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.ipynb"
      - "**.cff"
      - "examples/**"

  schedule:
    - cron: "0 0 * * *" # Runs at 00:00 UTC every day

  workflow_dispatch: # allow running sync via github ui button

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent infinite hanging
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup uv python package manager
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          prune-cache: false
          cache-dependency-glob: |
            **/pyproject.toml
      - name: Cache apt packages
        uses: actions/cache@v4
        # Only cache apt packages when running GitHub Actions locally with 'act' tool
        if: ${{ env.ACT }}
        with:
          path: /var/cache/apt
          key: apt-cache
      - name: Install dependencies
        timeout-minutes: 5
        run: |
          set -e
          uv sync --group dev
      - name: List installed packages
        run: |
          echo "=== Installed Python packages ==="
          uv pip list
          echo ""
          echo "=== Python version ==="
          python --version
          echo ""
          echo "=== uv version ==="
          uv --version
      - name: Verify .venv Activation
        run: |
          if [ ! -d ".venv" ]; then
            echo ".venv directory not found"
            exit 1
          fi
          source .venv/bin/activate
      - name: Install trackio-mcp from PyPI
        if: github.event_name == 'schedule'
        run: |
          rm -fr trackio_mcp
          uv pip install --force-reinstall trackio-mcp
          uv pip show trackio-mcp
          source .venv/bin/activate
          python -c "import trackio_mcp; print(trackio_mcp.__version__)"
      - name: Test with python ${{ matrix.python-version }}
        timeout-minutes: 5
        run: |
          source .venv/bin/activate
          pytest --capture=no -n auto --tb=short
      - name: Test trackio-mcp CLI
        timeout-minutes: 2
        run: |
          source .venv/bin/activate
          set -e
          trackio-mcp --help
