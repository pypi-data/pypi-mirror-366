[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

; a generative tox configuration, see: https://tox.wiki/en/latest/user_guide.html#generative-environments
[tox]
envlist =
    clean,
    check,
    docs,
    {py310,py311,py312},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    py312: {env:TOXPYTHON:python3.12}
    {bootstrap,clean,check,report,docs,codecov}: {env:TOXPYTHON:python3.12}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    cover: SETUPPY_EXT_COVERAGE=yes
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-cov
    pytest-order
    setuptools
    llvmlite
    numba
commands =
    {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv tests}

[testenv:py{310,311,312}-ci]
basepython =
    py310-ci: {env:TOXPYTHON:python3.10}
    py311-ci: {env:TOXPYTHON:python3.11}
    py312-ci: {env:TOXPYTHON:python3.12}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    cover: SETUPPY_EXT_COVERAGE=yes
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-cov
    pytest-order
    setuptools
    llvmlite
    numba
commands =
    {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv -m "not slow" tests}

[testenv:check]
deps =
    docutils
    check-manifest
    pre-commit
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest .
    pre-commit autoupdate
    pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt

allowlist_externals =
    curl
    tar
    cp
    rm
    bash
commands_pre =
    curl -L https://github.com/jgm/pandoc/releases/download/3.7.0.2/pandoc-3.7.0.2-linux-amd64.tar.gz -o pandoc.tar.gz
    tar -xzf pandoc.tar.gz
    cp pandoc-3.7.0.2/bin/pandoc {envbindir}
    bash -c "cd {toxinidir}/docs/tutorials && bash create_ipynb.sh"
commands =
    sphinx-apidoc -f -o docs/reference --module-first src/laser_measles
    ; sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands =
    python setup.py clean
    coverage erase
skip_install = true
deps =
    setuptools
    coverage
