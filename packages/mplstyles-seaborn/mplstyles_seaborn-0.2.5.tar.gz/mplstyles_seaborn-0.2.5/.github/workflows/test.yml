name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --extra test

    - name: Run tests
      run: |
        uv run pytest tests/ -v --tb=short

    - name: Run tests with coverage
      run: |
        uv run pytest tests/ --cov=src/mplstyles_seaborn --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --extra test

    - name: Test package installation
      run: |
        uv run python -c "import mplstyles_seaborn; print(f'Found {len(mplstyles_seaborn.list_available_styles())} styles')"

    - name: Test style application
      run: |
        uv run python -c "import mplstyles_seaborn; import matplotlib.pyplot as plt; plt.style.use('seaborn-v0_8-whitegrid-colorblind-talk'); print('Style applied successfully')"

    - name: Verify all styles are loadable
      run: |
        uv run python -c "
        import mplstyles_seaborn
        import matplotlib.pyplot as plt
        styles = mplstyles_seaborn.list_available_styles()
        print(f'Testing {len(styles)} styles...')
        for i, style in enumerate(styles[::10]):  # Test every 10th style
            plt.style.use(style)
            if (i + 1) % 5 == 0:
                print(f'Tested {i + 1} styles successfully')
        print('All sampled styles loaded successfully')
        "