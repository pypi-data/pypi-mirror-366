# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}  # Checkout the exact tag that triggered the release
          fetch-depth: 0  # Fetch full history for setuptools-scm to work correctly
          fetch-tags: true  # Fetch all tags for proper version detection

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Install dependencies and run tests
        run: |
          uv sync --extra test --group dev
          uv run pytest tests/ --cov=src/mplstyles_seaborn --cov-report=term-missing

      - name: Clean repository for version detection
        run: |
          git clean -fxd
          git reset --hard HEAD

      - name: Show version information
        run: |
          echo "Git describe: $(git describe --tags --always --dirty)"
          echo "Git tag: $(git describe --tags --exact-match 2>/dev/null || echo 'No exact tag match')"
          uv run python -c "import setuptools_scm; print('setuptools-scm version:', setuptools_scm.get_version())"

      - name: Build release distributions
        run: |
          uv run python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/p/mplstyles-seaborn

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          verbose: true

  testpypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: testpypi
      url: https://test.pypi.org/p/mplstyles-seaborn

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true
          verbose: true
