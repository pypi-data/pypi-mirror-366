[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdtab"
version = "0.1.0"
authors = [
    {name = "Bryce Wang", email = "bryce6m@stanford.edu"},
]
description = "A pandas-based library that replicates Stata's tabulate functionality"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Operating System :: OS Independent",
]
keywords = ["tabulation", "crosstab", "statistics", "stata", "pandas", "data analysis"]
dependencies = [
    "pandas>=1.0.0",
    "numpy>=1.18.0",
    "scipy>=1.4.0",
    "matplotlib>=3.0.0",
    "seaborn>=0.11.0",
    "tabulate>=0.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
]
docs = [
    "sphinx>=3.0",
    "sphinx-rtd-theme>=0.5",
    "nbsphinx>=0.7",
    "jupyter>=1.0",
]

[project.urls]
"Homepage" = "https://github.com/brycewang-stanford/pdtab"
"Bug Reports" = "https://github.com/brycewang-stanford/pdtab/issues"
"Source" = "https://github.com/brycewang-stanford/pdtab"
"Documentation" = "https://pdtab.readthedocs.io/"

[project.scripts]
pdtab-cli = "pdtab.cli:main"

[tool.setuptools]
packages = ["pdtab", "pdtab.core", "pdtab.stats", "pdtab.utils", "pdtab.viz"]
include-package-data = true

[tool.setuptools.package-data]
pdtab = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["pdtab"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "scipy.*",
]
ignore_missing_imports = true
