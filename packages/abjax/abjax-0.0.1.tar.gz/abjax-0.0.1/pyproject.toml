[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "abjax"
version = "0.0.1"
description = "High-performance Python library for AB testing analysis with JAX and FastAPI"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "ABJAX Team" },
]
keywords = ["ab-testing", "statistics", "jax", "cuped", "variance-reduction"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core dependencies
dependencies = [
    "jax>=0.4.20",
    "jaxlib>=0.4.20",
    "polars>=0.19.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pydantic>=2.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "pandas>=2.3.1",
    "matplotlib>=3.9.4",
    "seaborn>=0.13.2",
]

[dependency-groups]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "hypothesis>=6.70",
    "black>=23.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
    "mypy>=1.0",
    "coverage>=7.10.1",
    "ipykernel>=6.30.0",
    "poethepoet>=0.36.0",
]

# Optional dependencies
[project.optional-dependencies]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.2",
    "myst-parser>=2.0",
    "nbsphinx>=0.9",
]
jupyter = [
    "jupyter>=1.0",
    "matplotlib>=3.6",
    "seaborn>=0.12",
    "plotly>=5.0",
]
all = ["abjax[docs,jupyter]"]

[project.urls]
Homepage = "https://github.com/your-org/abjax"
Documentation = "https://abjax.readthedocs.io"
Repository = "https://github.com/your-org/abjax"
"Bug Tracker" = "https://github.com/your-org/abjax/issues"

# Hatch configuration
[tool.hatch.version]
path = "src/abjax/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/abjax"]

# Development tools configuration
[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["abjax"]
force-single-line = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "statistical: marks tests that validate statistical correctness",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "jax.*",
    "jaxlib.*",
    "polars.*",
    "scipy.*",
]
ignore_missing_imports = true


[tool.poe.tasks]
coverage = "coverage run -m pytest"