#!/usr/bin/env python
# -*-coding:utf-8 -*-
"""
  ████
██    ██   Datature
  ██  ██   Powering Breakthrough AI
    ██

@File    :   colors.py
@Author  :   Wei Loon Cheng
@Contact :   developers@datature.io
@License :   Apache License 2.0
@Desc    :   Color utilities.
"""


def get_color_for_label_id(color_id: int):
    """Get color for tag ID."""

    if color_id == 0:
        return "#000000"

    switcher = [
        "#3D5AFE",
        "#9BBF30",
        "#7157D9",
        "#2965CC",
        "#29A634",
        "#D13913",
        "#8F398F",
        "#96622D",
        "#00B3A4",
        "#DB2C6F",
        "#FFCDD2",
        "#6200EA",
        "#29B6F6",
        "#F57F17",
        "#5C6BC0",
        "#0288D1",
        "#AD1457",
        "#FF7043",
        "#D500F9",
        "#EF9A9A",
        "#A5D6A7",
        "#00BCD4",
        "#651FFF",
        "#AA00FF",
        "#B39DDB",
        "#FFC400",
        "#80CBC4",
        "#CDDC39",
        "#82B1FF",
        "#AFB42B",
        "#1A237E",
        "#76FF03",
        "#EF5350",
        "#E6EE9C",
        "#BCAAA4",
        "#FFEE58",
        "#2E7D32",
        "#EEFF41",
        "#303F9F",
        "#F48FB1",
        "#FFD600",
        "#BF360C",
        "#FFAB91",
        "#795548",
        "#64B5F6",
        "#64DD17",
        "#009688",
        "#FF3D00",
        "#E0E0E0",
        "#F50057",
        "#FF5722",
        "#B9F6CA",
        "#5E35B1",
        "#6A1B9A",
        "#8E24AA",
        "#BDBDBD",
        "#2962FF",
        "#FF5252",
        "#C6FF00",
        "#FF6F00",
        "#33691E",
        "#DCE775",
        "#64FFDA",
        "#FBC02D",
        "#4CAF50",
        "#69F0AE",
        "#C2185B",
        "#283593",
        "#4A148C",
        "#C0CA33",
        "#263238",
        "#D81B60",
        "#5D4037",
        "#FB8C00",
        "#9CCC65",
        "#B2FF59",
        "#CE93D8",
        "#FFB74D",
        "#FFC107",
        "#E040FB",
        "#7E57C2",
        "#26C6DA",
        "#E53935",
        "#558B2F",
        "#FFAB40",
        "#03A9F4",
        "#388E3C",
        "#546E7A",
        "#311B92",
        "#4DB6AC",
        "#FFA726",
        "#B388FF",
        "#8C9EFF",
        "#FF9800",
        "#4DD0E1",
        "#FFE082",
        "#1565C0",
        "#18FFFF",
        "#66BB6A",
        "#FFD740",
        "#EA80FC",
        "#FFAB00",
        "#FFD54F",
        "#827717",
        "#EF6C00",
        "#7986CB",
        "#AB47BC",
        "#6D4C41",
        "#E57373",
        "#F06292",
        "#004D40",
        "#B71C1C",
        "#0277BD",
        "#F57C00",
        "#512DA8",
        "#8BC34A",
        "#FDD835",
        "#DD2C00",
        "#FF9E80",
        "#FF9100",
        "#3E2723",
        "#689F38",
        "#448AFF",
        "#880E4F",
        "#424242",
        "#FF8F00",
        "#1B5E20",
        "#26A69A",
        "#00897B",
        "#757575",
        "#00BFA5",
        "#01579B",
        "#81C784",
        "#FF6D00",
        "#455A64",
        "#0097A7",
        "#FFF59D",
        "#9E9D24",
        "#607D8B",
        "#536DFE",
        "#FF80AB",
        "#FF6E40",
        "#E64A19",
        "#90CAF9",
        "#84FFFF",
        "#F9A825",
        "#4E342E",
        "#FFFF8D",
        "#673AB7",
        "#81D4FA",
        "#C5E1A5",
        "#40C4FF",
        "#FF1744",
        "#78909C",
        "#00B8D4",
        "#1976D2",
        "#00E5FF",
        "#FFCC80",
        "#FFB300",
        "#9FA8DA",
        "#CCFF90",
        "#7CB342",
        "#E91E63",
        "#D4E157",
        "#00ACC1",
        "#EEEEEE",
        "#212121",
        "#FF8A80",
        "#FFD180",
        "#9C27B0",
        "#D32F2F",
        "#AED581",
        "#B0BEC5",
        "#3F51B5",
        "#FFEB3B",
        "#7C4DFF",
        "#FFE57F",
        "#3949AB",
        "#FFCA28",
        "#1DE9B6",
        "#FF4081",
        "#FFF176",
        "#80D8FF",
        "#2196F3",
        "#EC407A",
        "#2979FF",
        "#BA68C8",
        "#D84315",
        "#00838F",
        "#FF8A65",
        "#F4FF81",
        "#039BE5",
        "#43A047",
        "#00796B",
        "#FFA000",
        "#FFFF00",
        "#00C853",
        "#9E9E9E",
        "#00695C",
        "#37474F",
        "#7B1FA2",
        "#A1887F",
        "#90A4AE",
        "#006064",
        "#4FC3F7",
        "#D50000",
        "#616161",
        "#4527A0",
        "#304FFE",
        "#9575CD",
        "#C51162",
        "#FFEA00",
        "#A7FFEB",
        "#C62828",
        "#F44336",
        "#0D47A1",
        "#0091EA",
        "#00B0FF",
        "#80DEEA",
        "#8D6E63",
        "#E65100",
        "#00E676",
        "#1E88E5",
        "#F4511E",
        "#42A5F5",
        "#AEEA00",
    ]
    number = int(color_id) % len(switcher)
    hexcolor = switcher[number]

    return hexcolor


def hex_to_bgr(hex_color: str) -> tuple:
    """Convert hex color string to BGR tuple for OpenCV."""
    # Remove '#' if present
    hex_color = hex_color.lstrip("#")

    # Convert hex to RGB
    rgb = tuple(int(hex_color[i : i + 2], 16) for i in (0, 2, 4))

    # Return BGR (reverse RGB)
    return rgb[::-1]
