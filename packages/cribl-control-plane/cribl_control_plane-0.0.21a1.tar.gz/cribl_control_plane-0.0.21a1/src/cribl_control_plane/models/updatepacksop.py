"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, QueryParamMetadata
import io
from typing import Any, Dict, IO, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdatePacksRequestTypedDict(TypedDict):
    size: int
    r"""Size of the pack file in bytes"""
    request_body: Union[bytes, IO[bytes], io.BufferedReader]
    r"""file data"""
    filename: NotRequired[str]
    r"""the file to upload"""


class UpdatePacksRequest(BaseModel):
    size: Annotated[
        int, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""Size of the pack file in bytes"""

    request_body: Annotated[
        Union[bytes, IO[bytes], io.BufferedReader], FieldMetadata(request=True)
    ]
    r"""file data"""

    filename: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""the file to upload"""


class UpdatePacksResponseTypedDict(TypedDict):
    r"""a list of any objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[Dict[str, Any]]]


class UpdatePacksResponse(BaseModel):
    r"""a list of any objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Dict[str, Any]]] = None
