[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "django-mercury-performance"
version = "0.0.1"
description = "A performance testing framework for Django that helps you understand and fix performance issues, not just detect them"
readme = "README.md"
authors = [
    {name = "Django Mercury Team", email = "mercury@djangoperformance.dev"}
]
maintainers = [
    {name = "Django Mercury Team", email = "mercury@djangoperformance.dev"}
]
license = "GPL-3.0-or-later"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Software Development :: Quality Assurance",
]
keywords = [
    "django",
    "performance",
    "testing",
    "monitoring",
    "optimization",
    "n+1",
    "queries",
    "profiling",
    "mercury",
    "rest-framework",
    "api",
    "benchmarking"
]

dependencies = [
    "Django>=3.2,<6.0",
    "djangorestframework>=3.12.0",
    "psutil>=5.8.0",
    "memory-profiler>=0.60.0",
    "colorlog>=6.6.0",
    "jsonschema>=4.0.0",
]

[project.optional-dependencies]
rich = ["rich>=12.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "flake8>=4.0.0",
    "ruff>=0.1.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
]
debug = [
    "django-debug-toolbar>=3.2.0",
    "django-silk>=4.3.0",
]

[project.urls]
Homepage = "https://github.com/Django-Mercury/Performance-Testing"
Documentation = "https://github.com/Django-Mercury/Performance-Testing#readme"
Repository = "https://github.com/Django-Mercury/Performance-Testing.git"
"Bug Tracker" = "https://github.com/Django-Mercury/Performance-Testing/issues"
Changelog = "https://github.com/Django-Mercury/Performance-Testing/blob/main/CHANGELOG.md"

[project.scripts]
mercury-analyze = "django_mercury.python_bindings.cli:main"

[tool.setuptools]
packages = [
    "django_mercury", 
    "django_mercury.python_bindings", 
    "django_mercury.c_core",
    "django_mercury.documentation",
    "django_mercury.examples"
]
include-package-data = true

[tool.setuptools.package-data]
"django_mercury" = [
    "*.md",
    "py.typed",
]
"django_mercury.c_core" = [
    "*.c",
    "*.h",
    "*.so",
    "Makefile",
    "BUILD.md",
]
"django_mercury.python_bindings" = ["*.py"]
"django_mercury.documentation" = ["*.md"]
"django_mercury.examples" = ["*.py"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
  | \.egg-info
  | migrations
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip = ["venv", ".venv", "migrations"]
known_django = ["django", "rest_framework"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "venv/",
    ".venv/",
    "build/",
    "dist/",
    "tests/",
    "migrations/",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--cov=django_mercury",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "*.egg-info",
    "migrations",
]

[tool.coverage.run]
source = ["django_mercury"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]