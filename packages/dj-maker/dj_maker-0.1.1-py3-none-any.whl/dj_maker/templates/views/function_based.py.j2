"""
Function-based views for {{ app_name }} app
Generated by DJ Maker CLI
"""

from django.shortcuts import render, get_object_or_404, redirect
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.http import HttpRequest, HttpResponse
from typing import Dict, Any

from .models import {{ model_name }}
from .forms import {{ model_name }}Form


def {{ model_name_lower }}_list(request: HttpRequest) -> HttpResponse:
    """List all {{ model_name_lower }}s"""
    {{ model_name_lower }}s = {{ model_name }}.objects.all()

    context: Dict[str, Any] = {
        '{{ model_name_lower }}s': {{ model_name_lower }}s,
    }

    return render(request, '{{ app_name }}/{{ model_name_lower }}_list.html', context)


def {{ model_name_lower }}_detail(request: HttpRequest, pk: int) -> HttpResponse:
    """Show {{ model_name_lower }} detail"""
    {{ model_name_lower }} = get_object_or_404({{ model_name }}, pk=pk)

    context: Dict[str, Any] = {
        '{{ model_name_lower }}': {{ model_name_lower }},
    }

    return render(request, '{{ app_name }}/{{ model_name_lower }}_detail.html', context)


@login_required
def {{ model_name_lower }}_create(request: HttpRequest) -> HttpResponse:
    """Create new {{ model_name_lower }}"""
    if request.method == 'POST':
        form = {{ model_name }}Form(request.POST)
        if form.is_valid():
            {{ model_name_lower }} = form.save()
            messages.success(request, f'{{ model_name }} "{{{ model_name_lower }}}" was created successfully.')
            return redirect('{{ app_name }}:{{ model_name_lower }}-detail', pk={{ model_name_lower }}.pk)
    else:
        form = {{ model_name }}Form()

    context: Dict[str, Any] = {
        'form': form,
        'title': 'Create {{ model_name }}',
    }

    return render(request, '{{ app_name }}/{{ model_name_lower }}_form.html', context)


@login_required
def {{ model_name_lower }}_update(request: HttpRequest, pk: int) -> HttpResponse:
    """Update existing {{ model_name_lower }}"""
    {{ model_name_lower }} = get_object_or_404({{ model_name }}, pk=pk)

    if request.method == 'POST':
        form = {{ model_name }}Form(request.POST, instance={{ model_name_lower }})
        if form.is_valid():
            {{ model_name_lower }} = form.save()
            messages.success(request, f'{{ model_name }} "{{{ model_name_lower }}}" was updated successfully.')
            return redirect('{{ app_name }}:{{ model_name_lower }}-detail', pk={{ model_name_lower }}.pk)
    else:
        form = {{ model_name }}Form(instance={{ model_name_lower }})

    context: Dict[str, Any] = {
        'form': form,
        '{{ model_name_lower }}': {{ model_name_lower }},
        'title': f'Update {{ model_name }} "{{{ model_name_lower }}}"',
    }

    return render(request, '{{ app_name }}/{{ model_name_lower }}_form.html', context)


@login_required
def {{ model_name_lower }}_delete(request: HttpRequest, pk: int) -> HttpResponse:
    """Delete {{ model_name_lower }}"""
    {{ model_name_lower }} = get_object_or_404({{ model_name }}, pk=pk)

    if request.method == 'POST':
        name = str({{ model_name_lower }})
        {{ model_name_lower }}.delete()
        messages.success(request, f'{{ model_name }} "{name}" was deleted successfully.')
        return redirect('{{ app_name }}:{{ model_name_lower }}-list')

    context: Dict[str, Any] = {
        '{{ model_name_lower }}': {{ model_name_lower }},
        'title': f'Delete {{ model_name }} "{{{ model_name_lower }}}"',
    }

    return render(request, '{{ app_name }}/{{ model_name_lower }}_confirm_delete.html', context)


def index(request: HttpRequest) -> HttpResponse:
    """{{ app_name }} app index view"""
    return redirect('{{ app_name }}:{{ model_name_lower }}-list')
