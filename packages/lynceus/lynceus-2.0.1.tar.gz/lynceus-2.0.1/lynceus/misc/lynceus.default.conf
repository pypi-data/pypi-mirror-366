[General]
; Level of root logger should be at least the 'minimal' of any handlers
;  otherwise it will filter message before reaching them.
logger.root.level=TRACE

; List of optional flavor (aka type/category) of additional configuration file to load with **`{salt}_{flavor}.conf`** name
conf_flavor_list_json_dump=["storages", "credentials"]

[StorageConfiguration]
work_dir=/tmp/lynceus_workdir

; Fine-tuned Loggers configuration.
; Cf. https://docs.python.org/3.10/library/logging.config.html#logging-config-fileformat
[loggers]
# See following documentation to define/understand used logger names:
keys=root, ubeeko, modelscoring, hfactory, tests, aiobotocore, asyncio, blib2to3, botocore, docstr_coverage, flake8, httpx, pylint, s3fs, urllib3

[handlers]
keys=file, console_out, console_err

[formatters]
keys=default

[logger_root]
; Level of root logger should be at least the 'minimal' of any handlers.
level=DEBUG
handlers=file, console_out, console_err

[handler_file]
; Logs from DEBUG messages in file.
class=FileHandler
level=DEBUG
formatter=default
; N.B.: use 'w' to override file each time a process is running, use 'a' to append to potential existing file to avoid log lost.
args=('/tmp/lynceus.log', 'a')

[handler_console_out]
; N.B.: lynceus.core.logger_utils.FilteredStdoutLoggerHandler is a special class allowing to filter out messages from Warning.
; Thus, with combination of a dedicated 'console error handler' configuration, it allows to have:
;  - warning, error and critical messages log on stderr
;  - the others messages on stdout
class=lynceus.core.logger_utils.FilteredStdoutLoggerHandler
args=(sys.stdout,)
; Logs only from INFO messages to console out (can be overriden by dedicated project configuration file).
level=INFO
formatter=default

[handler_console_err]
class=StreamHandler
args=(sys.stderr,)
level=WARNING
formatter=default

[formatter_default]
style={
format={asctime:20} {name:16} {levelname:8} {message}
datefmt=%Y/%m/%d %H:%M:%S

# Important: defines default level of all loggers to DEBUG which allows:
#  - having all DEBUG messages for FileHandler
#  - logging still only from INFO messages in console stdout thanks to default configuration of handler_console_out
[logger_ubeeko]
level=DEBUG
handlers=
qualname=Ubeeko

[logger_modelscoring]
level=DEBUG
handlers=
qualname=modelScoring

[logger_hfactory]
level=DEBUG
handlers=
qualname=Hfactory

[logger_tests]
level=DEBUG
handlers=
qualname=tests

[logger_aiobotocore]
level=DEBUG
handlers=
qualname=aiobotocore

[logger_asyncio]
level=DEBUG
handlers=
qualname=asyncio

[logger_blib2to3]
level=DEBUG
handlers=
qualname=blib2to3

[logger_botocore]
level=DEBUG
handlers=
qualname=botocore

[logger_docstr_coverage]
level=DEBUG
handlers=
qualname=docstr_coverage

[logger_flake8]
level=DEBUG
handlers=
qualname=flake8

[logger_httpx]
level=DEBUG
handlers=
qualname=httpx

[logger_pylint]
level=DEBUG
handlers=
qualname=pylint

[logger_s3fs]
level=DEBUG
handlers=
qualname=s3fs

# Cf. https://requests.readthedocs.io/en/latest/api/#api-changes
[logger_urllib3]
level=DEBUG
handlers=
qualname=urllib3
