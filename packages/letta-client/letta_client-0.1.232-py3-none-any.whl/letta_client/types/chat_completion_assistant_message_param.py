# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .audio import Audio
from .chat_completion_assistant_message_param_content import ChatCompletionAssistantMessageParamContent
from .function_call import FunctionCall
from .chat_completion_message_tool_call_param import ChatCompletionMessageToolCallParam
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ChatCompletionAssistantMessageParam(UncheckedBaseModel):
    role: typing.Literal["assistant"] = "assistant"
    audio: typing.Optional[Audio] = None
    content: typing.Optional[ChatCompletionAssistantMessageParamContent] = None
    function_call: typing.Optional[FunctionCall] = None
    name: typing.Optional[str] = None
    refusal: typing.Optional[str] = None
    tool_calls: typing.Optional[typing.List[ChatCompletionMessageToolCallParam]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
