# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing
from .client_side_access_tokens_list_client_side_access_tokens_response_tokens_item import (
    ClientSideAccessTokensListClientSideAccessTokensResponseTokensItem,
)
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ClientSideAccessTokensListClientSideAccessTokensResponse(UncheckedBaseModel):
    tokens: typing.List[ClientSideAccessTokensListClientSideAccessTokensResponseTokensItem]
    has_next_page: typing_extensions.Annotated[bool, FieldMetadata(alias="hasNextPage")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
