name: Production Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      confirm_release:
        description: 'Type "release" to confirm production release'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_release == 'release')

    steps:
    - uses: actions/checkout@v4

    - name: Validate version tag
      if: github.event_name == 'push'
      run: |
        VERSION=$(grep -oP 'version = "\K[^"]+' pyproject.toml)
        TAG_VERSION="${GITHUB_REF_NAME#v}"
        if [[ "$VERSION" != "$TAG_VERSION" ]]; then
          echo "Error: Package version ($VERSION) does not match tag ($TAG_VERSION)"
          exit 1
        fi

  build-and-test:
    name: Build and Test
    needs: validate-release
    uses: ./.github/workflows/ci.yml

  publish-pypi:
    name: Publish to PyPI
    needs: [validate-release, build-and-test]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/bedrock-agentcore-starter-toolkit

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-packages
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'push'
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') }}
