[tool.poetry]
name = "vivre"
version = "0.1.0"
description = "A Python library for machine learning and corpus linguistics"
authors = ["Aniket Dixit <aniketdixit00.ani@gmail.com>"]
readme = "README.md"
packages = [
    {include = "vivre", from = "src"}
]

[tool.poetry.scripts]
vivre = "vivre.cli:app"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
requests = "^2.32.4"
# Pytest was removed from here - it's a dev dependency.
ebooklib = "^0.19"
nltk = "^3.9.1"
spacy = "^3.8.7"
numpy = "^2.3.1"
typer = "^0.16.0"
rich = "^14.0.0"
defusedxml = "^0.7.1"
scipy = "^1.16.0"
langdetect = "^1.0.9"
beautifulsoup4 = "^4.13.4"
lxml = "^6.0.0"

[tool.poetry.group.dev.dependencies]
# flake8 and isort were removed - their functionality is now in ruff.
black = "^25.1.0"
mypy = "^1.17.0"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
ruff = "^0.12.4" # This now handles linting and import sorting.
pre-commit = "^4.2.0"
bandit = "^1.7.5"
safety = "^2.3.5"
types-defusedxml = "^0.7"
scipy-stubs = "^1.16.0.2"
pytest-xdist = "^3.8.0"


# --- NEW/MODIFIED TOOL CONFIGURATIONS ---
sphinx = "^8.2.3"
furo = "^2025.7.19"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
# Replaces flake8. Selects all the standard rules (E, F, W) and import rules (I).
select = ["E", "F", "W", "I"]
ignore = []

[tool.ruff.format]
# Replaces isort.
quote-style = "double"
indent-style = "space"

[tool.mypy]
# Adds consistent, strict type checking rules.
strict = false
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
# This points mypy to the stubs for better type checking of these libraries.
# plugins = ["numpy.typing.mypy_plugin"]

# Exclude test files from strict type checking
[[tool.mypy.overrides]]
module = "tests.*"
strict = false

[tool.coverage.run]
source = ["src/vivre"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
# This section is now much cleaner. Use `# pragma: no cover` in your code instead.
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "raise NotImplementedError",
    "@(abc\\.)?abstractmethod",
]

[tool.safety]
# Configure safety to be more resilient to network issues
timeout = 30
retries = 3

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.docs.dependencies]
sphinx = "^8.2.3"
furo = "^2025.7.19"
