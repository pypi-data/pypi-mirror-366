[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "esologs-python"
version = "0.2.0b1"
description = "A Python client library for the ESO Logs API v2"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nick Knowles"},
]
keywords = [
    "eso", "elder-scrolls-online", "esologs", "api", "graphql",
    "combat-logs", "mmorpg", "gaming", "api-client", "python"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "ariadne-codegen>=0.6.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.0.0",
    "pytest-rerunfailures>=13.0",
    "pytest-xdist>=3.0.0",
    "pytest-httpx>=0.21.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=2.0.0",
    "types-requests>=2.25.0",
    "types-aiofiles>=23.0.0",
    "responses>=0.23.0",
    "esologs-python[docs]",  # Include all docs dependencies for sitemap tests
]
websockets = [
    "websockets>=11.0.0",
]
pandas = [
    "pandas>=1.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-minify-plugin>=0.7.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "pymdown-extensions>=10.0.0",
]
all = [
    "esologs-python[dev,websockets,pandas,docs]",
]

[project.urls]
Homepage = "https://github.com/knowlen/esologs-python"
Repository = "https://github.com/knowlen/esologs-python"
Issues = "https://github.com/knowlen/esologs-python/issues"
Documentation = "https://esologs-python.readthedocs.io/"
Changelog = "https://github.com/knowlen/esologs-python/wiki/Changelog"
Wiki = "https://github.com/knowlen/esologs-python/wiki"

[tool.setuptools.packages.find]
where = ["."]
include = ["esologs*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | esologs/_generated  # Exclude all generated files
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
extend_skip_glob = ["esologs/_generated/**"]

[tool.ruff]
line-length = 88
target-version = "py38"
extend-exclude = [
    "esologs/_generated/**",  # Exclude all generated files
]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "esologs._generated.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=esologs",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "timeout: marks tests with timeout requirements",
    "oauth2: marks tests that require OAuth2 configuration (deselect with '-m \"not oauth2\"')",
]
asyncio_mode = "auto"
filterwarnings = [
    # Ignore deprecation warnings from generated websockets code
    "ignore:websockets.client.WebSocketClientProtocol is deprecated:DeprecationWarning",
    "ignore:websockets.legacy is deprecated:DeprecationWarning",
    "ignore:websockets.client.connect is deprecated:DeprecationWarning",
]

[tool.coverage.run]
source = ["esologs"]
omit = [
    "*/tests/*",
    "*/test_*",
    "esologs/_generated/**",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
