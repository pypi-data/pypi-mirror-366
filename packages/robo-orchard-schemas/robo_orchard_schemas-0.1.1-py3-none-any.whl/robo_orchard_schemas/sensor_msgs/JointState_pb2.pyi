"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Project RoboOrchard

Copyright (c) 2025 Horizon Robotics. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing
permissions and limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class JointState(google.protobuf.message.Message):
    """The JointState message that expresses sensor_msgs/JointState in
    ros2.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FRAME_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    VELOCITY_FIELD_NUMBER: builtins.int
    EFFORT_FIELD_NUMBER: builtins.int
    frame_id: builtins.str
    """frame_id is used to represent the transform frame of the joint.
    Usually the frame id of the joint is the same as joint name.
    We still keep it for the compatibility with the ROS message.
    """
    name: builtins.str
    """The name of the joint, usually the same as the frame id."""
    position: builtins.float
    """The position of the joint"""
    velocity: builtins.float
    """The velocity of the joint"""
    effort: builtins.float
    """The effort of the joint"""
    def __init__(
        self,
        *,
        frame_id: builtins.str | None = ...,
        name: builtins.str | None = ...,
        position: builtins.float | None = ...,
        velocity: builtins.float | None = ...,
        effort: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_effort", b"_effort", "_frame_id", b"_frame_id", "_name", b"_name", "_position", b"_position", "_velocity", b"_velocity", "effort", b"effort", "frame_id", b"frame_id", "name", b"name", "position", b"position", "velocity", b"velocity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_effort", b"_effort", "_frame_id", b"_frame_id", "_name", b"_name", "_position", b"_position", "_velocity", b"_velocity", "effort", b"effort", "frame_id", b"frame_id", "name", b"name", "position", b"position", "velocity", b"velocity"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_effort", b"_effort"]) -> typing.Literal["effort"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_frame_id", b"_frame_id"]) -> typing.Literal["frame_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_name", b"_name"]) -> typing.Literal["name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_position", b"_position"]) -> typing.Literal["position"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_velocity", b"_velocity"]) -> typing.Literal["velocity"] | None: ...

global___JointState = JointState

@typing.final
class JointStateStamped(google.protobuf.message.Message):
    """The JointState with timestamp."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time of the header"""

    @property
    def state(self) -> global___JointState:
        """The name of the joint"""

    def __init__(
        self,
        *,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        state: global___JointState | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["state", b"state", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["state", b"state", "timestamp", b"timestamp"]) -> None: ...

global___JointStateStamped = JointStateStamped

@typing.final
class MultiJointStateStamped(google.protobuf.message.Message):
    """Multiple JointState with the same timestamp."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    STATES_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time of the header"""

    @property
    def states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___JointState]:
        """The name of the joint"""

    def __init__(
        self,
        *,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        states: collections.abc.Iterable[global___JointState] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["states", b"states", "timestamp", b"timestamp"]) -> None: ...

global___MultiJointStateStamped = MultiJointStateStamped
