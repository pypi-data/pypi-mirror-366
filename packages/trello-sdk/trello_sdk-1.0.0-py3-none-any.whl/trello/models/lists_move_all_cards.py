# -*- coding: utf-8 -*-

"""
trello

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from trello.api_helper import APIHelper


class ListsMoveAllCards(object):

    """Implementation of the 'lists_moveAllCards' model.

    Attributes:
        id_board (str): id of the board that the cards should be moved to

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id_board": 'idBoard'
    }

    _optionals = [
        'id_board',
    ]

    def __init__(self,
                 id_board=APIHelper.SKIP):
        """Constructor for the ListsMoveAllCards class"""

        # Initialize members of the class
        if id_board is not APIHelper.SKIP:
            self.id_board = id_board 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id_board = dictionary.get("idBoard") if dictionary.get("idBoard") else APIHelper.SKIP
        # Return an object of this model
        return cls(id_board)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id_board={(self.id_board if hasattr(self, "id_board") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id_board={(self.id_board if hasattr(self, "id_board") else None)!s})')
