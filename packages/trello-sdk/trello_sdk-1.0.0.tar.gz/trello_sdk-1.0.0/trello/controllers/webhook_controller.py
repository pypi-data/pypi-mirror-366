# -*- coding: utf-8 -*-

"""
trello

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from trello.api_helper import APIHelper
from trello.configuration import Server
from trello.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from trello.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.or_auth_group import Or
from trello.exceptions.api_exception import APIException


class WebhookController(BaseController):

    """A Controller to access Endpoints in the trello API."""
    def __init__(self, config):
        super(WebhookController, self).__init__(config)

    def add_webhooks(self,
                     key,
                     token,
                     body):
        """Does a POST request to /webhooks.

        Args:
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (Webhooks): Attributes of "Webhooks" to be added.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks')
            .http_method(HttpMethodEnum.POST)
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def update_webhooks(self,
                        key,
                        token,
                        body):
        """Does a PUT request to /webhooks/.

        Args:
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (Webhooks): Attributes of "Webhooks" to be updated.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def delete_webhooks_by_id_webhook(self,
                                      id_webhook,
                                      key,
                                      token):
        """Does a DELETE request to /webhooks/{idWebhook}.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def get_webhooks_by_id_webhook(self,
                                   id_webhook,
                                   key,
                                   token):
        """Does a GET request to /webhooks/{idWebhook}.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def update_webhooks_by_id_webhook(self,
                                      id_webhook,
                                      key,
                                      token,
                                      body):
        """Does a PUT request to /webhooks/{idWebhook}.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (Webhooks): Attributes of "Webhooks" to be updated.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def update_webhooks_active_by_id_webhook(self,
                                             id_webhook,
                                             key,
                                             token,
                                             body):
        """Does a PUT request to /webhooks/{idWebhook}/active.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (WebhooksActive): Attributes of "Webhooks Active" to be
                updated.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}/active')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def update_webhooks_callback_url_by_id_webhook(self,
                                                   id_webhook,
                                                   key,
                                                   token,
                                                   body):
        """Does a PUT request to /webhooks/{idWebhook}/callbackURL.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (WebhooksCallbackURL): Attributes of "Webhooks Callback Url"
                to be updated.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}/callbackURL')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def update_webhooks_description_by_id_webhook(self,
                                                  id_webhook,
                                                  key,
                                                  token,
                                                  body):
        """Does a PUT request to /webhooks/{idWebhook}/description.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (WebhooksDescription): Attributes of "Webhooks Description"
                to be updated.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}/description')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def update_webhooks_id_model_by_id_webhook(self,
                                               id_webhook,
                                               key,
                                               token,
                                               body):
        """Does a PUT request to /webhooks/{idWebhook}/idModel.

        Args:
            id_webhook (str): idWebhook
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>
            body (WebhooksIdModel): Attributes of "Webhooks Id Model" to be
                updated.

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}/idModel')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('api_key'), Single('api_token')))
        ).execute()

    def get_webhooks_by_id_webhook_by_field(self,
                                            id_webhook,
                                            field,
                                            key,
                                            token):
        """Does a GET request to /webhooks/{idWebhook}/{field}.

        Args:
            id_webhook (str): idWebhook
            field (str): field
            key (str): <a href="https://trello.com/1/appKey/generate" 
                target="_blank">Generate your application key</a>
            token (str): <a
                href="https://trello.com/docs/gettingstarted/index.html#getting
                -a-token-from-a-user"  target="_blank">Getting a token from a
                user</a>

        Returns:
            void: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhooks/{idWebhook}/{field}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('idWebhook')
                            .value(id_webhook)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('field')
                            .value(field)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('key')
                         .value(key))
            .query_param(Parameter()
                         .key('token')
                         .value(token))
        ).execute()
