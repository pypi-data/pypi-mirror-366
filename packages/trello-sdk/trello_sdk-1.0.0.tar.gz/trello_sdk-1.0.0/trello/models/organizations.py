# -*- coding: utf-8 -*-

"""
trello

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from trello.api_helper import APIHelper


class Organizations(object):

    """Implementation of the 'organizations' model.

    Attributes:
        desc (str): a string with a length from 0 to 16384
        display_name (str): A string with a length of at least 1.  Cannot
            begin or end with a space.
        name (str): a string with a length from 0 to 16384
        prefs_associated_domain (str): The google apps domain to link this org
            to.
        prefs_board_visibility_restrict_org (str): One of: admin, none or org
        prefs_board_visibility_restrict_private (str): One of: admin, none or
            org
        prefs_board_visibility_restrict_public (str): One of: admin, none or
            org
        prefs_external_members_disabled (str): true or false
        prefs_google_apps_version (str): a number from 1 to 2
        prefs_org_invite_restrict (str): An email address with optional
            expansion tokens
        prefs_permission_level (str): One of: private or public
        website (str): A URL starting with http:// or https:// or null

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "desc": 'desc',
        "display_name": 'displayName',
        "name": 'name',
        "prefs_associated_domain": 'prefs/associatedDomain',
        "prefs_board_visibility_restrict_org": 'prefs/boardVisibilityRestrict/org',
        "prefs_board_visibility_restrict_private": 'prefs/boardVisibilityRestrict/private',
        "prefs_board_visibility_restrict_public": 'prefs/boardVisibilityRestrict/public',
        "prefs_external_members_disabled": 'prefs/externalMembersDisabled',
        "prefs_google_apps_version": 'prefs/googleAppsVersion',
        "prefs_org_invite_restrict": 'prefs/orgInviteRestrict',
        "prefs_permission_level": 'prefs/permissionLevel',
        "website": 'website'
    }

    _optionals = [
        'desc',
        'display_name',
        'name',
        'prefs_associated_domain',
        'prefs_board_visibility_restrict_org',
        'prefs_board_visibility_restrict_private',
        'prefs_board_visibility_restrict_public',
        'prefs_external_members_disabled',
        'prefs_google_apps_version',
        'prefs_org_invite_restrict',
        'prefs_permission_level',
        'website',
    ]

    def __init__(self,
                 desc=APIHelper.SKIP,
                 display_name=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 prefs_associated_domain=APIHelper.SKIP,
                 prefs_board_visibility_restrict_org=APIHelper.SKIP,
                 prefs_board_visibility_restrict_private=APIHelper.SKIP,
                 prefs_board_visibility_restrict_public=APIHelper.SKIP,
                 prefs_external_members_disabled=APIHelper.SKIP,
                 prefs_google_apps_version=APIHelper.SKIP,
                 prefs_org_invite_restrict=APIHelper.SKIP,
                 prefs_permission_level=APIHelper.SKIP,
                 website=APIHelper.SKIP):
        """Constructor for the Organizations class"""

        # Initialize members of the class
        if desc is not APIHelper.SKIP:
            self.desc = desc 
        if display_name is not APIHelper.SKIP:
            self.display_name = display_name 
        if name is not APIHelper.SKIP:
            self.name = name 
        if prefs_associated_domain is not APIHelper.SKIP:
            self.prefs_associated_domain = prefs_associated_domain 
        if prefs_board_visibility_restrict_org is not APIHelper.SKIP:
            self.prefs_board_visibility_restrict_org = prefs_board_visibility_restrict_org 
        if prefs_board_visibility_restrict_private is not APIHelper.SKIP:
            self.prefs_board_visibility_restrict_private = prefs_board_visibility_restrict_private 
        if prefs_board_visibility_restrict_public is not APIHelper.SKIP:
            self.prefs_board_visibility_restrict_public = prefs_board_visibility_restrict_public 
        if prefs_external_members_disabled is not APIHelper.SKIP:
            self.prefs_external_members_disabled = prefs_external_members_disabled 
        if prefs_google_apps_version is not APIHelper.SKIP:
            self.prefs_google_apps_version = prefs_google_apps_version 
        if prefs_org_invite_restrict is not APIHelper.SKIP:
            self.prefs_org_invite_restrict = prefs_org_invite_restrict 
        if prefs_permission_level is not APIHelper.SKIP:
            self.prefs_permission_level = prefs_permission_level 
        if website is not APIHelper.SKIP:
            self.website = website 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        desc = dictionary.get("desc") if dictionary.get("desc") else APIHelper.SKIP
        display_name = dictionary.get("displayName") if dictionary.get("displayName") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        prefs_associated_domain = dictionary.get("prefs/associatedDomain") if dictionary.get("prefs/associatedDomain") else APIHelper.SKIP
        prefs_board_visibility_restrict_org = dictionary.get("prefs/boardVisibilityRestrict/org") if dictionary.get("prefs/boardVisibilityRestrict/org") else APIHelper.SKIP
        prefs_board_visibility_restrict_private = dictionary.get("prefs/boardVisibilityRestrict/private") if dictionary.get("prefs/boardVisibilityRestrict/private") else APIHelper.SKIP
        prefs_board_visibility_restrict_public = dictionary.get("prefs/boardVisibilityRestrict/public") if dictionary.get("prefs/boardVisibilityRestrict/public") else APIHelper.SKIP
        prefs_external_members_disabled = dictionary.get("prefs/externalMembersDisabled") if dictionary.get("prefs/externalMembersDisabled") else APIHelper.SKIP
        prefs_google_apps_version = dictionary.get("prefs/googleAppsVersion") if dictionary.get("prefs/googleAppsVersion") else APIHelper.SKIP
        prefs_org_invite_restrict = dictionary.get("prefs/orgInviteRestrict") if dictionary.get("prefs/orgInviteRestrict") else APIHelper.SKIP
        prefs_permission_level = dictionary.get("prefs/permissionLevel") if dictionary.get("prefs/permissionLevel") else APIHelper.SKIP
        website = dictionary.get("website") if dictionary.get("website") else APIHelper.SKIP
        # Return an object of this model
        return cls(desc,
                   display_name,
                   name,
                   prefs_associated_domain,
                   prefs_board_visibility_restrict_org,
                   prefs_board_visibility_restrict_private,
                   prefs_board_visibility_restrict_public,
                   prefs_external_members_disabled,
                   prefs_google_apps_version,
                   prefs_org_invite_restrict,
                   prefs_permission_level,
                   website)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'desc={(self.desc if hasattr(self, "desc") else None)!r}, '
                f'display_name={(self.display_name if hasattr(self, "display_name") else None)!r}, '
                f'name={(self.name if hasattr(self, "name") else None)!r}, '
                f'prefs_associated_domain={(self.prefs_associated_domain if hasattr(self, "prefs_associated_domain") else None)!r}, '
                f'prefs_board_visibility_restrict_org={(self.prefs_board_visibility_restrict_org if hasattr(self, "prefs_board_visibility_restrict_org") else None)!r}, '
                f'prefs_board_visibility_restrict_private={(self.prefs_board_visibility_restrict_private if hasattr(self, "prefs_board_visibility_restrict_private") else None)!r}, '
                f'prefs_board_visibility_restrict_public={(self.prefs_board_visibility_restrict_public if hasattr(self, "prefs_board_visibility_restrict_public") else None)!r}, '
                f'prefs_external_members_disabled={(self.prefs_external_members_disabled if hasattr(self, "prefs_external_members_disabled") else None)!r}, '
                f'prefs_google_apps_version={(self.prefs_google_apps_version if hasattr(self, "prefs_google_apps_version") else None)!r}, '
                f'prefs_org_invite_restrict={(self.prefs_org_invite_restrict if hasattr(self, "prefs_org_invite_restrict") else None)!r}, '
                f'prefs_permission_level={(self.prefs_permission_level if hasattr(self, "prefs_permission_level") else None)!r}, '
                f'website={(self.website if hasattr(self, "website") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'desc={(self.desc if hasattr(self, "desc") else None)!s}, '
                f'display_name={(self.display_name if hasattr(self, "display_name") else None)!s}, '
                f'name={(self.name if hasattr(self, "name") else None)!s}, '
                f'prefs_associated_domain={(self.prefs_associated_domain if hasattr(self, "prefs_associated_domain") else None)!s}, '
                f'prefs_board_visibility_restrict_org={(self.prefs_board_visibility_restrict_org if hasattr(self, "prefs_board_visibility_restrict_org") else None)!s}, '
                f'prefs_board_visibility_restrict_private={(self.prefs_board_visibility_restrict_private if hasattr(self, "prefs_board_visibility_restrict_private") else None)!s}, '
                f'prefs_board_visibility_restrict_public={(self.prefs_board_visibility_restrict_public if hasattr(self, "prefs_board_visibility_restrict_public") else None)!s}, '
                f'prefs_external_members_disabled={(self.prefs_external_members_disabled if hasattr(self, "prefs_external_members_disabled") else None)!s}, '
                f'prefs_google_apps_version={(self.prefs_google_apps_version if hasattr(self, "prefs_google_apps_version") else None)!s}, '
                f'prefs_org_invite_restrict={(self.prefs_org_invite_restrict if hasattr(self, "prefs_org_invite_restrict") else None)!s}, '
                f'prefs_permission_level={(self.prefs_permission_level if hasattr(self, "prefs_permission_level") else None)!s}, '
                f'website={(self.website if hasattr(self, "website") else None)!s})')
