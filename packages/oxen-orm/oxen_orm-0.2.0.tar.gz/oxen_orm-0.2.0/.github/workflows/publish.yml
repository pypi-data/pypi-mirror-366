name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: manylinux_2_28_x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: win_amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macosx_10_9_x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macosx_11_0_arm64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin twine
    
    - name: Build wheels
      run: |
        maturin build --release --target ${{ matrix.target }} --out dist
        ls -la dist/
    
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.platform }}
        path: dist/
    
  publish:
    needs: build-and-publish
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all wheels
      uses: actions/download-artifact@v3
      with:
        path: dist/
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        ls -la dist/
        twine upload dist/* 