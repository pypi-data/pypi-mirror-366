[project]
name = "discord-ext-track-edits"
version = "0.1.0"
description = "A discord.py extension for automatic edit tracking"
readme = "README.md"
requires-python = ">=3.8"
dependencies = ["discord-py>=2.5.2", "typing-extensions>=4.13.2"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Chat",
    "Typing :: Typed",
]

[build-system]
requires = ["uv_build>=0.8.3,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = ["basedpyright>=1.31.0", "ruff>=0.12.7"]

[tool.uv.build-backend]
module-name = "discord.ext.track_edits"

[tool.basedpyright]
typeCheckingMode = "all"
disableBytesTypePromotions = false

[tool.ruff]
respect-gitignore = true
line-length = 90
namespace-packages = ["examples"]

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
    "ANN",     # flake8-annotations (covered by pyright)
    "EM",      # flake8-errmsg
    "FA100",   # future-rewritable-type-annotation
    "FIX",     # flake8-fixme
    "PLR0913", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison
    "PLR1722", # Use `sys.exit()` instead of `exit`
    "PLW2901", # `for` loop variable overwritten by assignment target
    "PLE0605", # Invalid format for `__all__`, must be `tuple` or `list` (covered by pyright)
    "PLR0911", # Too many return statements
    "PLW0603", # Using the global statement is discouraged
    "PLC0105", # `TypeVar` name does not reflect its covariance
    "PLC0414", # Import alias does not rename original package (used by pyright for explicit re-export)
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF013",  # PEP 484 prohibits implicit Optional (covered by pyright)
    "RUF016",  # Slice in indexed access to type (covered by pyright)
    "TD003",   # Missing issue link on the line following this TODO
    "TRY002",  # Create your own exception
    "TRY003",  # Avoid specifying long messages outside the exception class
    "D10",     # Missing docstring
    "D203",    # 1 blank line required before class docstring
    "D205",    # 1 blank line required between summary line and description
    "D209",    # Multi-line docstring closing quotes should be on a separate line
    "D212",    # Multi-line docstring summary should start at the first line
    "D213",    # Multi-line docstring summary should start at the second line
    "D400",    # First line should end with a period
    "D401",    # First line should be in imperative mood
    "D403",    # First word of the first line should be properly capitalized
    "D404",    # First word of the docstring should not be `This`
    "D405",    # Section name should be properly capitalized
    "D406",    # Section name should end with a newline
    "D415",    # First line should end with a period, question mark, or exclamation point
    "D418",    # Function/Method decorated with @overload shouldn't contain a docstring (vscode supports it)
    "PT013",   # Found incorrect import of pytest, use simple import pytest instead (only for bad linters that can't check the qualname)
    "TD002",   # Missing author in TODO
    "CPY001",  # missing-copyright-notice
    "C901",    # max-complexity
    "ISC001",  # single-line-implicit-string-concatenation (conflicts with formatter)
    "COM812",  # missing-trailing-comma (conflicts with formatter)
]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]
