name: 🛠️ CI & 🚀 Release

on:
  push:
    branches: [main]         # Run test_and_lint on main pushes
    tags: ['v*.*.*']         # Also allow tag pushes (for publish job)
  pull_request:
    branches: [main]         # Run test_and_lint on PRs targeting main
  workflow_dispatch:         # Optional: manual trigger support

jobs:
  tests:
    name: 🧪 Run Tests (Python 3.9-3.12)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: 🛎️ Checkout source
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📥 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest pytest-cov mypy
          pip install -e .

      - name: ✅ Run tests with coverage
        run: |
          pytest --cov=reflexsive --cov-config=pyproject.toml --cov-report=term --cov-report=xml

      - name: 🔍 Run type checks with mypy
        run: mypy src/reflexsive

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: 📦 Build and 🚀 Publish to PyPI
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/tags/v')  # ✅ Only on version tags
    environment: pypi

    steps:
      - name: 🛎️ Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 🛠️ Install build tools
        run: |
          pip install --upgrade pip
          pip install build twine setuptools_scm

      - name: 🏗️ Build the distribution
        run: python -m build

      - name: 🔍 Validate metadata
        run: twine check dist/*

      - name: 🚀 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
