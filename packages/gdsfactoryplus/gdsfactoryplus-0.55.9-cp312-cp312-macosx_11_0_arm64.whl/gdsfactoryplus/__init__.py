"""GDSFactory+."""

import sys
from pathlib import Path

if not any(Path(s).stem == "gfp" for s in sys.argv):
    from . import cli, serve
    from .core import (
        CWD,
        FINISHED_STATUSES,
        GFP_DIR,
        Conn,
        ParseError,
        ParseWarning,
        Schema,
        SpiceFlavor,
        Subckt,
        T,
        activate_pdk_by_name,
        bbox,
        build_cell,
        check_conn,
        check_drc,
        clear_cells_from_cache,
        cli_environment,
        export_spice,
        get,
        get_base_schema,
        get_cell_path,
        get_cells,
        get_custom_cell_names,
        get_download_url,
        get_module,
        get_netlist_schema,
        get_pdk_cell_names,
        get_ports,
        get_python_cells,
        get_yaml_cell_name,
        get_yaml_cell_path,
        get_yaml_cells,
        get_yaml_paths,
        ignore_prints,
        import_module_from_path,
        import_pdk,
        import_pdk_from_path,
        import_python_modules,
        is_cell,
        is_from_module,
        list_cells_from_regex,
        load_kcl,
        lvs_categories,
        maybe,
        maybe_open,
        merge_rdb_strings,
        optical_lvs,
        parse_oc_spice,
        print_to_file,
        register_cells,
        run,
        save_kcl,
        send_error,
        send_message,
        show,
        show_cell,
        start,
        status,
        upload_input,
        validate_access,
    )
    from .explore import (
        classify_cells,
        find_composite,
        find_fixed,
        find_good_sinks,
        find_sinks,
        find_unconnected,
        find_without_ports,
        get_node_colors,
        get_pdk_graph,
        get_top_level_cells,
        plot_pdk_relations,
    )
    from .generate_svg import (
        generate_svg,
        get_svg,
    )
    from .logger import (
        fix_log_line_numbers,
        get_logger,
    )
    from .models import (
        DoItForMe,
        ErrorMessage,
        Message,
        MimeType,
        RefreshTreesMessage,
        ReloadLayoutMessage,
        ReloadSchematicMessage,
        Result,
        ShowMessage,
        SimulationConfig,
        SimulationData,
        ensure_recursive_netlist,
    )
    from .project import (
        find_docode_project_dir,
        maybe_find_docode_project_dir,
    )
    from .serve import (
        app,
        code,
        doitforme_get,
        doitforme_post,
        get_netlist,
        list_custom,
        on_created,
        on_deleted,
        on_modified,
        pdk,
        plot_html,
        plot_json,
        ports,
        ports_extended,
        post_netlist,
        project_dir,
        redirect,
        routing_strategies,
        save_gds,
        settings,
        simulate,
        svg,
        tree,
        tree_item,
        view2,
        websocket_client,
    )
    from .settings import (
        ApiSettings,
        Arange,
        DrcSettings,
        GptSettings,
        KwebSettings,
        Linspace,
        PdkSettings,
        Settings,
        SimSettings,
        get_settings,
    )
    from .version import __version__

    __all__ = [  # noqa: RUF022
        "ApiSettings",
        "Arange",
        "CWD",
        "Conn",
        "DoItForMe",
        "DrcSettings",
        "ErrorMessage",
        "FINISHED_STATUSES",
        "GFP_DIR",
        "GptSettings",
        "KwebSettings",
        "Linspace",
        "Message",
        "MimeType",
        "ParseError",
        "ParseWarning",
        "PdkSettings",
        "RefreshTreesMessage",
        "ReloadLayoutMessage",
        "ReloadSchematicMessage",
        "Result",
        "Schema",
        "Settings",
        "ShowMessage",
        "SimSettings",
        "SimulationConfig",
        "SimulationData",
        "SpiceFlavor",
        "Subckt",
        "T",
        "__version__",
        "activate_pdk_by_name",
        "app",
        "bbox",
        "build_cell",
        "check_conn",
        "check_drc",
        "classify_cells",
        "clear_cells_from_cache",
        "cli",
        "cli_environment",
        "code",
        "doitforme_get",
        "doitforme_post",
        "ensure_recursive_netlist",
        "export_spice",
        "find_composite",
        "find_docode_project_dir",
        "find_fixed",
        "find_good_sinks",
        "find_sinks",
        "find_unconnected",
        "find_without_ports",
        "fix_log_line_numbers",
        "generate_svg",
        "get",
        "get_base_schema",
        "get_cell_path",
        "get_cells",
        "get_custom_cell_names",
        "get_download_url",
        "get_logger",
        "get_module",
        "get_netlist",
        "get_netlist_schema",
        "get_node_colors",
        "get_pdk_cell_names",
        "get_pdk_graph",
        "get_ports",
        "get_python_cells",
        "get_settings",
        "get_svg",
        "get_top_level_cells",
        "get_yaml_cell_name",
        "get_yaml_cell_path",
        "get_yaml_cells",
        "get_yaml_paths",
        "ignore_prints",
        "import_module_from_path",
        "import_pdk",
        "import_pdk_from_path",
        "import_python_modules",
        "is_cell",
        "is_from_module",
        "list_cells_from_regex",
        "list_custom",
        "load_kcl",
        "logger",
        "lvs_categories",
        "maybe",
        "maybe_find_docode_project_dir",
        "maybe_open",
        "merge_rdb_strings",
        "on_created",
        "on_deleted",
        "on_modified",
        "optical_lvs",
        "parse_oc_spice",
        "pdk",
        "plot_html",
        "plot_json",
        "plot_pdk_relations",
        "ports",
        "ports_extended",
        "post_netlist",
        "print_to_file",
        "project_dir",
        "redirect",
        "register_cells",
        "routing_strategies",
        "run",
        "save_gds",
        "save_kcl",
        "send_error",
        "send_message",
        "serve",
        "serve",
        "settings",
        "show",
        "show_cell",
        "simulate",
        "start",
        "status",
        "svg",
        "tree",
        "tree_item",
        "upload_input",
        "validate_access",
        "view2",
        "websocket_client",
    ]
