[project]
name = "tracelet"
version = "v0.0.8"
description = "Tracelet is an automagic pytorch metric exporter"
authors = [{ name = "Prassanna Ravishankar", email = "me@prassanna.io" }]
readme = "README.md"
keywords = ["python", "pytorch", "machine-learning", "experiment-tracking", "mlops"]
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "gitpython",
    "psutil",
    "pydantic",
    "pydantic-settings",
]

[project.optional-dependencies]
# Backend integrations
mlflow = ["mlflow>=3.1.1"]
clearml = ["clearml>=1.15.0"]
wandb = ["wandb>=0.16.0"]
# Note: AIM has Python version compatibility issues on 3.13+
aim = ["aim>=3.17.0; python_version < '3.13'"]

# Framework integrations
pytorch = ["torch>=1.13.0", "tensorboard>=2.15.0"]
lightning = ["pytorch-lightning>=2.0.0"]
tensorboard = [
    "tensorboard>=2.15.0",
]

# Convenience groups
backends = ["mlflow>=3.1.1", "clearml>=1.15.0", "wandb>=0.16.0", "aim>=3.17.0; python_version < '3.13'"]
frameworks = ["torch>=1.13.0", "tensorboard>=2.15.0", "pytorch-lightning>=2.0.0"]

# Complete installation with all optional dependencies
all = ["mlflow>=3.1.1", "clearml>=1.15.0", "wandb>=0.16.0", "aim>=3.17.0; python_version < '3.13'", "torch>=1.13.0", "tensorboard>=2.15.0", "pytorch-lightning>=2.0.0"]


[project.urls]
Homepage = "https://prassanna.io/tracelet/"
Repository = "https://github.com/prassanna-ravishankar/tracelet"
Documentation = "https://prassanna.io/tracelet/"
Changelog = "https://github.com/prassanna-ravishankar/tracelet/releases"

[tool.uv]
dev-dependencies = [
    # Testing and code quality
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.20.0",
    "mypy>=0.991",
    "ruff>=0.6.9",

    # Documentation
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",

    # System monitoring (for collectors)
    "pynvml>=11.0.0",

    # Integration testing - install backends and frameworks for testing
    "clearml>=1.15.0",
    "mlflow>=3.1.1",
    "torch>=2.7.1",
    "torchvision>=0.22.1",
    "wandb>=0.21.0",
    "pytorch-lightning>=2.5.2",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["tracelet"]

[tool.mypy]
files = ["tracelet"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Avoid specifying long messages outside the exception class
    "TRY003",
    # Consider moving this statement to an `else` block
    "TRY300",
    # Abstract `raise` to an inner function
    "TRY301",
    # Redundant exception object included in `logging.exception` call
    "TRY401",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["tracelet"]
