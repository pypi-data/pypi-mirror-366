name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/nuu-core/
    permissions:
      id-token: write  # Required for trusted publishing
      contents: write  # Required for creating releases
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Verify version tag matches pyproject.toml
        run: |
          # Extract version from tag (remove 'v' prefix)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Tag version: $TAG_VERSION"
          
          # Extract version from pyproject.toml
          PYPROJECT_VERSION=$(grep -E '^version = ".*"$' pyproject.toml | cut -d'"' -f2)
          echo "pyproject.toml version: $PYPROJECT_VERSION"
          
          # Verify they match
          if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match pyproject.toml version ($PYPROJECT_VERSION)"
            exit 1
          fi
          
          echo "VERSION=$TAG_VERSION" >> $GITHUB_ENV
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Build package
        run: |
          uv build
          ls -la dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Uses trusted publishing, no password needed
          # Just need to configure this in PyPI project settings
          verbose: true
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ## nuu-core ${{ env.VERSION }}
            
            Install with:
            ```bash
            pip install nuu-core==${{ env.VERSION }}
            ```
            
            See [PyPI](https://pypi.org/project/nuu-core/${{ env.VERSION }}/) for more details.
          draft: false
          prerelease: false