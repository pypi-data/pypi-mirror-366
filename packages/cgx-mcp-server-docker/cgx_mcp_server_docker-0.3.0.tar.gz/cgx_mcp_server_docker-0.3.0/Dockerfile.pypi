# Simple Dockerfile for running the MCP Docker Server from PyPI
# This is ideal for production deployments

FROM python:3.12-slim-bookworm

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1

# Install system dependencies including Docker CLI
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gnupg \
    lsb-release \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y docker-ce-cli \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for security
RUN groupadd -r mcpuser && useradd -r -g mcpuser -s /bin/bash mcpuser

# Install the MCP Docker server from PyPI
RUN pip install cgx-mcp-server-docker==0.2.2

# Create working directory and set permissions
WORKDIR /app
RUN mkdir -p /app/config /app/data && chown -R mcpuser:mcpuser /app

# Switch to non-root user
USER mcpuser

# Expose the default HTTP port
EXPOSE 8080

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Default command - run in HTTP mode
ENTRYPOINT ["mcp-server-docker"]
CMD ["--transport", "http", "--host", "0.0.0.0", "--port", "8080"]
