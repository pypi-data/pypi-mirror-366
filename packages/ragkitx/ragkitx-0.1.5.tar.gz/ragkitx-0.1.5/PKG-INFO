Metadata-Version: 2.4
Name: ragkitx
Version: 0.1.5
Summary: Modular RAG toolkit
Author-email: Jan Kristanto Wibisono <jan.nctu@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/jannctu/ragkit
Project-URL: Repository, https://github.com/jannctu/ragkit
Project-URL: Bug Tracker, https://github.com/jannctu/ragkit/issues
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydantic>=2.0
Requires-Dist: python-dotenv>=1.0
Requires-Dist: qdrant-client>=1.6
Requires-Dist: openai>=1.0
Requires-Dist: sentence-transformers>=2.2
Requires-Dist: scikit-learn>=1.5
Requires-Dist: nltk>=3.8
Requires-Dist: tiktoken>=0.5.1
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Dynamic: license-file

# ragkit

**Modular RAG toolkit** â€“ A flexible and pluggable framework for Retrieval-Augmented Generation (RAG) workflows.

## Features

- Plug-and-play architecture for embedding models and vector stores
- Support for hybrid search (vector + keyword)
- Extensible design with Pydantic models
- Qdrant vector store support
- OpenAI and SentenceTransformer embedding

## Installation

```bash
pip install ragkit


## Usage

```python
from ragkit.search import DocumentSearchService
from ragkit.embedding import OpenAIEmbedder
from ragkit.vectorstore import QdrantVectorStore

# Initialize components
embedder = OpenAIEmbedder(api_key="your-openai-api-key")
store = QdrantVectorStore(vector_size=1536)

search_service = DocumentSearchService(embedder, store)

# Perform search
results = search_service.search("Tell me about vector databases")
```
