[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gconnect"
description = "The Python implementation of Connect: Protobuf RPC that works."
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [{ name = "tsubakiky", email = "salovers1205@gmail.com" }]
requires-python = ">=3.13"
dynamic = ["version"]
dependencies = [
  "anyio>=4.7.0",
  "googleapis-common-protos>=1.70.0",
  "h2>=4.2.0",
  "httpcore",
  "protobuf>=5.29.1",
  "pydantic>=2.10.4",
  "starlette>=0.46.0",
  "types-protobuf>=5.29.1.20241207",
  "yarl>=1.18.3",
]

[tool.uv.sources]
httpcore = { git = "https://github.com/tsubakiky/httpcore" }

[tool.hatch.build.targets.wheel]
packages = ["src/gconnect"]

[tool.hatch.version]
path = "src/gconnect/version.py"

[dependency-groups]
dev = [
  "mypy>=1.13.0",
  "pyright>=1.1.390",
  "pytest>=8.3.4",
  "ruff>=0.8.2",
  "grpcio-tools==1.68.1",
  "mypy-protobuf>=3.6.0",
  "hypercorn[trio,uvloop]>=0.17.3",
  "pytest-asyncio>=0.25.1",
  "async-asgi-testclient>=1.4.11",
  "httpx>=0.28.1",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
preview = true

# See https://docs.astral.sh/ruff/rules for more information.
select = [
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # pycodestyle (Error)
  "F",      # Pyflakes
  "I",      # isort
  "INP001", # flake8-no-pep420/implicit-namespace-package
  "N",      # pep8-naming
  "SIM",    # flake8-simplify
  "TD002",  # flake8-todos/missing-todo-author
  "TD006",  # flake8-todos/invalid-todo-capitalization
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle (Warning)
]

ignore = [
  "N802", # Function name {name} should be lowercase
  "N805", # First argument of a method should be named self

  # ruff formatter recommends to disable those. see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "COM812", # Trailing comma missing
  "COM819", # Trailing comma prohibited
  "D206",   # Docstring should be indented with spaces, not tabs
  "D300",   # Use triple double quotes """
  "E111",   # Indentation is not a multiple of
  "E114",   # Indentation is not a multiple of {indent_size} (comment)
  "E117",   # Over-indented (comment)
  "E203",   # Whitespace before '{symbol}'
  "E501",   # Line too long ({width} > {limit})
  "ISC001", # Implicitly concatenated string literals on one line
  "ISC002", # Implicitly concatenated string literals over multiple lines
  "Q000",   # Single quotes found but double quotes preferred
  "Q001",   # Single quote multiline found but double quotes preferred
  "Q002",   # Single quote docstring found but double quotes preferred
  "Q003",   # Change outer quotes to avoid escaping inner quotes
  "W191",   # Indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]
"version.py" = ["D100"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
check_untyped_defs = true
strict = true
disable_error_code = [
  "no-untyped-call", # Call to untyped function "xxx" in typed context
  "no-any-return",   # Returning Any from function declared to return "xxx"
  "misc",            # Class cannot subclass "xxx" (has type "Any")
  "unused-ignore",   # Unused "type: ignore" comment
]
enable_incomplete_feature = "NewGenericSyntax"

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "basic"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
