# automatically generated by the FlatBuffers compiler, do not modify

# namespace: darwinn

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class OutputLayer(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OutputLayer()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOutputLayer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def OutputLayerBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x57\x4E\x31", size_prefixed=size_prefixed)

    # OutputLayer
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OutputLayer
    def Layout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from platforms.darwinn.OutputLayout import OutputLayout
            obj = OutputLayout()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # OutputLayer
    def DataType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

    # OutputLayer
    def ShapeInfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from platforms.darwinn.OutputShapeInfo import OutputShapeInfo
            obj = OutputShapeInfo()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(3)
def OutputLayerStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddLayout(builder, layout): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(layout), 0)
def OutputLayerAddLayout(builder, layout):
    """This method is deprecated. Please switch to AddLayout."""
    return AddLayout(builder, layout)
def AddDataType(builder, dataType): builder.PrependInt16Slot(1, dataType, 0)
def OutputLayerAddDataType(builder, dataType):
    """This method is deprecated. Please switch to AddDataType."""
    return AddDataType(builder, dataType)
def AddShapeInfo(builder, shapeInfo): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(shapeInfo), 0)
def OutputLayerAddShapeInfo(builder, shapeInfo):
    """This method is deprecated. Please switch to AddShapeInfo."""
    return AddShapeInfo(builder, shapeInfo)
def End(builder): return builder.EndObject()
def OutputLayerEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)