[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cogency"
version = "0.9.2"
description = "Smart AI agents that think as hard as they need to."
authors = ["Tyson Chan <tyson.chan@proton.me>"]
readme = "README.md"
license = "Apache-2.0"
homepage = "https://github.com/iteebz/cogency"
repository = "https://github.com/iteebz/cogency"
keywords = ["ai", "agents", "reasoning", "react", "memory", "tools", "tracing", "cognition", "streaming"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [{ include = "cogency", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"

# Core dependencies
pydantic = ">=2.0"
typing-extensions = ">=4.0"
python-dotenv = ">=1.0.0"
resilient-result = "0.3.1"

# AI/ML frameworks
google-genai = ">=1.26.0,<2.0.0"
nomic = ">=3.5.3,<4.0.0"

# Networking & HTTP
aiohttp = ">=3.12.14,<4.0.0"
mcp = ">=1.0.0"

# Data processing
numpy = ">=1.24.0"
trafilatura = ">=2.0.0,<3.0.0"
ddgs = "*"

# System utilities
psutil = ">=5.9.0"
python-dateutil = ">=2.8.0"
pytz = ">=2023.0"


# LLM providers - included by default
openai = "*"
anthropic = "*"
mistralai = "*"
tiktoken = "*"

# Optional embedding providers
sentence-transformers = { version = "*", optional = true }

# Vector databases - pinecone included by default
pinecone = "*"

# Optional vector databases (heavy dependencies)
chromadb = { version = "*", optional = true }
pgvector = { version = "*", optional = true }
asyncpg = { version = "*", optional = true }
psycopg2-binary = { version = "*", optional = true }

[tool.poetry.extras]
sentence-transformers = ["sentence-transformers"]
chromadb = ["chromadb"]
pgvector = ["pgvector", "asyncpg", "psycopg2-binary"]

[tool.poetry.group.dev.dependencies]
black = "^23.0.0"
isort = "^5.12.0"
pytest = "^8.4.1"
pytest-asyncio = "^0.21.0"
pytest-timeout = "^2.4.0"


[tool.black]
line-length = 100
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88


[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [
    "evonotes",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear (common bugs)
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = [
    "W291",   # Trailing whitespace (handled by Black)
    "W293",   # Blank line contains whitespace (handled by Black)
    "UP006",  # non-pep585-annotation (allow typing.List vs list for compatibility)
    "UP035",  # deprecated-import (allow typing imports for compatibility)
    "SIM108", # if-else-block-instead-of-if-exp (ternary not always clearer)
    "SIM117", # combine-multiple-isinstance (sometimes separate is clearer)
    "E501",   # line-too-long (pragmatic choice for readable code)
]

# Allow specific patterns that are common in this codebase

[tool.ruff.lint.per-file-ignores]
"**/llm/__init__.py" = ["F401"]  # Allow conditional imports for optional dependencies
"**/embed/__init__.py" = ["F401"]  # Allow conditional imports for optional dependencies
"**/llm/xai.py" = ["N801"]  # Allow xAILLM class name for brand consistency
"tests/**" = ["F401", "F811", "B017"]  # Allow test-specific patterns
"website/**" = ["B007"]  # Allow unused loop variables in documentation scripts

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
pythonpath = ["src"]
filterwarnings = [
    "ignore::DeprecationWarning:starlette.*",
    "ignore::PendingDeprecationWarning:starlette.*"
]