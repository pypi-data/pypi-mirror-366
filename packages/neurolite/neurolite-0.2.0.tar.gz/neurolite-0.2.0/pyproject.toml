[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neurolite"
dynamic = ["version"]
description = "AI/ML/DL/NLP productivity library for minimal-code machine learning workflows"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "NeuroLite Team", email = "team@neurolite.ai"}
]
keywords = ["machine learning", "deep learning", "nlp", "computer vision", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "optuna>=3.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "flask>=2.3.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "librosa>=0.10.0",
    "onnx>=1.14.0",
    "onnxruntime>=1.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "build>=0.10.0",
    "twine>=4.0.2",
    "ruff>=0.0.280",
]
tensorflow = [
    "tensorflow>=2.13.0",
]
xgboost = [
    "xgboost>=1.7.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
all = [
    "neurolite[tensorflow,xgboost,docs]",
]

[project.urls]
Homepage = "https://github.com/dot-css/neurolite"
Documentation = "https://neurolite.readthedocs.io"
Repository = "https://github.com/dot-css/neurolite"
"Bug Tracker" = "https://github.com/dot-css/neurolite/issues"

[project.scripts]
neurolite = "neurolite.cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["neurolite*"]

[tool.setuptools.dynamic]
version = {attr = "neurolite._version.__version__"}

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "T20"]
ignore = ["E501", "B008", "B904"]

[tool.ruff.per-file-ignores]
"tests/*" = ["T20"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=neurolite --cov-report=html --cov-report=term-missing --cov-report=xml"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["neurolite"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]