[tool.poetry]
name = "pycivil"
version = "0.2.1"
description = "Structural Engineering Utilities"
authors = ["Luigi Paone <ppc.luigi.paone@gmail.com>"]
readme = "README.md"

# Include file extra nel wheel/sdist
include = [
    { path = "pycivil/templates/latex", format = ["wheel", "sdist"] }
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.6"
pydantic = "^2.7"
numpy = "^1.25.2"
uvicorn = "^0.34.0"
matplotlib = "^3.7.2"
Jinja2 = "^3.1.2"
pandas = "^2.1.0"
vtk = "^9.2.6"
pexpect = "^4.8.0"
pymongo = "^4.4.1"
gmsh = "^4.11.1"
odfpy = "^1.4.0"
python-multipart = "0.0.6"
requests = "^2.31.0"
pydantic-settings = "^2.1.0"
typing-extensions = "^4.11.0"
rich = "^13.7.1"
# xstrumodeler = { file = "C:/Users/lpaone/dev/exagon/src/app/xstrumodeler/wheelhouse/xstrumodeler-0.0.1-cp312-cp312-win_amd64.whl" }
pytest = "^8.4.1"
xstrumodeler = "0.0.1"
pyvista = "^0.45.3"
openpyxl = "^3.1.5"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = ">=7.2.1"
coverage = { extras = ["toml"], version = "^7.1.0" }
pytest-cov = "^4.0.0"
httpx = "^0.24.1"
mongomock = "^4.1.2"
pytest-mock = "^3.11.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocstrings = "^0.27.0"
mkdocstrings-python = "^1.13.0"
mkdocs-gen-files = "^0.4.0"
mkdocs-literate-nav = "^0.6.0"
mkdocs-exclude = "^1.0.2"
mkdocs-section-index = "^0.3.5"
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.49"
markdown-katex = "^202406.1035"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^23.1.0"
pre-commit = "2.0"
jake = "^3.0.0"

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.typing.dependencies]
mypy = "^1.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.paths]
source = ["pycivil", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["pycivil"]
omit = []

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING",
    "if __name__ == .__main__.:"
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_defs = false # this should be enabled when all the function are typed
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = false
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_unreachable = false
warn_unused_configs = true
exclude = []
#plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = [
    "pandas",
    "matplotlib.*",
    "pexpect",
    "gmsh",
    "vtkmodules.*",
]
ignore_missing_imports = true

[tool.ruff]
 # ignoring "N" (naming) and "D" (docstrings) for now
select = ["B", "C", "E", "F", "I", "S", "U", "W", "PD"]
ignore = ["E501", "B905", "S104", "S101", "S701"]
target-version = "py310"
src = ["src", "test"]
extend-exclude = ["res/paraview"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D107", "D103"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
#force-single-line = true

[tool.ruff.pyupgrade]
keep-runtime-typing = true
