Metadata-Version: 2.4
Name: mkdocs-llmstxt-md
Version: 0.1.0
Summary: MkDocs plugin for LLM-friendly documentation with direct markdown serving
Author-email: Nok Lam Chan <mediumnok@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/noklam/mkdocs-llmstxt-md
Project-URL: Bug Reports, https://github.com/noklam/mkdocs-llmstxt-md/issues
Project-URL: Source, https://github.com/noklam/mkdocs-llmstxt-md
Keywords: mkdocs,plugin,llm,documentation,markdown,ai
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Documentation
Classifier: Topic :: Software Development :: Documentation
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: mkdocs>=1.4.0
Requires-Dist: ruff>=0.12.7

# mkdocs-llmstxt-md

MkDocs plugin for LLM-friendly documentation that provides:

1. **Direct markdown serving** - Access original markdown at `page.md` URLs
2. **llms.txt generation** - Concise index file for LLM context
3. **llms-full.txt generation** - Complete documentation in single file
4. **Copy-to-markdown button** - Easy copying of source markdown

## Features

- ðŸš€ **Source-first approach** - Works with original markdown, no HTML parsing
- ðŸ¤– **LLM optimized** - Token-efficient formats for AI consumption
- ðŸ“‹ **Copy button** - One-click markdown copying for developers
- ðŸ”— **Dual URLs** - Both human-readable HTML and LLM-friendly markdown

This plugin is inspired by `mkdocs-llmstxt`, the key difference is that `mkdocs-llmstxt` take the parsing HTML approach which can be used with injected HTML. This plugin focus on the raw markdown approach, which makes things simpler if you only need to work with markdown content.
## Installation

```bash
uv add mkdocs-llmstxt-md
# or with pip
pip install mkdocs-llmstxt-md
```


## Usage

Add to your `mkdocs.yml`:

```yaml
plugins:
  - llms-txt:
      sections:
        "Getting Started":
          - index.md: "Introduction to the project"
          - quickstart.md
        "API Reference":
          - api/*.md
```

## Configuration

- `sections`: Dict of section names to file patterns
- `enable_markdown_urls`: Enable .md URL serving (default: true)
- `enable_llms_txt`: Generate llms.txt (default: true)
- `enable_llms_full`: Generate llms-full.txt (default: true)
- `enable_copy_button`: Add copy button to pages (default: true)

## Developer Setup

### Prerequisites

- Python 3.8+
- uv (recommended) or pip

### Installation for Development

1. Clone the repository:
   ```bash
   git clone <repository-url>
   cd mkdocs-llmstxt-md
   ```

2. Install in development mode:
   ```bash
   uv pip install -e .
   # or with pip
   pip install -e .
   ```

3. Verify installation:
   ```bash
   uv pip list | grep mkdocs-llmstxt-md
   # or with pip
   pip list | grep mkdocs-llmstxt-md
   ```

### Testing with the Test Site

The project includes a complete test site in `test-site/` to validate all plugin features:

1. **Build the test site:**
   ```bash
   cd test-site
   mkdocs build
   ```

2. **Serve the test site locally:**
   ```bash
   mkdocs serve
   ```
   Visit http://localhost:8000 to see the documentation

3. **Validate generated files:**
   After building, check the `test-site/site/` directory for:
   - `llms.txt` - Index file with markdown URLs
   - `llms-full.txt` - Complete documentation
   - `*.md` files alongside HTML pages (e.g., `index.md`, `quickstart/index.md`)
   - Copy button on each page (top-right corner)

4. **Test markdown URL access:**
   - Visit http://localhost:8000/index.md to see raw markdown
   - Visit http://localhost:8000/quickstart/index.md for quickstart markdown
   - Compare with HTML versions at http://localhost:8000/ and http://localhost:8000/quickstart/

### Test Site Structure

The test site demonstrates all plugin features:

```
test-site/
â”œâ”€â”€ mkdocs.yml          # Plugin configuration example
â””â”€â”€ docs/
    â”œâ”€â”€ index.md        # Homepage with tables and code
    â”œâ”€â”€ quickstart.md   # Getting started guide
    â”œâ”€â”€ installation.md # Detailed setup instructions
    â”œâ”€â”€ api/
    â”‚   â”œâ”€â”€ overview.md # API documentation
    â”‚   â””â”€â”€ functions.md# Function reference
    â””â”€â”€ advanced/
        â””â”€â”€ configuration.md # Advanced config examples
```

### Running Tests

Currently manual testing via the test site. Future versions will include automated tests.

### Making Changes

1. Modify code in `src/mkdocs_llms_txt/`
2. Test changes: `cd test-site && mkdocs build`
3. Validate all features work as expected
4. Check generated files in `test-site/site/`
