[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ampgen"
version = "0.1.11"
description = "A de novo generation pipeline leveraging evolutionary information for broad-spectrum antimicrobial peptide design"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "nicholexiong", email = "nicholexiong@example.com"}
]
maintainers = [
    {name = "nicholexiong", email = "nicholexiong@example.com"}
]
keywords = ["bioinformatics", "antimicrobial-peptides", "protein-design", "machine-learning", "evodiff"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "scikit-learn>=1.0.0",
    "numpy>=1.21.0",
    "biopython>=1.79",
    "xgboost>=1.5.0",
    "tqdm>=4.62.0",
    "seaborn>=0.11.0",
    "scipy>=1.7.0",
    "joblib>=1.1.0",
    "requests>=2.25.0",
    "PyYAML>=6.0",
    "click>=8.0.0",
    "fair-esm>=2.0.0",
    "sequence-models>=1.8.0",
    "biotite>=1.0.0",
    "biotraj>=1.2.0",
    "blosum>=2.0.0",
    "MDAnalysis>=2.0.0",
    "mlflow>=2.0.0",
    "networkx>=3.0.0",
    "protobuf>=3.19.0",
    "pyarrow>=7.0.0",
    "SQLAlchemy>=2.0.0",
    "Flask>=3.0.0",
    "gunicorn>=23.0.0",
    "docker>=7.0.0",
    "gitpython>=3.1.0",
    "mrcfile>=1.5.0",
    "mmtf-python>=1.1.0",
    "pdb-tools>=2.5.0",
    "GridDataFormats>=1.0.0",
    "mda-xdrlib>=0.2.0",
    "opentelemetry-api>=1.27.0",
    "opentelemetry-sdk>=1.27.0",
    "opentelemetry-semantic-conventions>=0.48b0",
    "databricks-sdk>=0.32.0",
    "graphene>=3.3.0",
    "graphql-core>=3.2.0",
    "graphql-relay>=3.2.0",
    "greenlet>=3.1.0",
    "mako>=1.3.0",
    "markdown>=3.7.0",
    "msgpack>=1.1.0",
    "pyasn1>=0.6.0",
    "pyasn1_modules>=0.4.0",
    "pyparsing>=3.1.0",
    "pysocks>=1.7.0",
    "python-dateutil>=2.9.0",
    "pytz>=2024.2",
    "rsa>=4.9.0",
    "six>=1.16.0",
    "sqlparse>=0.5.0",
    "sympy>=1.13.0",
    "threadpoolctl>=3.5.0",
    "typing_extensions>=4.12.0",
    "tzdata>=2024.1",
    "urllib3>=2.2.0",
    "werkzeug>=3.0.0",
    "wrapt>=1.16.0",
    "zipp>=3.20.0",
    "alembic>=1.13.0",
    "aniso8601>=9.0.0",
    "blinker>=1.8.0",
    "brotli>=1.0.0",
    "cachetools>=5.5.0",
    "certifi>=2024.8.0",
    "charset-normalizer>=3.3.0",
    "cloudpickle>=3.0.0",
    "contourpy>=1.3.0",
    "cycler>=0.12.0",
    "deprecated>=1.2.0",
    "fasteners>=0.19.0",
    "filelock>=3.13.0",
    "fonttools>=4.53.0",
    "gitdb>=4.0.0",
    "gmpy2",
    "google-auth>=2.34.0",
    "idna>=3.10.0",
    "importlib_metadata>=8.4.0",
    "itsdangerous>=2.2.0",
    "jinja2>=3.1.0",
    "kiwisolver>=1.4.0",
    "lmdb>=1.5.0",
    "markupsafe>=2.1.0",
    "mlflow-skinny>=2.16.0",
    "mpmath>=1.3.0",
    "packaging>=24.1.0",
    "pillow>=10.4.0",
    "pyyaml>=6.0.0",
    "requests>=2.32.0",
    "smmap>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[project.urls]
Homepage = "https://github.com/yourusername/AMPGen"
Documentation = "https://github.com/yourusername/AMPGen#readme"
Repository = "https://github.com/yourusername/AMPGen"
"Bug Tracker" = "https://github.com/yourusername/AMPGen/issues"

[project.scripts]
ampgen-generate = "util.unconditional_generation:main"
ampgen-generate-msa = "util.unconditional_generation_msa:main"
ampgen-generate-conditional = "util.conditional_generation_msa:main"
ampgen-calculate-properties = "util.CalProperties:main"
ampgen-classify = "model.Discriminator:main"
ampgen-score = "model.MICscorer:main"
ampgen-train-discriminator = "model.train_discriminator:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "build*", "dist*", "*.egg-info*"]

[tool.setuptools.package-data]
"*" = ["Scorer_model/*.pkl", "model/iFeature/*"]

 