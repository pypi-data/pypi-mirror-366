# -*- coding: utf-8 -*-

"""
bitlyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from bitlyapi.models.organization import Organization


class SUCCESS4(object):

    """Implementation of the 'SUCCESS4' model.

    Attributes:
        organizations (List[Organization]): The model property of type
            List[Organization].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "organizations": 'organizations'
    }

    def __init__(self,
                 organizations=None):
        """Constructor for the SUCCESS4 class"""

        # Initialize members of the class
        self.organizations = organizations 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        organizations = None
        if dictionary.get('organizations') is not None:
            organizations = [Organization.from_dictionary(x) for x in dictionary.get('organizations')]
        # Return an object of this model
        return cls(organizations)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'organizations={self.organizations!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'organizations={self.organizations!s})')
