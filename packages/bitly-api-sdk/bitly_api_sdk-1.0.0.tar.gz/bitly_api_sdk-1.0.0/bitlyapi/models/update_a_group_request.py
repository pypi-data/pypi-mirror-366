# -*- coding: utf-8 -*-

"""
bitlyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class UpdateAGroupRequest(object):

    """Implementation of the 'Update a Group Request' model.

    Attributes:
        bsds (List[str]): The model property of type List[str].
        name (str): The model property of type str.
        organization_guid (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "bsds": 'bsds',
        "name": 'name',
        "organization_guid": 'organization_guid'
    }

    def __init__(self,
                 bsds=None,
                 name=None,
                 organization_guid=None):
        """Constructor for the UpdateAGroupRequest class"""

        # Initialize members of the class
        self.bsds = bsds 
        self.name = name 
        self.organization_guid = organization_guid 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        bsds = dictionary.get("bsds") if dictionary.get("bsds") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        organization_guid = dictionary.get("organization_guid") if dictionary.get("organization_guid") else None
        # Return an object of this model
        return cls(bsds,
                   name,
                   organization_guid)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'bsds={self.bsds!r}, '
                f'name={self.name!r}, '
                f'organization_guid={self.organization_guid!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'bsds={self.bsds!s}, '
                f'name={self.name!s}, '
                f'organization_guid={self.organization_guid!s})')
