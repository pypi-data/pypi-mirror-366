# -*- coding: utf-8 -*-

"""
bitlyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SUCCESS12(object):

    """Implementation of the 'SUCCESS12' model.

    Attributes:
        links (List[str]): The model property of type List[str].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "links": 'links'
    }

    def __init__(self,
                 links=None):
        """Constructor for the SUCCESS12 class"""

        # Initialize members of the class
        self.links = links 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        links = dictionary.get("links") if dictionary.get("links") else None
        # Return an object of this model
        return cls(links)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'links={self.links!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'links={self.links!s})')
