# -*- coding: utf-8 -*-

"""
bitlyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class LinkClick(object):

    """Implementation of the 'LinkClick' model.

    Attributes:
        date (str): The model property of type str.
        clicks (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "date": 'date',
        "clicks": 'clicks'
    }

    def __init__(self,
                 date=None,
                 clicks=None):
        """Constructor for the LinkClick class"""

        # Initialize members of the class
        self.date = date 
        self.clicks = clicks 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        date = dictionary.get("date") if dictionary.get("date") else None
        clicks = dictionary.get("clicks") if dictionary.get("clicks") else None
        # Return an object of this model
        return cls(date,
                   clicks)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'date={self.date!r}, '
                f'clicks={self.clicks!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'date={self.date!s}, '
                f'clicks={self.clicks!s})')
