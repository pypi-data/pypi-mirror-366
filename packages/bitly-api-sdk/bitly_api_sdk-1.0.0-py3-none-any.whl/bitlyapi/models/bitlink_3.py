# -*- coding: utf-8 -*-

"""
bitlyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from bitlyapi.models.bitlink_id import BitlinkId
from bitlyapi.models.campaign_guid import CampaignGuid


class Bitlink3(object):

    """Implementation of the 'Bitlink3' model.

    Attributes:
        campaign_guid (CampaignGuid): The model property of type CampaignGuid.
        bitlink_id (BitlinkId): The model property of type BitlinkId.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "campaign_guid": 'campaign_guid',
        "bitlink_id": 'bitlink_id'
    }

    def __init__(self,
                 campaign_guid=None,
                 bitlink_id=None):
        """Constructor for the Bitlink3 class"""

        # Initialize members of the class
        self.campaign_guid = campaign_guid 
        self.bitlink_id = bitlink_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        campaign_guid = CampaignGuid.from_dictionary(dictionary.get('campaign_guid')) if dictionary.get('campaign_guid') else None
        bitlink_id = BitlinkId.from_dictionary(dictionary.get('bitlink_id')) if dictionary.get('bitlink_id') else None
        # Return an object of this model
        return cls(campaign_guid,
                   bitlink_id)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'campaign_guid={self.campaign_guid!r}, '
                f'bitlink_id={self.bitlink_id!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'campaign_guid={self.campaign_guid!s}, '
                f'bitlink_id={self.bitlink_id!s})')
