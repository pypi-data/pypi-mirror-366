Metadata-Version: 2.1
Name: compliance_sdk
Version: 3.0.0
Summary: e-KYC API client for BALAJI MARILINE PRIVATE LIMITED
Home-page: https://github.com/gautam199429/balaji-sdk
Author: BALAJI MARILINE PRIVATE LIMITED
Author-email: gautam@balajimariline.com
License: Proprietary :: BALAJI MARILINE PRIVATE LIMITED
Keywords: OpenAPI,e-KYC,KYC,API Client,BALAJI
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: License :: Other/Proprietary License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: certifi>=14.5.14
Requires-Dist: frozendict~=2.3.4
Requires-Dist: python-dateutil~=2.7.0
Requires-Dist: setuptools>=21.0.0
Requires-Dist: typing_extensions~=4.3.0
Requires-Dist: urllib3~=1.26.7

# compliance_sdk
e-KYC API , GST verification suite

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: v1
- Package version: 1.0.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python &gt;&#x3D;3.7

## Migration from other generators like python and python-legacy

### Changes
1. This generator uses spec case for all (object) property names and parameter names.
    - So if the spec has a property name like camelCase, it will use camelCase rather than camel_case
    - So you will need to update how you input and read properties to use spec case
2. Endpoint parameters are stored in dictionaries to prevent collisions (explanation below)
    - So you will need to update how you pass data in to endpoints
3. Endpoint responses now include the original response, the deserialized response body, and (todo)the deserialized headers
    - So you will need to update your code to use response.body to access deserialized data
4. All validated data is instantiated in an instance that subclasses all validated Schema classes and Decimal/str/list/tuple/frozendict/NoneClass/BoolClass/bytes/io.FileIO
    - This means that you can use isinstance to check if a payload validated against a schema class
    - This means that no data will be of type None/True/False
        - ingested None will subclass NoneClass
        - ingested True will subclass BoolClass
        - ingested False will subclass BoolClass
        - So if you need to check is True/False/None, instead use instance.is_true_oapg()/.is_false_oapg()/.is_none_oapg()
5. All validated class instances are immutable except for ones based on io.File
    - This is because if properties were changed after validation, that validation would no longer apply
    - So no changing values or property values after a class has been instantiated
6. String + Number types with formats
    - String type data is stored as a string and if you need to access types based on its format like date,
    date-time, uuid, number etc then you will need to use accessor functions on the instance
    - type string + format: See .as_date_oapg, .as_datetime_oapg, .as_decimal_oapg, .as_uuid_oapg
    - type number + format: See .as_float_oapg, .as_int_oapg
    - this was done because openapi/json-schema defines constraints. string data may be type string with no format
    keyword in one schema, and include a format constraint in another schema
    - So if you need to access a string format based type, use as_date_oapg/as_datetime_oapg/as_decimal_oapg/as_uuid_oapg
    - So if you need to access a number format based type, use as_int_oapg/as_float_oapg
7. Property access on AnyType(type unset) or object(dict) schemas
    - Only required keys with valid python names are properties like .someProp and have type hints
    - All optional keys may not exist, so properties are not defined for them
    - One can access optional values with dict_instance['optionalProp'] and KeyError will be raised if it does not exist
    - Use get_item_oapg if you need a way to always get a value whether or not the key exists
        - If the key does not exist, schemas.unset is returned from calling dict_instance.get_item_oapg('optionalProp')
        - All required and optional keys have type hints for this method, and @typing.overload is used
        - A type hint is also generated for additionalProperties accessed using this method
    - So you will need to update you code to use some_instance['optionalProp'] to access optional property
    and additionalProperty values
8. The location of the api classes has changed
    - Api classes are located in your_package.apis.tags.some_api
    - This change was made to eliminate redundant code generation
    - Legacy generators generated the same endpoint twice if it had > 1 tag on it
    - This generator defines an endpoint in one class, then inherits that class to generate
      apis by tags and by paths
    - This change reduces code and allows quicker run time if you use the path apis
        - path apis are at your_package.apis.paths.some_path
    - Those apis will only load their needed models, which is less to load than all of the resources needed in a tag api
    - So you will need to update your import paths to the api classes

### Why are Oapg and _oapg used in class and method names?
Classes can have arbitrarily named properties set on them
Endpoints can have arbitrary operationId method names set
For those reasons, I use the prefix Oapg and _oapg to greatly reduce the likelihood of collisions
on protected + public classes/methods.
oapg stands for OpenApi Python Generator.

### Object property spec case
This was done because when payloads are ingested, they can be validated against N number of schemas.
If the input signature used a different property name then that has mutated the payload.
So SchemaA and SchemaB must both see the camelCase spec named variable.
Also it is possible to send in two properties, named camelCase and camel_case in the same payload.
That use case should be support so spec case is used.

### Parameter spec case
Parameters can be included in different locations including:
- query
- path
- header
- cookie

Any of those parameters could use the same parameter names, so if every parameter
was included as an endpoint parameter in a function signature, they would collide.
For that reason, each of those inputs have been separated out into separate typed dictionaries:
- query_params
- path_params
- header_params
- cookie_params

So when updating your code, you will need to pass endpoint parameters in using those
dictionaries.

### Endpoint responses
Endpoint responses have been enriched to now include more information.
Any response reom an endpoint will now include the following properties:
response: urllib3.HTTPResponse
body: typing.Union[Unset, Schema]
headers: typing.Union[Unset, TODO]
Note: response header deserialization has not yet been added


## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import vartulz_compliance_sdk
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import vartulz_compliance_sdk
```

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import time
import vartulz_compliance_sdk
from pprint import pprint
from vartulz_compliance_sdk.apis.tags import aadhar_management_api
from vartulz_compliance_sdk.model.api_response import APIResponse
from vartulz_compliance_sdk.model.submit_otp import SubmitOTP
from vartulz_compliance_sdk.model.uidia_request_body import UidiaRequestBody
# Defining the host is optional and defaults to http://localhost:1010
# See configuration.py for a list of all supported configuration parameters.
configuration = vartulz_compliance_sdk.Configuration(
    host = "http://localhost:1010"
)


# Enter a context with an instance of the API client
with vartulz_compliance_sdk.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = aadhar_management_api.AadharManagementApi(api_client)
    case_id = "caseId_example" # str | 
aadhar_number = 1 # int | 
x_auth_token = "X-AUTH-TOKEN_example" # str | 

    try:
        # Delete aadhar details
        api_response = api_instance.delete_aadhar(case_idaadhar_numberx_auth_token)
        pprint(api_response)
    except vartulz_compliance_sdk.ApiException as e:
        print("Exception when calling AadharManagementApi->delete_aadhar: %s\n" % e)
```

## Documentation for API Endpoints

All URIs are relative to *http://localhost:1010*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*AadharManagementApi* | [**delete_aadhar**](docs/apis/tags/AadharManagementApi.md#delete_aadhar) | **get** /v1/aadhar/delete/aadhar | Delete aadhar details
*AadharManagementApi* | [**get_all_aadhar**](docs/apis/tags/AadharManagementApi.md#get_all_aadhar) | **get** /v1/aadhar/get/all/aadhar | Get aadhar details
*AadharManagementApi* | [**send_otp_aadhar**](docs/apis/tags/AadharManagementApi.md#send_otp_aadhar) | **post** /v1/aadhar/send/otp | Send aadhar OTP
*AadharManagementApi* | [**submit_otp**](docs/apis/tags/AadharManagementApi.md#submit_otp) | **post** /v1/aadhar/submit/otp | Submit aadhar OTP
*AdminCompanyManagementApi* | [**approve_reject_company**](docs/apis/tags/AdminCompanyManagementApi.md#approve_reject_company) | **get** /v1/company/approve/reject | Approve reject company registration
*AdminCompanyManagementApi* | [**block_unbloc_user**](docs/apis/tags/AdminCompanyManagementApi.md#block_unbloc_user) | **post** /v1/company/block/unblock | Block Unblock company user
*AdminCompanyManagementApi* | [**get_all_company**](docs/apis/tags/AdminCompanyManagementApi.md#get_all_company) | **get** /v1/company/get/all | Get all company
*AdminCompanyManagementApi* | [**get_all_company_for_approval**](docs/apis/tags/AdminCompanyManagementApi.md#get_all_company_for_approval) | **get** /v1/company/get/all/forapproval | Get all registration for approval
*AdminCompanyManagementApi* | [**get_all_company_for_approval1**](docs/apis/tags/AdminCompanyManagementApi.md#get_all_company_for_approval1) | **get** /v1/company/get/all/approved/rejected | Get all approved or rejected registration applications
*AdminCompanyManagementApi* | [**get_all_company_no_email_approved**](docs/apis/tags/AdminCompanyManagementApi.md#get_all_company_no_email_approved) | **get** /v1/company/get/all/emailnotapproved | Get all registration whose email is not verified
*AdminCompanyManagementApi* | [**get_company_code**](docs/apis/tags/AdminCompanyManagementApi.md#get_company_code) | **get** /v1/company/get/details/{companyCode} | Get company by code
*AdminCompanyManagementApi* | [**get_company_code_details_filter**](docs/apis/tags/AdminCompanyManagementApi.md#get_company_code_details_filter) | **get** /v1/company/get/details/byfilter | Get company by code
*BankDetailsManagementApi* | [**add_new_and_verify**](docs/apis/tags/BankDetailsManagementApi.md#add_new_and_verify) | **post** /v1/bank/add/verify | Add and verify new bank details
*BankDetailsManagementApi* | [**delete_bank**](docs/apis/tags/BankDetailsManagementApi.md#delete_bank) | **post** /v1/bank/delete/bank | Delete bank details
*BankDetailsManagementApi* | [**get_all_bank**](docs/apis/tags/BankDetailsManagementApi.md#get_all_bank) | **get** /v1/bank/get/all | Get all bank details
*BarcodeManagementApi* | [**create_new_bar_code**](docs/apis/tags/BarcodeManagementApi.md#create_new_bar_code) | **get** /v1/barcode/generatre/barcode | Create new barcode
*BarcodeManagementApi* | [**get_aadhar_details**](docs/apis/tags/BarcodeManagementApi.md#get_aadhar_details) | **get** /v1/barcode/get/aadhar/details | Get aadhar details from Barcode
*BarcodeManagementApi* | [**get_all_bank_from_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_all_bank_from_barcode) | **get** /v1/barcode/get/bank/details | Get all bank details from barcode
*BarcodeManagementApi* | [**get_company_master_details_from_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_company_master_details_from_barcode) | **get** /v1/barcode/get/master/details | Get company master details from barcode
*BarcodeManagementApi* | [**get_details_from_pan_number_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_details_from_pan_number_barcode) | **get** /v1/barcode/get/pan/details | Fetch PAN details from Barcode
*BarcodeManagementApi* | [**get_details_gstin_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_details_gstin_barcode) | **get** /v1/barcode/get/gstin/details | Get all GSTIN From Barcode
*BarcodeManagementApi* | [**get_electricity_details1**](docs/apis/tags/BarcodeManagementApi.md#get_electricity_details1) | **get** /v1/barcode/get/electricity/details | Get Electricity Bill Details from Barcode
*BarcodeManagementApi* | [**get_gstin_status_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_gstin_status_barcode) | **get** /v1/barcode/get/gstin/status/{gstin} | Get GSTIN status from DB
*BarcodeManagementApi* | [**get_iec_details_from_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_iec_details_from_barcode) | **get** /v1/barcode/get/iec/details | Get IEC details from Barcode
*BarcodeManagementApi* | [**get_preference_details_gstin_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_preference_details_gstin_barcode) | **get** /v1/barcode/get/gstin/preference/details/{gstin} | Get GSTIN preference from DB
*BarcodeManagementApi* | [**get_signatory_details_from_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_signatory_details_from_barcode) | **get** /v1/barcode/get/signatory/details | Get MCA signatory details from Barcode
*BarcodeManagementApi* | [**get_track_details_gstin_barcode**](docs/apis/tags/BarcodeManagementApi.md#get_track_details_gstin_barcode) | **get** /v1/barcode/get/gstin/track/details/{gstin} | Get GSTIN track details from DB
*BarcodeManagementApi* | [**sharebar_code**](docs/apis/tags/BarcodeManagementApi.md#sharebar_code) | **post** /v1/barcode/share/barcode | Share Bar Code
*CaseManagementApi* | [**create_new_case**](docs/apis/tags/CaseManagementApi.md#create_new_case) | **post** /v1/case/create/new | Create new case
*CaseManagementApi* | [**get_all_case**](docs/apis/tags/CaseManagementApi.md#get_all_case) | **get** /v1/case/get/all/case | Get all case fro company
*CaseManagementApi* | [**get_all_case_admin**](docs/apis/tags/CaseManagementApi.md#get_all_case_admin) | **get** /v1/case/admin/get/all/case | Get all case fro company
*CompanyMasterDetailsManagementApi* | [**get_company_master_details**](docs/apis/tags/CompanyMasterDetailsManagementApi.md#get_company_master_details) | **get** /v1/nsdl/get/master/details/{caseId} | Get company master details from DB
*CompanyMasterDetailsManagementApi* | [**update_company_master_details1**](docs/apis/tags/CompanyMasterDetailsManagementApi.md#update_company_master_details1) | **post** /v1/nsdl/update/master/details/{caseId} | Update Company Master Details
*ElectricityBillDetailsManagementApi* | [**update_electricity_bill_from_db**](docs/apis/tags/ElectricityBillDetailsManagementApi.md#update_electricity_bill_from_db) | **get** /v1/nsdl/get/electricitybill/details/{caseId} | Get electricity bill details from DB
*ElectricityBillDetailsManagementApi* | [**update_electricity_bill_from_nsdl**](docs/apis/tags/ElectricityBillDetailsManagementApi.md#update_electricity_bill_from_nsdl) | **post** /v1/nsdl/update/electricitybill/details/{caseId} | Update electricity bill Details
*ElectricityBillerManagementApi* | [**get_all_biller**](docs/apis/tags/ElectricityBillerManagementApi.md#get_all_biller) | **get** /v1/biller/get/all/biller | Get all electricity biller
*ElectricityBillerManagementApi* | [**get_all_biller_by_state**](docs/apis/tags/ElectricityBillerManagementApi.md#get_all_biller_by_state) | **get** /v1/biller/get/all/bystate/{state} | Get all electricity biller by state
*ElectricityBillerManagementApi* | [**get_all_state**](docs/apis/tags/ElectricityBillerManagementApi.md#get_all_state) | **get** /v1/biller/get/all/state | Get all state
*ExcelManagementApi* | [**get_all_upload_id**](docs/apis/tags/ExcelManagementApi.md#get_all_upload_id) | **get** /v1/excel/getall/uploadid | Get All Upload Id
*ExcelManagementApi* | [**get_all_upload_id_records**](docs/apis/tags/ExcelManagementApi.md#get_all_upload_id_records) | **get** /v1/excel/get/uploadid/records | Get All Record inside Upload Id
*ExcelManagementApi* | [**upload_excel_file**](docs/apis/tags/ExcelManagementApi.md#upload_excel_file) | **post** /v1/excel/upload | Upload Excel
*GSTINManagementApi* | [**delete_gstin**](docs/apis/tags/GSTINManagementApi.md#delete_gstin) | **post** /v1/gstin/delete/gstin | Delete GSTIN details
*GSTINManagementApi* | [**get_details_gstin**](docs/apis/tags/GSTINManagementApi.md#get_details_gstin) | **post** /v1/gstin/get/all/gstin | Get all GSTIN
*GSTINManagementApi* | [**get_details_gstin1**](docs/apis/tags/GSTINManagementApi.md#get_details_gstin1) | **post** /v1/gstin/add/gstin | Add new GSTIN
*GSTINManagementApi* | [**get_gstin_status**](docs/apis/tags/GSTINManagementApi.md#get_gstin_status) | **post** /v1/gstin/update/status | Update GSTIN current status from GSP
*GSTINManagementApi* | [**get_preference_details_gstin**](docs/apis/tags/GSTINManagementApi.md#get_preference_details_gstin) | **post** /v1/gstin/update/preference/details | Update GSTIN preference details GSP
*GSTINManagementApi* | [**get_track_details_gstin**](docs/apis/tags/GSTINManagementApi.md#get_track_details_gstin) | **post** /v1/gstin/update/track/details | Update GSTIN return track status details GSP
*GSTINUtilityManagementApi* | [**get_all_fy**](docs/apis/tags/GSTINUtilityManagementApi.md#get_all_fy) | **get** /v1/utility/fy/getall | Get all finacial years
*GSTINUtilityManagementApi* | [**get_all_return_type**](docs/apis/tags/GSTINUtilityManagementApi.md#get_all_return_type) | **get** /v1/utility/ret/type/getall | Get all return types
*GSTINUtilityManagementApi* | [**get_gstin_status1**](docs/apis/tags/GSTINUtilityManagementApi.md#get_gstin_status1) | **get** /v1/utility/gstin/get/status/{gstin} | Get GSTIN status from DB
*GSTINUtilityManagementApi* | [**get_preference_details_gstin1**](docs/apis/tags/GSTINUtilityManagementApi.md#get_preference_details_gstin1) | **get** /v1/utility/gstin/get/preference/details/{gstin} | Get GSTIN preference from DB
*GSTINUtilityManagementApi* | [**get_track_details_gstin1**](docs/apis/tags/GSTINUtilityManagementApi.md#get_track_details_gstin1) | **get** /v1/utility/gstin/get/track/details/{gstin} | Get GSTIN track details from DB
*IECDetailsManagementApi* | [**get_iec_details**](docs/apis/tags/IECDetailsManagementApi.md#get_iec_details) | **get** /v1/nsdl/get/iec/details/{caseId} | Get IEC details from DB
*IECDetailsManagementApi* | [**update_iec_details1**](docs/apis/tags/IECDetailsManagementApi.md#update_iec_details1) | **post** /v1/nsdl/update/iec/details/{caseId} | Update IEC details from NSDL
*MCASignatoryDetailsManagementApi* | [**get_signatory_details**](docs/apis/tags/MCASignatoryDetailsManagementApi.md#get_signatory_details) | **get** /v1/nsdl/get/signatory/details/{caseId} | Get MCA signatory details from DB
*MCASignatoryDetailsManagementApi* | [**update_signatory_details**](docs/apis/tags/MCASignatoryDetailsManagementApi.md#update_signatory_details) | **post** /v1/nsdl/update/signatory/details/{caseId} | Update MCA signatory details from NSDL
*MemeberOfManagementApi* | [**get_all_memeber**](docs/apis/tags/MemeberOfManagementApi.md#get_all_memeber) | **get** /v1/utility/get/all/member | Get All Memeber
*NSDLENCDCManagementApi* | [**decrypt_data**](docs/apis/tags/NSDLENCDCManagementApi.md#decrypt_data) | **post** /v1/crypto/decrypt | Decrypt NSDL response body
*NSDLENCDCManagementApi* | [**encrypt_data**](docs/apis/tags/NSDLENCDCManagementApi.md#encrypt_data) | **post** /v1/crypto/encrypt | Encrypt NSDL request body
*PANManagementApi* | [**get_details_from_pan_number**](docs/apis/tags/PANManagementApi.md#get_details_from_pan_number) | **post** /v1/pan/get/details | Fetch PAN details from NSDL
*PANManagementApi* | [**get_details_from_pan_number_from_c_ase**](docs/apis/tags/PANManagementApi.md#get_details_from_pan_number_from_c_ase) | **get** /v1/pan/get/details/bycase | Fetch PAN details from DB Case ID
*PaymentDetailsManagementApi* | [**get_payment_details**](docs/apis/tags/PaymentDetailsManagementApi.md#get_payment_details) | **get** /v1/razor/get/payment/details/{paymentId} | Create payment link
*PaymentDetailsManagementApi* | [**get_payment_details1**](docs/apis/tags/PaymentDetailsManagementApi.md#get_payment_details1) | **get** /v1/razor/get/all/payments/details | All Payments
*PaymentDetailsManagementApi* | [**update_iec_details**](docs/apis/tags/PaymentDetailsManagementApi.md#update_iec_details) | **post** /v1/razor/create/payment/link | Create payment link
*ProfileManagementApi* | [**get_balance**](docs/apis/tags/ProfileManagementApi.md#get_balance) | **get** /v1/profile/get/profile/balance | Get Balance
*ProfileManagementApi* | [**get_profile**](docs/apis/tags/ProfileManagementApi.md#get_profile) | **get** /v1/profile/get/profile/{companyId} | Get Company Profile
*ProfileManagementApi* | [**send_otp_for_password_change**](docs/apis/tags/ProfileManagementApi.md#send_otp_for_password_change) | **get** /v1/profile/send/password/otp/{companyId} | Send Password change OTP email
*ProfileManagementApi* | [**send_password_reset_link**](docs/apis/tags/ProfileManagementApi.md#send_password_reset_link) | **get** /v1/profile/send/reset/link | Update Password
*ProfileManagementApi* | [**update_password**](docs/apis/tags/ProfileManagementApi.md#update_password) | **post** /v1/profile/update/password | Update Password
*RateMasterDetailsManagementApi* | [**create_new_rate**](docs/apis/tags/RateMasterDetailsManagementApi.md#create_new_rate) | **post** /v1/rate/new/create | Create new rate
*RateMasterDetailsManagementApi* | [**get_all_rates**](docs/apis/tags/RateMasterDetailsManagementApi.md#get_all_rates) | **get** /v1/rate/get/all | Get all rates
*RateMasterDetailsManagementApi* | [**get_all_services**](docs/apis/tags/RateMasterDetailsManagementApi.md#get_all_services) | **get** /v1/rate/get/services | Get all Services
*RegistrationManagementApi* | [**get_gstin_details_utility_for_verify**](docs/apis/tags/RegistrationManagementApi.md#get_gstin_details_utility_for_verify) | **get** /v1/registration/forverify/get/details/{gstin} | Get GSTIN details from GSP
*RegistrationManagementApi* | [**new_registration**](docs/apis/tags/RegistrationManagementApi.md#new_registration) | **post** /v1/registration/create/new | create new case
*RegistrationManagementApi* | [**verify_pa_number_for_verify**](docs/apis/tags/RegistrationManagementApi.md#verify_pa_number_for_verify) | **post** /v1/registration/forverify/pan/verify | Fetch PAN details from NSDL
*SessionManagementApi* | [**login**](docs/apis/tags/SessionManagementApi.md#login) | **post** /v1/session/login | Login
*SessionManagementApi* | [**logout**](docs/apis/tags/SessionManagementApi.md#logout) | **get** /v1/session/logout | Get all case
*TaskManagementApi* | [**execute_task**](docs/apis/tags/TaskManagementApi.md#execute_task) | **get** /v1/task/execute | Execute Task
*UtilityManagementApi* | [**get_all_details_from_db**](docs/apis/tags/UtilityManagementApi.md#get_all_details_from_db) | **get** /v1/utility/get/all/details | Get All Details
*UtilityManagementApi* | [**get_company_lite_details_utility**](docs/apis/tags/UtilityManagementApi.md#get_company_lite_details_utility) | **post** /v1/utility/company/ciin/lookup | Get Company Lite Details from NSDL
*UtilityManagementApi* | [**get_electricity_details**](docs/apis/tags/UtilityManagementApi.md#get_electricity_details) | **post** /v1/utility/electricity/details | Get Electricity bill details
*UtilityManagementApi* | [**get_gstin_details_utility**](docs/apis/tags/UtilityManagementApi.md#get_gstin_details_utility) | **get** /v1/utility/get/details/{gstin} | Get GSTIN details from GSP
*UtilityManagementApi* | [**get_gstin_status_utility**](docs/apis/tags/UtilityManagementApi.md#get_gstin_status_utility) | **get** /v1/utility/get/status/{gstin} | Get GSTIN status from GSP
*UtilityManagementApi* | [**get_iec_details_utility**](docs/apis/tags/UtilityManagementApi.md#get_iec_details_utility) | **post** /v1/utility/iec/details | Get IEC details from NSDL
*UtilityManagementApi* | [**get_preference_details_gstin_utility**](docs/apis/tags/UtilityManagementApi.md#get_preference_details_gstin_utility) | **get** /v1/utility/get/preference/details/{gstin} | Get GSTIN preference from GSP
*UtilityManagementApi* | [**get_signatory_details_utility**](docs/apis/tags/UtilityManagementApi.md#get_signatory_details_utility) | **post** /v1/utility/signatory/details | Get MCA signatory details from NSDL
*UtilityManagementApi* | [**get_track_details_gstin_utility**](docs/apis/tags/UtilityManagementApi.md#get_track_details_gstin_utility) | **get** /v1/utility/get/track/details/{gstin} | Get GSTIN track details from GSP
*UtilityManagementApi* | [**update_company_master_details**](docs/apis/tags/UtilityManagementApi.md#update_company_master_details) | **post** /v1/utility/company/master/details | Update Company Master Details
*UtilityManagementApi* | [**verify_bank_utility**](docs/apis/tags/UtilityManagementApi.md#verify_bank_utility) | **post** /v1/utility/bank/verify | Verify new bank details
*UtilityManagementApi* | [**verify_pa_number**](docs/apis/tags/UtilityManagementApi.md#verify_pa_number) | **post** /v1/utility/pan/verify | Fetch PAN details from NSDL

## Documentation For Models

 - [APIResponse](docs/models/APIResponse.md)
 - [BankAccountVerification](docs/models/BankAccountVerification.md)
 - [BarCodeShareRequestBody](docs/models/BarCodeShareRequestBody.md)
 - [BlockRequestBody](docs/models/BlockRequestBody.md)
 - [CaseDetails](docs/models/CaseDetails.md)
 - [GstinRequest](docs/models/GstinRequest.md)
 - [LoginRequestBody](docs/models/LoginRequestBody.md)
 - [MCACompanyMasterDataRequest](docs/models/MCACompanyMasterDataRequest.md)
 - [MCASignatoryRequest](docs/models/MCASignatoryRequest.md)
 - [NSDLElectricityBillRequest](docs/models/NSDLElectricityBillRequest.md)
 - [NSDLRequestBody](docs/models/NSDLRequestBody.md)
 - [NewCaseRequestBody](docs/models/NewCaseRequestBody.md)
 - [NewCompanyRegistrationRequest](docs/models/NewCompanyRegistrationRequest.md)
 - [PanRequestBody](docs/models/PanRequestBody.md)
 - [PasswordChangeRequest](docs/models/PasswordChangeRequest.md)
 - [RateRequest](docs/models/RateRequest.md)
 - [SubmitOTP](docs/models/SubmitOTP.md)
 - [UidiaRequestBody](docs/models/UidiaRequestBody.md)

## Documentation For Authorization

 Endpoints do not require authorization.


## Author

gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com
gautam@balajimariline.com

## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in vartulz_compliance_sdk.apis and vartulz_compliance_sdk.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from vartulz_compliance_sdk.apis.default_api import DefaultApi`
- `from vartulz_compliance_sdk.model.pet import Pet`

Solution 1:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import vartulz_compliance_sdk
from vartulz_compliance_sdk.apis import *
from vartulz_compliance_sdk.models import *
```
