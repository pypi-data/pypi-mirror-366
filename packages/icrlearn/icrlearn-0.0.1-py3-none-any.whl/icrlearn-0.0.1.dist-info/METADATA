Metadata-Version: 2.4
Name: icrlearn
Version: 0.0.1
Summary: A scikit-learn compatible package for intra-class rarity models.
Project-URL: Homepage, https://github.com/jannewer/intra-class-rare-learn
Project-URL: Issues, https://github.com/jannewer/intra-class-rare-learn/issues
Author-email: Janne Wernecken <dev@wernecken.com>
License-File: LICENSE
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Requires-Dist: numba>=0.60.0
Requires-Dist: numpy>=2.2.6
Requires-Dist: pandas>=2.3.1
Requires-Dist: pynomaly>=0.3.4
Requires-Dist: scikit-learn>=1.7.1
Description-Content-Type: text/markdown

intra-class-rare-learn - A scikit-learn compatible intra-class rarity learning package
============================================================

![tests](https://github.com//jannewer/intra-class-rare-learn/actions/workflows/python-app.yml/badge.svg)
![doc](https://github.com//jannewer/intra-class-rare-learn/actions/workflows/deploy-gh-pages.yml/badge.svg)

**intra-class-rare-learn** is a scikit-learn compatible intra-class rarity learning package.
It is based on the [template project](https://github.com/scikit-learn-contrib/project-template)
for [scikit-learn](https://scikit-learn.org) compatible extensions,
but was modified to use [uv](https://docs.astral.sh/uv/) instead of pixi.

## Installation

The package can be installed directly from GitHub using uv with `uv add icrlearn git+https://github.com/jannewer/intra-class-rare-learn.git`

## Documentation

Documentation is available at https://jannewer.github.io/intra-class-rare-learn/

## Development
For development, make sure you have uv installed: https://docs.astral.sh/uv/getting-started/installation/

Afterwards, you can do the following:
- run the tests with `uv run task test`
- build the documentation with `uv run task build-doc`
- run black formatting with `uv run task black`
- run ruff linting and formatting with `uv run task ruff`
- run both black and ruff with `uv run task lint`
