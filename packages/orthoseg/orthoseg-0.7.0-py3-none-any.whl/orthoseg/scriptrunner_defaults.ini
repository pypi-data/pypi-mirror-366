# This config file contains the default settings for scriptrunner.
#
# The config used for scriptrunner project is loaded in the following order:
#   1) the project defaults as "hardcoded" in scriptrunner (scriptrunner_defaults.ini)
#   2) any config file specified when starting scriptrunner
# 
# Parameters specified in a config file loaded later in the order above
# overrule the corresponding parameter values specified in a previously 
# loaded config file.

# General settings.
[general]
# The files in the script_dir that should be treated as scripts to be executed.
script_patterns = *.bat, *.sh

# Settings concerning the directories where input/output data is found/put.
[dirs]
# Remarks: 
#   * UNC paths are not supported on Windows, always use mapped drive letters!
#   * always use forward slashes, even on Windows systems

# The scripts_dir, the folder to look for script to execute in. Can either be 
#   * an absolute path 
#   * OR a relative path starting from the location of a specified config file
#   * OR the script_dir can be specified using the command line parameter. 
#     This will override the setting in the config file(s)
script_dir = ./

# Log dir
log_dir = ${script_dir}/log
# Done dir
done_dir = ${script_dir}/done
# Error dir
error_dir = ${script_dir}/error

# Logging configuration. 
[logging]
# The number of log files to keep in a log dir
nb_logfiles_tokeep = 10

# Config to use for the logging. This config is in json, following the 
# conventions as required by logging.dictConfig.
# https://docs.python.org/3/library/logging.config.html#logging-config-dictschema 
# 
# Mind: the location for file logging 
logconfig = {
        "version": 1,
        "disable_existing_loggers": true,
        "formatters": {
            "console": {
                "format": "%(message)s", 
                "datefmt": "%H:%M:%S"
                },
            "file": {
                "format": "%(message)s", 
                "datefmt": null
            }
        },
        "handlers": {
            "console": {
                "level": "INFO",
                "class": "logging.StreamHandler",
                "formatter": "console",
                "stream": "ext://sys.stdout"
            },
            "file": {
                "level": "INFO",
                "class": "logging.handlers.RotatingFileHandler",
                "formatter": "file",
                "filename": "log/{iso_datetime}.log",
                "maxBytes": 10000000,
                "backupCount": 3
            }
        },
        "root": {
            "level": "INFO",
            "handlers": ["console", "file"]
        }
    }